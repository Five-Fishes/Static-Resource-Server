{"version":3,"sources":["constant/user-authority.enum.ts","modules/shared/components/refresh-route.tsx","modules/shared/components/post-login-route.tsx","constant/api-status.enum.ts","constant/notification.enum.ts","modules/shared/components/no-match.tsx","modules/shared/components/switch-with-fallback.tsx","constant/api-endpoints.ts","api/user.api.ts","modules/shared/components/notification.ts","modules/shared/reducers/app-reducers.ts","modules/login/pages/login.tsx","constant/pagination-config.ts","modules/purchase-requisition-template/components/template-table.tsx","api/purchase-requisition-template.api.ts","utils/cloning/cloning-lib-wrapper.ts","utils/cloning/cloning-lib-wrapper-impl.tsx","modules/purchase-requisition-template/components/template-browser.tsx","modules/purchase-requisition-template/components/template-indexer.ts","utils/search/native-search.ts","utils/api/query-params-builder.ts","api/component.api.ts","api/vendor-master.api.ts","modules/shared/components/debounce-select/debounce-select.tsx","modules/purchase-requisition-template/components/vendor-debounce-select.tsx","modules/purchase-requisition-template/components/component-code-selector.tsx","modules/purchase-requisition-template/pages/purchase-requisition-template-list.tsx","modules/purchase-requisition-template/pages/index.tsx","constant/change-event.enum.ts","modules/purchase-requisition-request/components/template-browser/template-browser.tsx","hook/window-resized.hook.ts","constant/display/header.constant.ts","modules/purchase-requisition-request/components/request-constructor/request-constructor.tsx","constant/purchase-requisition-request/purchase-requisition-request-table-display-settings.ts","modules/purchase-requisition-request/components/table-column-display-settings/table-column-display-settings.tsx","modules/purchase-requisition-request/components/request-constructor/request-constructor-indexer.ts","constant/sort.enum.ts","api/purchase-requisition-request.api.ts","modules/purchase-requisition-request/pages/purchase-requisition-request-page.tsx","constant/purchase-requisition-approval-status.enum.ts","constant/display/purchase-requisition-request.constant.ts","api/purchase-requisition-approval.api.ts","api/purchase-order.api.ts","modules/purchase-requisition-approval/components/filter-and-sort/filter-and-sort.tsx","modules/purchase-requisition-approval/components/component-selector/component-selector.tsx","dto/i-purchase-requisition-approval-item.dto.ts","utils/date-time/date-time-format.ts","modules/purchase-requisition-approval/components/purchase-requisition-request-selector/purchase-requisition-request-selector.tsx","modules/shared/components/stateful-input/stateful-text-input/stateful-text-input.tsx","modules/shared/components/stateful-input/stateful-number-input/stateful-number-input.tsx","modules/purchase-requisition-approval/components/purchase-requisition-approval-table/purchase-requisition-approval-table-indexer.ts","modules/purchase-requisition-approval/components/purchase-requisition-approval-table/purchase-requisition-approval-table.tsx","modules/purchase-requisition-approval/pages/purchase-requisition-approval-page.tsx","constant/display/purchase-requisition-approval.constant.ts","modules/purchase-requisition-submissioin-record/components/submission-table.tsx","modules/purchase-requisition-submissioin-record/components/submission-record-browser/submission-record-browser.tsx","modules/purchase-requisition-submissioin-record/components/submission-indexer.ts","modules/purchase-requisition-submissioin-record/pages/purchase-requisition-submission-page.tsx","modules/purchase-order/components/purchase-order-indexer.ts","modules/purchase-order/components/purchase-order-record-browser.tsx","utils/file-download/file-download.ts","modules/purchase-order/components/purchase-order-table.tsx","modules/purchase-order/pages/purchase-order-page.tsx","utils/api/api-error-handler.ts","modules/shared/components/dynamic-column-table/dynamic-column-table.tsx","modules/outstading-purchase-order/components/outstanding-purchase-order-table.tsx","modules/outstading-purchase-order/pages/outstanding-purchase-order-page.tsx","api/favourite-vendor.api.ts","modules/outstanding-purchase-order-by-vendor/components/favourite-vendor-drawer.tsx","modules/outstanding-purchase-order-by-vendor/components/outstanding-purchase-order-by-vendor-table.tsx","modules/outstanding-purchase-order-by-vendor/page/outstanding-purchase-order-by-vendor-page.tsx","api/purchase-order-receipt.api.ts","constant/display/purchase-order-receipt.constant.ts","constant/purchase-order-receipt-item-status.enum.ts","modules/purchase-order-receipt-record/components/purchase-order-receipt-table/purchase-order-receipt-table.tsx","modules/purchase-order-receipt-record/components/purchase-order-receipt-search-form/purchase-order-receipt-search-form.tsx","modules/purchase-order-receipt-record/pages/purchase-order-receipt-record-page.tsx","constant/purchase-order-receipt-creation/purchase-order-receipt-creation-table-display-settings.ts","api/purchase-order-receipt-header.api.ts","modules/purchase-order-receipt-creation/components/receipt-header-info/receipt-header-info.tsx","modules/purchase-order-receipt-creation/components/request-constructor/request-constructor.tsx","modules/purchase-order-receipt-creation/components/request-constructor/request-constructor-indexer.ts","modules/purchase-order-receipt-creation/components/request-remark/request-remark.tsx","api/api-mocks.api.ts","modules/purchase-order-receipt-creation/components/table-column-display-settings/table-column-display-settings.tsx","modules/purchase-order-receipt-creation/pages/purchase-order-receipt-creation-page.tsx","utils/api/query-params-hook.ts","constant/display/purchase-order-receipt-creation.constant.ts","modules/Routes.tsx","modules/layout/component/header/header.tsx","modules/layout/component/sider/sider.tsx","App.tsx","reportWebVitals.ts","modules/shared/reducers/index.ts","modules/config/store.ts","index.tsx"],"names":["UserAuthority","PageRefresh","destination","useParams","to","ApiResponseStatus","NotificationType","NotificationPlacement","connect","appState","loggedIn","userGroup","props","history","useHistory","location","useLocation","useEffect","userAuthority","localStorage","getItem","toUpperCase","ADMIN","pathname","includes","push","NoMatch","sanitisedPath","replace","trim","className","type","SwitchWithFallback","children","path","LOGIN","USER","PURCHASE_REQUISITION_TEMPLATE","PURCHASE_REQUISITION_REQUEST","PURCHASE_REQUISITION_REQUEST_REGEX","RegExp","PURCHASE_REQUISITION_APPROVAL","PURCHASE_REQUISITION_APPROVAL_ITEM","PURCHASE_ORDER","PURCHASE_ORDER_DOWNLOAD","PURCHASE_ORDER_OUTSTANDING_ITEM","PURCHASE_ORDER_RECEIPT_HEADER","PURCHASE_ORDER_RECEIPT","COMPONENT","COMPONENT_SEARCH_BULK","COMPONENT_STOCK_BALANCE","GET_COMPONENT_BY_SEARCH","VENDOR_MASTER","FAVOURITE_VENDOR","loginApi","login","a","axios","post","popNotification","message","info","placement","bottomRight","description","notification","duration","ACTION_TYPES","initialState","loading","setLoading","isLoading","payload","appReducer","state","action","console","log","mapDispatchToProps","setItem","onFinish","values","response","status","SUCCESS","loginResponse","data","error","name","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","Password","offset","htmlType","TABLE_PAGINATION_CONFIG","pageSizeOptions","hideOnSinglePage","defaultPageSize","showSizeChanger","PurchaseRequisitionTemplateTable","confirm","Modal","PURCHASE_REQUISITION_TEMPLATE_TABLE_COLUMN","title","dataIndex","key","align","width","render","text","record","componentName","vendorName","id","index","DeleteOutlined","onClick","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","deleteTemplateComponent","templateItems","undefined","filteredItems","currentTemplate","purchaseRequisitionTemplateItemList","style","maxWidth","dataSource","columns","rowKey","scroll","y","pagination","purchaseRequisitionTemplate","put","getPurchaseRequisitionTemplate","get","purchaseRequisitionTemplateId","delete","CLONING_LIB","input","lodash","cloneDeep","clone","PurchaseRequisitionTemplateBrowser","useState","selectedIndex","setSelectedIndex","newTemplateText","setNewTemplateText","purchaseRequisitionTemplates","setPurchaseRequisitionTemplates","deleteTemplate","selectedPurchaseRequisitionTemplate","deletePurchaseRequisitionTemplate","then","apiResponse","setSelectedTemplate","success","catch","errResponse","errorMessage","splice","deepCopy","deepClone","placeholder","value","onChange","e","target","newTemplate","templateName","remarks","length","createNewTemplate","map","template","shape","size","setTimeout","ellipsis","generateIndex","purchaseRequisitionTemplateItem","componentCode","toLowerCase","SearchEngine","searchIn","genIndex","searchableModelList","genIndexFn","this","element","elem","searchWith","filter","getSearchText","searchInput","QueryParamsBuilder","url","params","paramName","paramsIsObject","Object","keys","forEach","inferredParamName","paramValue","endsWith","substr","getItemBySearchComponentAndVendorId","component","vendorId","withUrl","addParams","build","getItemBySearchComponentOrVendor","vendor","bulkGetItemBySearch","componentSearch","getStockBalance","getVendor","DebounceSelect","fetchOptions","debounceTimeout","React","fetching","setFetching","options","setOptions","fetchRef","useRef","debounceFetcher","useMemo","debounce","current","fetchId","newOptions","labelInValue","filterOption","onSearch","notFoundContent","VendorDebounceSelect","selectedVendor","setSelectedVendor","vendors","setVendors","getVendorsWrapper","vendorInput","res","vendorMaster","vendorID","showSearch","selectedComponent","find","ComponentCodeSelector","selectedComponentCode","setSelectedComponentCode","setComponents","componentInput","uniqueComponentCode","Set","uniqueComponents","has","add","setSelectedPurchaseRequisitionTemplate","filteredTemplateItems","setFilteredTemplateItems","excelFile","setExcelFile","excelData","setExcelData","searchText","setSearchText","searchEngine","editTemplateNameModal","setEditTemplateNameModal","newTemplateName","setNewTemplateName","Form","useForm","insertItemsForm","getTemplates","closeTemplateNameModal","loadDatabaseWithExcelData","Boolean","formattedExcelData","formatExcelData","item","insertExcelItemToTemplate","itemToInsert","sequence","insertIndex","itemSequence","sortedResult","updateTemplateItemsSequence","row","packagingSize","addNewComponentAsTemplateItem","componentSearchDTO","templateItem","insertItemToTemplate","selectedItem","itemSquence","generateErrorMessage","Error","resetFields","level","EditOutlined","hidden","Search","allowClear","bordered","sanitisedSearchText","filteredData","updateEngine","search","borderBottom","position","right","itemIndex","height","minWidth","files","readXlsxFile","rows","layout","min","updatePurchaseRequisitionTemplate","createPurchaseRequisitionTemplate","visible","footer","onCancel","ChangeEvent","Routes","match","PurchaseRequisitionTemplateList","useWindowResized","window","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","PurchaseRequisitionRequestConstructor","updateTemplate","componentAndStockBalance","setComponentAndStockBalance","getStockBalanceByComponentCode","stockBalance","searchResult","tempComponentAndStockBalanceMap","Map","balanceQty","set","dataChanged","changeEventType","changeEvent","valueToUpdate","group","groupEnd","NUMBER_INPUT","DATE_TIME","toDate","TEXT_INPUT","updatedSelectedPurchaseRequisitionApproval","selectedPurchaseRequisitionApproval","idToUpdate","updatedSelectedPurchaseRequisitionApprovalItems","updateData","CURRENT_TIME","tableColumnDisplaySettingsUpdateTime","getTime","COLUMNS","Column","balance","noOfPacks","quantity","deliveryDate","inputReadOnly","moment","updatedPurchaseRequisitionTemplate","updateAllDeliveryDate","trigger","fontSize","castedValue","Date","clearInput","onConfirm","clearAllInput","updatedPurchaseRequisitionTemplateItems","clearInputByItemId","ClearOutlined","APP_HEADER_HEIGHT","tableColumnDisplaySettings","columnDisplaySetting","columnKey","DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS","settingDisplayName","visibilityEditable","PurchaseRequisitionRequestTableDisplaySettings","setTableColumnDisplaySettings","savedPurchaseRequisitionRequestTableDisplaySettings","parsedSavedPurchaseRequisitionRequestTableDisplaySettings","JSON","parse","saveDisplaySettings","stringify","moveColumn","moveIndex","currentIndex","findIndex","setting","updatedTableColumnDisplaySettings","destinationItem","warning","itemLayout","renderItem","checked","updateVisibility","disabled","UpOutlined","DownOutlined","removeItem","UndoOutlined","transform","Sort","createPurchaseRequisitionRequest","purchaseRequisitionRequest","getPurchaseRequisitionRequest","startDate","endDate","sortBy","sort","DES","ASC","wrappedParams","PurchaseRequisitionApprovalStatus","submissionInProgress","setSubmissionInProgress","selectedTemplate","setTableColumnDisplaySettingsUpdateTime","setSearchResult","showTableDisplaySettings","setShowTableDisplaySettings","initSearchResult","openTableDisplaySettings","submitPurchaseRequisitionRequest","purchaseRequisitionRequestItems","items","createdDate","templateId","result","event","searchOutput","SettingOutlined","TextArea","updatedTemplate","onClose","DISPLAY_TEXT_MAP","PurchaseRequisitionApprovalStatusDisplayText","displayText","toString","getPurchaseRequisitionApproval","purchaseRequisitionApproval","postPurchaseRequisitionApprovalItem","purchaseRequisitionApprovalId","purchaseRequisitionApprovalItem","purchaseApprovalId","getPurchaseOrders","downloadPOFromAPI","purchaseOrderId","responseType","getOutstandingPurchaseOrder","page","paginationParams","vendorIdParam","getGrnReceiptWithVendorOutstandingPO","grnNo","apiUrl","TO_CONFIRM","CONFIRMED","ISSUED","FilterAndSort","sortChangedHandler","dateRangeChangedHandler","RangePicker","format","dateRange","allowEmpty","Option","ReloadOutlined","ComponentSelector","getItemsWrapper","searchString","components","componentToAdd","setComponentToAdd","setNoOfPacks","setDeliveryDate","approvalItem","Number","itemCost","dateString","onAddComponent","convertToLocalString","dateTime","dateOnly","dateTimeValue","localeDate","convertToLocalDate","localeTime","convertToLocalTime","stack","date","getDate","getMonth","getFullYear","toLocaleTimeString","PurchaseRequisitionSelector","purcahseRequisitionApprovalList","APPROVAL_LIST","setSelectedPurcahseRequisitionApproval","purchaseRequisitionApprovalItems","every","CheckCircleOutlined","color","StatefulTextInput","StatefulNumberInput","PurchaseRequititionApprovalTable","updatePurchaseRequisitionApproval","SELECTED_PURCHASE_REQUISITION_APPROVAL_ITEMS","uuidv4","some","udpatedValue","updatedApproval","updateApprovalItemStatus","isToConfirm","isQtyMoreThan0","recordStatus","removeApprovalItem","approvalUpdated","setApprovalUpdated","setSort","setDateRange","purchaseRequisitionApprovalList","setPurchaseRequisitionApprovalList","filteredPurchaseRequisitionApprovalList","setFilteredPurchaseRequisitionApprovalList","setSelectedPurchaseRequisitionApproval","getApprovals","approvals","filteredAndSortedList","approval","approval1","approval2","selectedId","selectedApproval","updatedPurcahseRequisitionApprovalList","onAddComponentHandler","statusText","setPurcahseRequisitionApprovalList","tooltip","cursor","putPurchaseRequisitionApproval","issuePO","clonedSelectedPurchaseRequisitionApproval","updatedApprovalItems","PurchaseRequisitionSubmissionTable","PURCHASE_REQUISITION_SUBMISSION_TABLE_COLUMN","submissionItems","currentSubmissionRecord","PurchaseRequisitionSubmissionBrowser","purchaseRequisitionSubmissios","submission","setSelectedSubmissionRecord","setFilteredSubmissionsItems","genereateIndex","purchaseRequisitionSubmissionItem","PurchaseRequisitionSubmissionPage","setPurchaseRequisitionSubmissions","filteredPurchaseRequisitionSubmissios","setFilteredPurchaseRequisitionSubmissions","selectedSubmissionRequest","setSelectedSubmissionRequest","filteredSubmissionItems","setFilteredSubmissionItems","startDateFilterCriteria","setStartDateFilterCriteria","endDateFilterCriteria","setEndDateFilterCriteria","sortCriteria","setSortCriteria","getSubmissions","filterSubmissionRequest","sortSubmissionRequestByDate","filteredResult","submissionCreatedDate","submission1","submission2","role","href","ArrowRightOutlined","dateValues","startDateValue","setHours","endDateValue","filterByDateRange","readOnly","purchaseOrder","poNumber","PurchaseOrderBrowser","purchaseApprovalOrders","overflowY","maxHeight","purchaseApprovalOrder","setSelectedPurchaseApprovalOrder","setFilteredPurchaseOrders","purchaseOrders","CheckCircleTwoTone","completed","twoToneColor","downloadBlobAsFileWithNameAndExtension","blob","fileName","fileExtension","link","document","createElement","body","appendChild","display","download","URL","createObjectURL","click","revokeObjectURL","PurchaseOrderTable","PURCHASE_ORDER_TABLE_COLUMN","downloadPO","DownloadOutlined","emailed","emailPO","MailOutlined","Blob","revisionDate","toDateString","downloadAllPO","currentPurchaseApprovalOrderRecord","downloadRequests","Promise","all","emailPurchaseOrder","emailAllPO","summary","Summary","fixed","Row","Cell","PurchaseOrderPage","setPurchaseApprovalOrders","filteredPurchaseApprovalOrders","setFilteredPurchaseApprovalOrders","selectedPurchaseApprovalOrder","filteredPurchaseOrders","getPurchaseApprovalOrderList","getPurchaseApprovalOrdersProgress","filterPurchaseApprovalOrders","sortPurchaseApprovalOrderByDate","downloaded","purchaseApprovalOrderCreatedDate","purchaseApprovalOrder1","purchaseApprovalOrder2","gap","alignContent","DynamicColumn","DynamicColumnTable","setVisible","displaySettingKey","tableKey","childNode","defaultTableColumnDisplaySettings","column","mapped","drawerVisible","setDrawerVisible","stored","settingClassName","ds","node","drawerWidth","OutstandingPurchaseOrderTable","outstandingPurchaseOrderSearchResult","outstandingPurchaseOrderTableColumnSettingVisible","setOutstandingPurchaseOrderTableColumnSettingVisible","orderQuantity","orderQuantityPack","receivedQuantity","receivedQuantityPack","openQuantity","openQuantityPack","purchaseOrderItemSearchIndexer","OutstandingPurchaseOrderPage","outstandingPurchaseOrder","setOutstandingPurchaseOrder","setOutstandingPurchaseOrderSearchResult","outstandingPurchaseOrderResponse","getFavouriteVendor","createFavouriteVendor","createdBy","FavouriteVendorDrawer","setSelectedFavouriteVendorID","favouriteVendorList","setFavouriteVendorList","getFavouriteVendorRes","favouriteVendor","onSelectVendor","OutstandingPurchaseOrderByVendorTable","OutstandingPurchaseOrderByVendorPage","routingHistory","tableSettingVisible","setTableSettingVisible","favouriteVendortVisible","setFavouriteVendortVisible","selectedVendorID","setSelectedVendorID","poReceiptDate","setPoReceiptDate","onMarkAsFavouriteVendorClicked","StarOutlined","getPurchaseOrderReceiptHeaders","searchPurchaseOrderReceiptHeaders","poReceiptHeaderCriteria","createPurchaseOrderReceiptHeader","purchaseReceiptHeader","getPurchaseOrderReceiptHeaderByGrnNo","PurchaseOrderReceiptItemStatus","PurchaseOrderReceiptTable","poReceiptItems","PURCHASE_ORDER_RECEIPT_TABLE_COLUMN","grnDate","openPOReceipt","purchaseOrderReceiptHeader","PurchaseOrderReceiptSearchForm","performSearch","searchByField","setSearchByField","startGrnDateCriteria","setStartGrnDateCriteria","endGrnDateCriteria","setEndGrnDateCriteria","form","searchCriteria","startGrnDate","toISOString","endGrnDate","searchValue","keyword","initialValue","startDateUTC","UTC","endDateUTC","setGrnDateRange","purchaseOrderReceiptHeaders","setPurchaseOrderReceiptHeaders","getPurchaseOrderReceiptHeaderList","DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS","PurchaseOrderReceiptItemStatusDisplayText","createPurchaseOrderReceiptHeaderByVendorId","PENDING","RECEIVED","PurchaseOrderReceiptHeaderInfo","poReceiptHeader","setPOReceiptHeader","doNumber","setDONumber","setGrnNo","getNewPOReceiptHeader","getPOReceiptHeaderByGrnNo","PurchaseOrderReceiptCreationRequestConstructor","updatePurchaseOrderReceiptItem","updatedPurchaseOrderItemList","updatedList","receivingQuantityPack","uomPack","receivingQuantity","uom","updatePurchaseOrderReceiptItemStatus","purchaseOrderReceiptItem","mock","PurchaseOrderReceiptCreationRequestRemarks","setRemarks","reference","setReference","PurchaseOrderReceiptCreationTableDisplaySettings","TABLE_DISPLAY_SETTINGS_NAME","savedPurchaseOrderReceiptCreationTableDisplaySettings","parsedSavedPurchaseOrderReceiptCreationTableDisplaySettings","purchaseOrderItem","setPurchaseOrderItem","showRemarksSider","setShowRemarksSider","queryParams","URLSearchParams","useQuery","purchaseOrderItemDeepCopy","searchResultDeepCopy","openRemarksSider","submitPurchaseOrderReceiptCreation","purchaseOrderReceiptItems","pid","unitCost","poReceiptDtoList","FormOutlined","list","confirmedItems","exact","LoginPage","authority","PurchaseRequisitionTemplateRoute","NORMAL","PurchaseRequisitionRequestPage","PurchaseRequisitionApprovalPage","PurchaseOrderReceiptRecordPage","PurchaseOrderReceiptCreationPage","logout","MenuOutlined","block","triggerSideBar","AppSider","LaptopOutlined","toggleSidebar","closable","sideBarOpened","headerStyle","minHeight","backgroundColor","bodyStyle","padding","theme","mode","defaultSelectedKeys","FileOutlined","FileTextOutlined","HistoryOutlined","FileDoneOutlined","FileSyncOutlined","DatabaseOutlined","process","REACT_APP_MOCK","MockAdapter","onPost","reply","onGet","email","purchaseOrderItems","setDate","currentIndexPlus_1","lst","getMock","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","setSideBarOpened","spinning","indicator","LoadingOutlined","spin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","reducers","applyMiddleware","thunk","defaults","baseURL","validateStatus","interceptors","request","use","req","err","reject","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4cf961c2.chunk.js","sourcesContent":["export enum UserAuthority {\n  ADMIN = 'ADMIN',\n  NORMAL = 'NORMAL',\n}\n","import { Redirect, useParams } from 'react-router';\n\n/** @deprecated Do not use this component, it **was** meant to support CSR when hitting WhiteLabelError */\nconst PageRefresh: React.FC = () => {\n  const destination = `/${useParams<IPageRefreshRouteParams>().destination}`;\n\n  return <Redirect to={destination} />;\n};\n\ninterface IPageRefreshRouteParams {\n  destination: string;\n}\n\nexport default PageRefresh;\n","import { UserAuthority } from '@constant/user-authority.enum';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, RouteProps, useHistory, useLocation } from 'react-router-dom';\nimport { IRootState } from '../reducers';\n\ninterface IPostLogInRouteProps extends RouteProps, StateProps, DispatchProps {\n  authority: UserAuthority;\n}\n\nconst PostLogInRoute: React.FC<IPostLogInRouteProps> = (props) => {\n  const history = useHistory();\n  const location = useLocation()\n\n  useEffect(() => {\n    const userAuthority = localStorage.getItem('authority');\n    if (userAuthority) {\n      if (userAuthority.toUpperCase() !== UserAuthority.ADMIN) {\n        if (!location.pathname.includes('purchase-requisition-request') ) {\n          history.push('/purchase-requisition-request');\n        }\n      }\n    }\n  }, [location, history]);\n\n  const isLoggedIn = props.loggedIn;\n\n  if (isLoggedIn) {\n    return <Route {...props} />;\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nconst mapStateToProps = ({ appState }: IRootState) => ({\n  loggedIn: appState.loggedIn,\n  userGroup: appState.userGroup,\n});\n\nconst mapDispatchToProps = {};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostLogInRoute);\n","export enum ApiResponseStatus {\n  SUCCESS = 200,\n  UNAUTHORIZED = 401,\n}\n","export enum NotificationType {\n  success = 'success',\n  error = 'error',\n  info = 'info',\n  warning = 'warning',\n}\n\nexport enum NotificationPlacement {\n  topLeft = 'topLeft',\n  topRight = 'topRight',\n  bottomLeft = 'bottomLeft',\n  bottomRight = 'bottomRight',\n}\n","import Title from 'antd/lib/typography/Title';\nimport { useLocation } from 'react-router-dom';\n\nconst NoMatch: React.FC = () => {\n  const location = useLocation();\n  const sanitisedPath: string = location.pathname.replace(/\\/|-/g, ' ').trim() + ' page';\n\n  return (\n    <div className=\"d-flex justify-content-center h-100\">\n      <Title className=\"align-self-center text-center p-5\" type=\"secondary\">\n        {sanitisedPath} is not available\n      </Title>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { Route, Switch, SwitchProps } from 'react-router';\nimport NoMatch from './no-match';\n\ninterface ISwitchWithFallbackProps extends SwitchProps {}\n\nconst SwitchWithFallback: React.FC<ISwitchWithFallbackProps> = (props) => {\n  return (\n    <Switch {...props}>\n      {props.children}\n      <Route path=\"*\">\n        <NoMatch />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default SwitchWithFallback;\n","/**\n * Authentication | User\n */\nexport const USER: string = 'user';\nexport const LOGIN: string = USER + '/login';\n\n/**\n * Purchase Requisition Template\n */\nexport const PURCHASE_REQUISITION_TEMPLATE: string = 'purchase-template';\n\n/**\n * Purchase Requisition Request\n */\nexport const PURCHASE_REQUISITION_REQUEST: string = 'purchase-requisition';\nexport const PURCHASE_REQUISITION_REQUEST_REGEX: RegExp = new RegExp(`${PURCHASE_REQUISITION_REQUEST}*`);\n\n/**\n * Purchase Requisition Approval\n */\nexport const PURCHASE_REQUISITION_APPROVAL: string = 'purchase-requisition/approval';\nexport const PURCHASE_REQUISITION_APPROVAL_ITEM: string = PURCHASE_REQUISITION_APPROVAL + '/item';\n\n/**\n * Purchase Order\n */\nexport const PURCHASE_ORDER: string = 'purchase-order';\nexport const PURCHASE_ORDER_DOWNLOAD: string = PURCHASE_ORDER + '/download';\nexport const PURCHASE_ORDER_OUTSTANDING_ITEM: string = PURCHASE_ORDER + '/outstanding-item';\nexport const PURCHASE_ORDER_REGEX: RegExp = new RegExp(`${PURCHASE_ORDER}*`);\n\n/**\n * Purchase Order Receipt\n */\nexport const PURCHASE_ORDER_RECEIPT_HEADER: string = 'purchase-order-receipt-header';\nexport const PURCHASE_ORDER_RECEIPT: string = 'purchase-order-receipt';\n\n/**\n * Component API\n */\nexport const COMPONENT: string = 'component';\nexport const COMPONENT_SEARCH_BULK: string = COMPONENT + '/bulk-search';\nexport const COMPONENT_STOCK_BALANCE: string = COMPONENT + '/stock-balance';\nexport const GET_COMPONENT_BY_SEARCH: RegExp = new RegExp(`${COMPONENT}*`);\n\n/**\n * Item Master\n */\nexport const ITEM_MASTER: string = 'item-master';\n\n/**\n * Item Master\n */\nexport const VENDOR_MASTER: string = 'vendor-master';\nexport const FAVOURITE_VENDOR: string = 'favourite-vendor';\n","import { LOGIN } from '@constant/api-endpoints';\nimport { Login } from '@dto/i-login.dto';\nimport axios from 'axios';\n\nexport async function loginApi(login: Login) {\n  return await axios.post<string>(LOGIN, login);\n}\n","import { NotificationType, NotificationPlacement } from '@constant/notification.enum';\nimport { notification } from 'antd';\n\nexport const popNotification = (message: string, type: NotificationType = NotificationType.info, placement: NotificationPlacement = NotificationPlacement.bottomRight, description?: string) => {\n  notification[type]({\n    message: message,\n    description: description,\n    duration: 3,\n    placement: placement,\n  });\n};\n","import { AnyAction } from 'redux';\nexport interface IAppState {\n  loading: boolean;\n  loggedIn: boolean;\n  userGroup: string;\n}\n\nexport const ACTION_TYPES = {\n  SET_LOADING: 'app/SET_LOADING',\n  LOGOUT: 'app/LOGOUT',\n  LOGIN: 'app/LOGIN',\n};\n\nexport const initialState: IAppState = {\n  loading: false,\n  loggedIn: !!localStorage.getItem('authority'),\n  userGroup: localStorage.getItem('authority') ?? '',\n};\n\n// Reducer\nconst appReducer = (state: IAppState = initialState, action: AnyAction): IAppState => {\n  console.log(action);\n  switch (action.type) {\n    case ACTION_TYPES.SET_LOADING:\n      const { loading } = action.payload;\n      return {\n        ...state,\n        loading: loading,\n      };\n    case ACTION_TYPES.LOGOUT:\n      return {\n        ...state,\n        loggedIn: false,\n      };\n    case ACTION_TYPES.LOGIN:\n      return {\n        ...state,\n        loggedIn: true,\n        userGroup: action.userGroup,\n      };\n    default:\n      return state;\n  }\n};\n\n// actions\nexport const setLoading = (isLoading: boolean) => ({\n  type: ACTION_TYPES.SET_LOADING,\n  payload: {\n    loading: isLoading,\n  },\n});\n\nexport const logout = () => {\n  localStorage.removeItem('authority');\n  return {\n    type: ACTION_TYPES.LOGOUT,\n  };\n};\n\nexport const login = (userGroup: string) => {\n  localStorage.setItem('authority', userGroup);\n  return {\n    type: ACTION_TYPES.LOGIN,\n    payload: {\n      userGroup: userGroup,\n    },\n  };\n};\n\nexport default appReducer;\n","import { loginApi } from '@api/user.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { NotificationType } from '@constant/notification.enum';\nimport { Login } from '@dto/i-login.dto';\nimport { popNotification } from '@module/shared/components/notification';\nimport { IRootState } from '@module/shared/reducers';\nimport { login } from '@module/shared/reducers/app-reducers';\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\ninterface ILoginPageProps extends StateProps, DispatchProps {}\n\nconst LoginPage: React.FC<ILoginPageProps> = (props) => {\n  const onFinish = async (values: Login) => {\n    console.log('Success:', values);\n    const response = await loginApi(values);\n\n    if (response && response.status === ApiResponseStatus.SUCCESS) {\n      const loginResponse = response.data;\n      props.login(loginResponse);\n    } else {\n      console.error('Error Response', response);\n      popNotification(response.data, NotificationType.error);\n    }\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return props.loggedIn ? (\n    <Redirect to={'/purchase-requisition-template'} />\n  ) : (\n    <Form name=\"basic\" labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\">\n      <Form.Item label=\"User ID\" name=\"userId\" rules={[{ required: true, message: 'Please input your user ID!' }]}>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]}>\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst mapStateToProps = ({ appState }: IRootState) => ({\n  loggedIn: appState.loggedIn,\n});\nconst mapDispatchToProps = {\n  login,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import { TablePaginationConfig } from 'antd';\n\nexport const TABLE_PAGINATION_CONFIG: TablePaginationConfig = {\n  pageSizeOptions: ['5', '10', '20', '50', '100'],\n  hideOnSinglePage: false,\n  defaultPageSize: 100,\n  showSizeChanger: true,\n};\n","import React from 'react';\nimport { Table, Button, Modal } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n\nimport { TABLE_PAGINATION_CONFIG } from '@constant/pagination-config';\nimport { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\nimport { IPurchaseRequisitionTemplate } from '@dto/i-purchase-requisition-template.dto';\n\ninterface IPurchaseRequisitionTemplateTableProps {\n  readonly currentTemplate?: IPurchaseRequisitionTemplate;\n  deleteTemplateComponent: (itemIndex: number) => void;\n  filteredItems?: IPurchaseRequisitionTemplateItem[];\n}\n\nconst PurchaseRequisitionTemplateTable: React.FC<IPurchaseRequisitionTemplateTableProps> = (props) => {\n  const { confirm } = Modal;\n\n  const PURCHASE_REQUISITION_TEMPLATE_TABLE_COLUMN: ColumnsType<IPurchaseRequisitionTemplateItem> = [\n    {\n      title: 'Row',\n      dataIndex: 'sequence',\n      key: 'row',\n      align: 'center',\n      width: \"65px\",\n    },\n    {\n      title: 'Component',\n      dataIndex: 'componentCode',\n      key: 'component',\n      align: 'center',\n      width: \"322px\",\n      render: (text: string, record: IPurchaseRequisitionTemplateItem) => (\n        <span>\n          {text} - {record.componentName}\n        </span>\n      ),\n    },\n    {\n      title: 'Vendor',\n      dataIndex: 'vendorId',\n      key: 'vendor',\n      align: 'center',\n      width: \"309px\",\n      render: (text: string, record: IPurchaseRequisitionTemplateItem) => (\n        <span>\n          {text} - {record.vendorName}\n        </span>\n      ),\n    },\n    {\n      title: 'Packing Size (kgs per pack)',\n      dataIndex: 'packagingSize',\n      key: 'packingSize',\n      align: 'center',\n      width: \"136px\",\n    },\n    {\n      title: 'Action',\n      dataIndex: 'id',\n      key: 'action',\n      align: 'center',\n      width: \"88px\",\n      render: (id: number, record: IPurchaseRequisitionTemplateItem, index: number) => (\n        <Button type=\"text\">\n          <DeleteOutlined\n            onClick={() => {\n              confirm({\n                title: 'Are you sure?',\n                icon: <ExclamationCircleOutlined />,\n                content: \"You won't be able to revert it\",\n                okText: 'Delete',\n                okType: 'primary',\n                cancelText: 'Cancel',\n                onOk() {\n                  props.deleteTemplateComponent(index);\n                },\n              });\n            }}\n          />\n        </Button>\n      ),\n    },\n  ];\n\n  const templateItems = props.filteredItems === undefined ? (props.currentTemplate?.purchaseRequisitionTemplateItemList ?? []) : props.filteredItems;\n  return (\n    <>\n      <Table className=\"my-4\" style={{ width: \"940px\", maxWidth: \"1000px\" }} dataSource={templateItems} columns={PURCHASE_REQUISITION_TEMPLATE_TABLE_COLUMN} rowKey=\"sequence\" scroll={{ y: 'calc(100vh - 250px)' }} pagination={TABLE_PAGINATION_CONFIG}></Table>\n    </>\n  );\n};\n\nexport default PurchaseRequisitionTemplateTable;\n","import axios from 'axios';\nimport { IPurchaseRequisitionTemplate } from '@dto/i-purchase-requisition-template.dto';\nimport { PURCHASE_REQUISITION_TEMPLATE } from '@constant/api-endpoints';\n\nexport async function createPurchaseRequisitionTemplate(purchaseRequisitionTemplate: IPurchaseRequisitionTemplate) {\n  return await axios.post<IPurchaseRequisitionTemplate>(PURCHASE_REQUISITION_TEMPLATE, purchaseRequisitionTemplate);\n}\n\nexport async function updatePurchaseRequisitionTemplate(purchaseRequisitionTemplate: IPurchaseRequisitionTemplate) {\n  return await axios.put<IPurchaseRequisitionTemplate>(`${PURCHASE_REQUISITION_TEMPLATE}/${purchaseRequisitionTemplate.id}`, purchaseRequisitionTemplate);\n}\n\nexport async function getPurchaseRequisitionTemplate() {\n  return await axios.get<IPurchaseRequisitionTemplate[]>(PURCHASE_REQUISITION_TEMPLATE);\n}\n\nexport async function deletePurchaseRequisitionTemplate(purchaseRequisitionTemplateId: number) {\n  return await axios.delete<IPurchaseRequisitionTemplate>(`${PURCHASE_REQUISITION_TEMPLATE}/${purchaseRequisitionTemplateId}`);\n}\n","import { LodashCloningLib } from './cloning-lib-wrapper-impl';\n\nexport interface CloningLib {\n  deepClone: <T>(input: T) => T;\n  shallowClone: <T>(input: T) => T;\n}\n\nconst CLONING_LIB: CloningLib = new LodashCloningLib();\n\nexport default CLONING_LIB;\n","import { CloningLib } from './cloning-lib-wrapper';\nimport lodash from 'lodash';\n\nexport class LodashCloningLib implements CloningLib {\n  deepClone<T>(input: T) {\n    return lodash.cloneDeep<T>(input);\n  }\n  shallowClone<T>(input: T) {\n    return lodash.clone<T>(input);\n  }\n}\n","import { deletePurchaseRequisitionTemplate, getPurchaseRequisitionTemplate } from '@api/purchase-requisition-template.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { IPurchaseRequisitionTemplate } from '@dto/i-purchase-requisition-template.dto';\nimport { useState } from 'react';\nimport { Button, Input, Row, Col, Modal } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport { DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { popNotification } from '@module/shared/components/notification';\nimport { NotificationType } from '@constant/notification.enum';\n\ninterface IPurchaseRequisitionTemplateProps {\n  setSelectedTemplate: (template: IPurchaseRequisitionTemplate) => void;\n  setLoading?: (loading: boolean) => void;\n  purchaseRequisitionTemplates: IPurchaseRequisitionTemplate[];\n  setPurchaseRequisitionTemplates: (templates: IPurchaseRequisitionTemplate[]) => void;\n}\n\nconst PurchaseRequisitionTemplateBrowser: React.FC<IPurchaseRequisitionTemplateProps> = (props) => {\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [newTemplateText, setNewTemplateText] = useState('');\n\n  const { purchaseRequisitionTemplates, setPurchaseRequisitionTemplates } = props;\n\n  const showConfirmDeleteTemplate = (): void => {\n    if (purchaseRequisitionTemplates === undefined || selectedIndex === -1) {\n      return;\n    }\n    Modal.confirm({\n      title: 'Are you sure?',\n      icon: <ExclamationCircleOutlined />,\n      content: \"You won't be able to revert it\",\n      okText: 'Delete',\n      okType: 'primary',\n      cancelText: 'Cancel',\n      onOk() {\n        deleteTemplate();\n      },\n    });\n  };\n\n  const createNewTemplate = () => {\n    if (newTemplateText.trim() !== '') {\n      const newTemplate: IPurchaseRequisitionTemplate = {\n        id: 0,\n        templateName: newTemplateText,\n        purchaseRequisitionTemplateItemList: [],\n        remarks: \"\"\n      };\n      if (purchaseRequisitionTemplates === undefined || purchaseRequisitionTemplates.length === 0) {\n        setPurchaseRequisitionTemplates([newTemplate]);\n      } else {\n        purchaseRequisitionTemplates.push(newTemplate);\n        const deepCopy: IPurchaseRequisitionTemplate[] = CLONING_LIB.deepClone(purchaseRequisitionTemplates);\n        setPurchaseRequisitionTemplates(deepCopy);\n      }\n      popNotification('Success Create Template', NotificationType.success);\n      setNewTemplateText('');\n    }\n  };\n\n  const deleteTemplate = () => {\n    if (purchaseRequisitionTemplates === undefined || selectedIndex === -1) {\n      return;\n    }\n    const selectedPurchaseRequisitionTemplate = purchaseRequisitionTemplates[selectedIndex];\n    if (selectedPurchaseRequisitionTemplate.id > 0) {\n      deletePurchaseRequisitionTemplate(selectedPurchaseRequisitionTemplate.id)\n        .then(() => {\n          getPurchaseRequisitionTemplate()\n            .then(apiResponse => {\n              if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n                setPurchaseRequisitionTemplates(apiResponse.data);\n              }\n            })\n          setSelectedIndex(-1);\n          props.setSelectedTemplate({} as IPurchaseRequisitionTemplate);\n          popNotification('Success Delete Template', NotificationType.success);\n        })\n        .catch(error => {\n          const errResponse = error.response;\n          const errorMessage = errResponse.data ? errResponse.data : 'Request Failed';\n          popNotification(errorMessage, NotificationType.error);\n        });\n    } else {\n      purchaseRequisitionTemplates.splice(selectedIndex, 1);\n      const deepCopy: IPurchaseRequisitionTemplate[] = CLONING_LIB.deepClone(purchaseRequisitionTemplates);\n      setPurchaseRequisitionTemplates(deepCopy);\n      \n      setSelectedIndex(-1);\n      props.setSelectedTemplate({} as IPurchaseRequisitionTemplate);\n      popNotification('Success Delete Template', NotificationType.success);\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col span={14}>\n          <div className=\"input-group align-items-center h-100\">\n            <Input\n              className=\"form-control\"\n              key=\"new-template-input\"\n              placeholder=\"Create New Template\"\n              value={newTemplateText}\n              onChange={(e: any) => {\n                setNewTemplateText(e.target.value);\n              }}\n            />\n            <Button className=\"input-group-btn mx-1\" key=\"create-new-template-button\" type=\"primary\" onClick={() => createNewTemplate()}>\n              Create\n            </Button>\n          </div>\n        </Col>\n        <Col span={8} offset={2}>\n          <Button className=\"input-group-btn float-end d-inline-flex align-items-center\" key=\"create-new-template-button\" type=\"default\" onClick={() => showConfirmDeleteTemplate()}>\n            <DeleteOutlined />\n            Delete Template\n          </Button>\n        </Col>\n      </Row>\n      <div className=\"d-inline-block text-center mt-2\">\n        {purchaseRequisitionTemplates &&\n          purchaseRequisitionTemplates.map((template, index) => {\n            return (\n              <Button\n                key={index}\n                type={selectedIndex === index ? 'primary' : 'default'}\n                shape=\"round\"\n                className=\"m-1 selection-pile-button\"\n                size=\"middle\"\n                onClick={() => {\n                  props.setLoading && props.setLoading(true);\n                  setSelectedIndex(index);\n                  const deepCopy: IPurchaseRequisitionTemplate = CLONING_LIB.deepClone(template);\n                  props.setSelectedTemplate(deepCopy);\n                  setTimeout(function () {\n                    props.setLoading && props.setLoading(false);\n                  }, 500);\n                }}\n              >\n                <Text ellipsis className={selectedIndex === index ? 'text-white' : 'text-dark'}>{template.templateName}</Text>\n              </Button>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseRequisitionTemplateBrowser;\n","import { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\n\nexport const generateIndex = (purchaseRequisitionTemplateItem: IPurchaseRequisitionTemplateItem) => {\n  const searchIndex =\n    (purchaseRequisitionTemplateItem.componentCode.trim() || '') + (purchaseRequisitionTemplateItem.componentName.trim() || '') + (purchaseRequisitionTemplateItem.vendorName.trim() || '');\n  return searchIndex.replace(/\\s+/g, '').toLowerCase();\n};\n","interface ISearchableModel<T> {\n  elem: T;\n  index: string;\n}\n\nexport class SearchEngine<T> {\n  private searchableModelList: Array<ISearchableModel<T>>;\n  private genIndexFn: (obj: T) => string;\n\n  constructor(searchIn: T[], genIndex: (obj: T) => string) {\n    this.genIndexFn = genIndex;\n    this.searchableModelList = searchIn.map<ISearchableModel<T>>((element) => ({\n      elem: element,\n      index: this.genIndexFn(element),\n    }));\n  }\n\n  search(searchWith: string): T[] {\n    if (searchWith.trim().length === 0) {\n      return this.searchableModelList.map<T>((element) => element.elem);\n    }\n\n    return this.searchableModelList.filter((element) => element.index.toLowerCase().includes(searchWith.toLowerCase())).map<T>((element) => element.elem);\n  }\n\n  updateEngine(searchIn: T[]): SearchEngine<T> {\n    this.searchableModelList = searchIn.map<ISearchableModel<T>>((element) => ({\n      elem: element,\n      index: this.genIndexFn(element),\n    }));\n    return this;\n  }\n}\n\n// TODO: [LU] rename to --> remove white space\nexport function getSearchText(searchInput: string): string {\n  return searchInput.replace(/\\s+/g, '');\n}\n","export class QueryParamsBuilder {\n  private url: string;\n\n  public static withUrl(url: string): QueryParamsBuilder {\n    const sanitisedUrl = url.endsWith('/') ? url.substr(0, url.length - 1) : url;\n    return new QueryParamsBuilder(sanitisedUrl);\n  }\n\n  public addParams(params: Object): QueryParamsBuilder;\n  public addParams(params: QueryParamType, paramName: string): QueryParamsBuilder;\n  public addParams(params: Object | QueryParamType, paramName?: string) {\n    const paramsIsObject = params instanceof Object;\n\n    if (paramName && !paramsIsObject) {\n      this.url = `${this.url}${paramName}=${params}&`;\n    }\n\n    if (paramsIsObject) {\n      const inferredParamNames = Object.keys(params);\n      inferredParamNames.forEach((inferredParamName) => {\n        const paramValue: any = (params as any)[inferredParamName];\n        if(paramValue) {\n          this.url = `${this.url}${inferredParamName}=${paramValue}&`;\n        }\n      });\n    }\n\n    return this;\n  }\n\n  public build(): string {\n    const finalisedUrl = this.url.endsWith('&') ? this.url.substr(0, this.url.length - 1) : this.url;\n    return finalisedUrl;\n  }\n\n  constructor(url: string) {\n    this.url = `${url}?`;\n  }\n}\n\ntype QueryParamType = string | Date | number | boolean | null | QueryParamType[];\n","import { COMPONENT, COMPONENT_SEARCH_BULK, COMPONENT_STOCK_BALANCE } from '@constant/api-endpoints';\nimport { IComponentSearch } from '@dto/i-component-search.dto';\nimport { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\nimport { QueryParamsBuilder } from '@utils/api/query-params-builder';\nimport axios from 'axios';\n\nexport async function getItemBySearch(component?: string | null, vendor?: string | null, packingSize?: number | null) {\n  const url = QueryParamsBuilder.withUrl(COMPONENT).addParams({ component, vendor, packingSize }).build();\n  return await axios.get<IPurchaseRequisitionTemplateItem[]>(url);\n}\n\nexport async function getItemBySearchComponentAndVendorId(component?: string | null, vendorId?: string | null) {\n  const url = QueryParamsBuilder.withUrl(`${COMPONENT}/${component}/vendor/${vendorId}`).addParams({}).build();\n  return await axios.get<IPurchaseRequisitionTemplateItem[]>(url);\n}\n\nexport async function getItemBySearchComponentOrVendor(component?: string | null, vendor?: string | null) {\n  const url = QueryParamsBuilder.withUrl(`${COMPONENT}/search`).addParams({ component, vendor }).build();\n  return await axios.get<IPurchaseRequisitionTemplateItem[]>(url);\n}\n\nexport async function bulkGetItemBySearch(componentSearch: IComponentSearch[]) {\n  return await axios.post<IPurchaseRequisitionTemplateItem[]>(COMPONENT_SEARCH_BULK, componentSearch);\n}\n\nexport async function getStockBalance(componentCode: string) {\n  const url = COMPONENT_STOCK_BALANCE + `/${componentCode}`;\n  return await axios.get<number>(url);\n}\n","import { VENDOR_MASTER } from \"@constant/api-endpoints\";\nimport { IVendorMaster } from \"@dto/i-vendor-master.dto\";\nimport { QueryParamsBuilder } from \"@utils/api/query-params-builder\";\nimport axios from \"axios\";\n\nexport async function getVendor(vendorId?: string) {\n    const url = QueryParamsBuilder.withUrl(VENDOR_MASTER).addParams({ vendorId }).build();\n    return await axios.get<IVendorMaster[]>(url);\n}","import React from 'react';\n\nimport { Select, Spin } from 'antd';\nimport { SelectProps } from 'antd/es/select';\nimport debounce from 'lodash/debounce';\n\nexport interface DebounceSelectProps<ValueType = any> extends Omit<SelectProps<ValueType>, 'options' | 'children'> {\n  fetchOptions: (search: string) => Promise<ValueType[]>;\n  debounceTimeout?: number;\n}\n\nexport default function DebounceSelect<ValueType extends { key?: string; label: React.ReactNode; value: string | number } = any>({\n  fetchOptions,\n  debounceTimeout = 800,\n  ...props\n}: DebounceSelectProps) {\n  const [fetching, setFetching] = React.useState(false);\n  const [options, setOptions] = React.useState<ValueType[]>([]);\n  const fetchRef = React.useRef(0);\n\n  const debounceFetcher = React.useMemo(() => {\n    const loadOptions = (value: string) => {\n      fetchRef.current += 1;\n      const fetchId = fetchRef.current;\n      setOptions([]);\n      setFetching(true);\n\n      fetchOptions(value).then((newOptions) => {\n        if (fetchId !== fetchRef.current) {\n          // for fetch callback order\n          return;\n        }\n\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n\n  return <Select<ValueType> labelInValue filterOption={false} onSearch={debounceFetcher} notFoundContent={fetching ? <Spin size=\"small\" /> : null} {...props} options={options} />;\n}\n","import { getVendor } from '@api/vendor-master.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { IVendorMaster } from '@dto/i-vendor-master.dto';\nimport DebounceSelect from '@module/shared/components/debounce-select/debounce-select';\nimport { AxiosResponse } from 'axios';\nimport { ReactNode, useState } from 'react';\n\ninterface IVendorDebounceSelectProps {\n  selectedVendor: string | undefined;\n  setSelectedVendor: (vendorId: string) => void;\n}\n\n// TODO: [LU] Migrate to shared module\nconst VendorDebounceSelect: React.FC<IVendorDebounceSelectProps> = (props) => {\n  const { selectedVendor, setSelectedVendor } = props;\n  const [vendors, setVendors] = useState<IVendorMaster[]>([]);\n\n  const getVendorsWrapper = async (vendorInput: string) => {\n    const res: AxiosResponse<IVendorMaster[]> = await getVendor(vendorInput || '');\n    if (res) {\n      if (res.status === ApiResponseStatus.SUCCESS) {\n        setVendors(res.data);\n        return res.data.map((vendorMaster) => ({ label: <>{vendorMaster.vendorName}</>, value: vendorMaster.vendorID }));\n      }\n    }\n    return [];\n  };\n\n  return (\n    <>\n      <DebounceSelect\n        key=\"component-input\"\n        showSearch\n        value={selectedVendor && { value: selectedVendor }}\n        placeholder=\"Select Vendor\"\n        fetchOptions={getVendorsWrapper}\n        onChange={(e: { label: ReactNode; value: string }) => {\n          const selectedComponent = vendors.find((vendor) => vendor.vendorID === e.value);\n          setSelectedVendor(selectedComponent?.vendorID || '');\n        }}\n        style={{ width: '100%' }}\n        debounceTimeout={1000}\n      />\n    </>\n  );\n};\n\nexport default VendorDebounceSelect;\n","import { getItemBySearchComponentAndVendorId } from '@api/component.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\nimport DebounceSelect from '@module/shared/components/debounce-select/debounce-select';\nimport { AxiosResponse } from 'axios';\nimport { ReactNode, useEffect, useState } from 'react';\n\ninterface IComponentCodeSelectorProps {\n  selectedVendor: string | undefined;\n  selectedComponentCode: string;\n  setSelectedComponentCode: (vendorId: string) => void;\n}\n\nconst ComponentCodeSelector: React.FC<IComponentCodeSelectorProps> = (props) => {\n  const { selectedVendor, selectedComponentCode, setSelectedComponentCode } = props;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [components, setComponents] = useState<IPurchaseRequisitionTemplateItem[]>([]);\n\n  useEffect(() => {\n    setComponents([]); // Clear components\n    setSelectedComponentCode(''); // CLear Selected Component\n    getVendorsWrapper();\n    // eslint-disable-next-line\n  }, [selectedVendor]);\n\n  const getVendorsWrapper = async (componentInput?: string) => {\n    const res: AxiosResponse<IPurchaseRequisitionTemplateItem[]> = await getItemBySearchComponentAndVendorId(componentInput, selectedVendor);\n    if (res) {\n      if (res.status === ApiResponseStatus.SUCCESS) {\n        const uniqueComponentCode = new Set();\n        const uniqueComponents: IPurchaseRequisitionTemplateItem[] = res.data\n          .map((component) => {\n            if (uniqueComponentCode.has(component.componentCode)) {\n              component.id = -1; // mark as -1 to be eliminated\n              return component;\n            } else {\n              uniqueComponentCode.add(component.componentCode);\n              return component;\n            }\n          })\n          .filter((component) => component.id > 0);\n\n        setComponents(uniqueComponents);\n\n        return uniqueComponents.map((component) => ({ label: `${component.componentName} [${component.componentCode}]`, value: component.componentCode }));\n      }\n    }\n    return [];\n  };\n\n  return (\n    <>\n      <DebounceSelect\n        key=\"component-key\"\n        value={selectedComponentCode.length === 0 ? undefined : { value: selectedComponentCode }}\n        showSearch\n        placeholder=\"Select Component\"\n        fetchOptions={getVendorsWrapper}\n        onChange={(e: { label: ReactNode; value: string }) => {\n          console.log(e.value);\n          setSelectedComponentCode(e.value);\n        }}\n        style={{ width: '100%' }}\n        debounceTimeout={1000}\n      ></DebounceSelect>\n    </>\n  );\n};\n\nexport default ComponentCodeSelector;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Form, Input, Row, Button, InputNumber, Modal, Space, Divider } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport readXlsxFile from 'read-excel-file';\n\nimport PurchaseRequisitionTemplateTable from '../components/template-table';\nimport { IPurchaseRequisitionTemplate } from '@dto/i-purchase-requisition-template.dto';\nimport PurchaseRequisitionTemplateBrowser from '../components/template-browser';\nimport { generateIndex } from '../components/template-indexer';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { getSearchText, SearchEngine } from '@utils/search/native-search';\nimport { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\nimport { EditOutlined } from '@ant-design/icons';\nimport { popNotification } from '@module/shared/components/notification';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { createPurchaseRequisitionTemplate, getPurchaseRequisitionTemplate, updatePurchaseRequisitionTemplate } from '@api/purchase-requisition-template.api';\nimport { NotificationType } from '@constant/notification.enum';\nimport { setLoading } from '@module/shared/reducers/app-reducers';\nimport { bulkGetItemBySearch } from '@api/component.api';\nimport { IComponentSearch } from '@dto/i-component-search.dto';\nimport VendorDebounceSelect from '../components/vendor-debounce-select';\nimport ComponentCodeSelector from '../components/component-code-selector';\n\ninterface IPurchaseRequisitionTemplateProps extends StateProps, DispatchProps {}\n\nconst PurchaseRequisitionTemplateList: React.FC<IPurchaseRequisitionTemplateProps> = (props: IPurchaseRequisitionTemplateProps) => {\n  const [purchaseRequisitionTemplates, setPurchaseRequisitionTemplates] = useState<IPurchaseRequisitionTemplate[]>();\n  const [selectedPurchaseRequisitionTemplate, setSelectedPurchaseRequisitionTemplate] = useState<IPurchaseRequisitionTemplate>({} as IPurchaseRequisitionTemplate);\n  const [filteredTemplateItems, setFilteredTemplateItems] = useState<IPurchaseRequisitionTemplateItem[]>();\n\n  const [excelFile, setExcelFile] = useState<File>();\n  const [excelData, setExcelData] = useState<Array<any>>([]);\n\n  const [searchText, setSearchText] = useState<string>('');\n  const searchEngine: SearchEngine<IPurchaseRequisitionTemplateItem> = new SearchEngine([], generateIndex);\n\n  const [editTemplateNameModal, setEditTemplateNameModal] = useState<boolean>(false);\n  const [newTemplateName, setNewTemplateName] = useState<string>('');\n\n  const [insertItemsForm] = Form.useForm();\n\n  const [selectedVendor, setSelectedVendor] = useState<string>();\n  const [selectedComponentCode, setSelectedComponentCode] = useState<string>('');\n\n  useEffect(() => {\n    const getTemplates = async () => {\n      const apiResponse = await getPurchaseRequisitionTemplate();\n\n      if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n        setPurchaseRequisitionTemplates(apiResponse.data);\n      }\n    };\n    getTemplates();\n  }, []);\n\n  const search = () => {\n    props.setLoading(true);\n    const sanitisedSearchText: string = getSearchText(searchText);\n    const filteredData = searchEngine.updateEngine(selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList).search(sanitisedSearchText);\n    setFilteredTemplateItems(filteredData);\n    setTimeout(function () {\n      props.setLoading(false);\n    }, 500);\n  };\n\n  const changeTemplateNameModal = () => {\n    setNewTemplateName(selectedPurchaseRequisitionTemplate.templateName);\n    setEditTemplateNameModal(true);\n  };\n\n  const closeTemplateNameModal = () => {\n    setNewTemplateName('');\n    setEditTemplateNameModal(false);\n  };\n\n  const editTemplateName = () => {\n    if (newTemplateName.trim() !== '') {\n      selectedPurchaseRequisitionTemplate.templateName = newTemplateName;\n      const deepCopy: IPurchaseRequisitionTemplate = CLONING_LIB.deepClone(selectedPurchaseRequisitionTemplate);\n      setSelectedPurchaseRequisitionTemplate(deepCopy);\n    }\n    closeTemplateNameModal();\n    popNotification('Success Edit Template', NotificationType.success);\n  };\n\n  const deleteTemplateItem = (itemIndex: number) => {\n    selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList.splice(itemIndex, 1);\n    const sortedResult = updateTemplateItemsSequence(selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList);\n    selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList = sortedResult;\n    const deepCopy: IPurchaseRequisitionTemplate = CLONING_LIB.deepClone(selectedPurchaseRequisitionTemplate);\n    setSelectedPurchaseRequisitionTemplate(deepCopy);\n    popNotification('Success Delete Component', NotificationType.success);\n  };\n\n  const uploadExcelFile = (): void => {\n    if (excelFile !== undefined) {\n      props.setLoading(true);\n      readXlsxFile(excelFile)\n        .then((rows) => {\n          // Convert to Array of JSON Object\n          setExcelData(rows);\n          popNotification('Success Upload Excel', NotificationType.success);\n        })\n        .then(() => props.setLoading(false));\n    }\n  };\n\n  const loadDatabaseWithExcelData = async () => {\n    console.log('Load Database');\n    if (!Boolean(selectedPurchaseRequisitionTemplate.templateName)) {\n      popNotification('Please Select a Template', NotificationType.error);\n    } else if (excelData.length === 0) {\n      popNotification('Please Upload an Excel File', NotificationType.error);\n    } else {\n      const formattedExcelData = formatExcelData(excelData);\n      const apiResponse = await bulkGetItemBySearch(formattedExcelData);\n\n      if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n        apiResponse.data.forEach((item) => insertExcelItemToTemplate(item));\n        popNotification('Success Load Component from File', NotificationType.success);\n      }\n    }\n  };\n\n  const insertExcelItemToTemplate = (values: any): void => {\n    const itemToInsert: IPurchaseRequisitionTemplateItem = {\n      ...values,\n      sequence: 0,\n    };\n    const insertIndex: number =\n      values.itemSequence === 0 || values.itemSequence > selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList?.length\n        ? selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList?.length\n        : values.itemSequence - 1;\n    selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList.splice(insertIndex, 0, itemToInsert);\n    const sortedResult = updateTemplateItemsSequence(selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList);\n    selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList = sortedResult;\n    const deepCopy: IPurchaseRequisitionTemplate = CLONING_LIB.deepClone(selectedPurchaseRequisitionTemplate);\n    setSelectedPurchaseRequisitionTemplate(deepCopy);\n  };\n\n  /**\n   * Excel data format is:\n   * | ComponentCode | VendorId | PackagingSize |\n   *\n   * @param excelData raw excel rows\n   * @returns request body for component search\n   */\n  const formatExcelData = (excelData: any[]) => {\n    // TODO: [LU] Please add typing to data\n    return excelData.map((row) => {\n      return {\n        componentCode: row[0],\n        vendorId: row[1],\n        packagingSize: row[2],\n      } as IComponentSearch;\n    });\n  };\n\n  const addNewComponentAsTemplateItem = async (values: any) => {\n    if (Boolean(selectedPurchaseRequisitionTemplate.templateName)) {\n      /**\n       * Temporary hack\n       * - Use bulk search api to get\n       * - Always get the first result, because it is always exact match\n       */\n      const { packagingSize, itemSequence } = values;\n      const componentSearchDTO: IComponentSearch = {\n        componentCode: selectedComponentCode,\n        vendorId: selectedVendor || '',\n        packagingSize: packagingSize,\n      };\n\n      try {\n        const apiResponse = await bulkGetItemBySearch([componentSearchDTO]);\n\n        if (apiResponse) {\n          if (apiResponse.status === ApiResponseStatus.SUCCESS) {\n            const templateItem = apiResponse.data[0];\n\n            insertItemToTemplate({\n              selectedItem: templateItem,\n              itemSquence: itemSequence,\n            });\n          } else {\n            popNotification(generateErrorMessage(apiResponse.status), NotificationType.error);\n          }\n        } else {\n          throw new Error('Unknown error');\n        }\n      } catch (error) {\n        popNotification(generateErrorMessage(error), NotificationType.error);\n      }\n    } else {\n      popNotification('Please Select a Template', NotificationType.error);\n    }\n  };\n\n  const formValidationFailed = (errorInfo: any): void => {\n    console.log('Failed ', errorInfo);\n  };\n\n  const insertItemToTemplate = (values: any): void => {\n    const itemToInsert: IPurchaseRequisitionTemplateItem = {\n      ...values.selectedItem,\n      sequence: values.itemSequence,\n    };\n    const insertIndex: number =\n      values.itemSequence === 0 || values.itemSequence > selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList?.length\n        ? selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList?.length\n        : values.itemSequence - 1;\n    selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList.splice(insertIndex, 0, itemToInsert);\n    const sortedResult = updateTemplateItemsSequence(selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList);\n    selectedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList = sortedResult;\n    const deepCopy: IPurchaseRequisitionTemplate = CLONING_LIB.deepClone(selectedPurchaseRequisitionTemplate);\n    setSelectedPurchaseRequisitionTemplate(deepCopy);\n    insertItemsForm.resetFields();\n    popNotification('Success Add Component', NotificationType.success);\n  };\n\n  const updateTemplateItemsSequence = (templateItems: IPurchaseRequisitionTemplateItem[]): IPurchaseRequisitionTemplateItem[] => {\n    const sortedResult = templateItems.map((item, index) => {\n      item.sequence = index + 1;\n      return item;\n    });\n    return sortedResult;\n  };\n\n  const saveTemplate = () => {\n    if (selectedPurchaseRequisitionTemplate.id) {\n      updatePurchaseRequisitionTemplate(selectedPurchaseRequisitionTemplate)\n        .then((res) => {\n          setSelectedPurchaseRequisitionTemplate(res.data);\n          popNotification('Success Update Template', NotificationType.success);\n          getPurchaseRequisitionTemplate().then((apiResponse) => {\n            if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n              setPurchaseRequisitionTemplates(apiResponse.data);\n            }\n          });\n        })\n        .catch((error) => {\n          const errResponse = error.response;\n          const errorMessage = errResponse.data ? errResponse.data : 'Request Failed';\n          popNotification(errorMessage, NotificationType.error);\n        });\n    } else {\n      createPurchaseRequisitionTemplate(selectedPurchaseRequisitionTemplate)\n        .then((res) => {\n          setSelectedPurchaseRequisitionTemplate(res.data);\n          popNotification('Success Create Template', NotificationType.success);\n          getPurchaseRequisitionTemplate().then((apiResponse) => {\n            if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n              setPurchaseRequisitionTemplates(apiResponse.data);\n            }\n          });\n        })\n        .catch((error) => {\n          const errResponse = error.response;\n          const errorMessage = errResponse.data ? errResponse.data : 'Request Failed';\n          popNotification(errorMessage, NotificationType.error);\n        });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"d-flex flex-row\">\n        <div className=\"container-fluid h-100\" style={{ width: 'max-content' }}>\n          <div className=\"d-flex flex-column justify-content-center\">\n            <Title level={4}>Purchase Requisition Template</Title>\n          </div>\n          <div className=\"border-right-2 mx-2\">\n            <div className=\"my-2 position-relative\">\n              <b className=\"d-inline-flex align-items-center\">\n                {selectedPurchaseRequisitionTemplate.templateName}&nbsp;\n                <EditOutlined className=\"cursor-pointer\" onClick={changeTemplateNameModal} hidden={selectedPurchaseRequisitionTemplate.templateName === undefined} />\n              </b>\n              <div className=\"col d-flex flex-column justify-content-center\">\n                <Input.Search\n                  allowClear\n                  placeholder=\"Search\"\n                  bordered={false}\n                  value={searchText}\n                  onChange={(e: any) => setSearchText(e.target.value)}\n                  onSearch={search}\n                  style={{\n                    width: '40%',\n                    borderBottom: '1px solid #d9d9d9',\n                    position: 'absolute',\n                    right: '5px',\n                  }}\n                />\n              </div>\n            </div>\n            <PurchaseRequisitionTemplateTable currentTemplate={selectedPurchaseRequisitionTemplate} deleteTemplateComponent={deleteTemplateItem} filteredItems={filteredTemplateItems} />\n          </div>\n        </div>\n\n        <Divider type=\"vertical\" style={{ height: '100vh' }} className=\"mx-4\" />\n\n        <div className=\"px-2\" style={{ minWidth: '680px' }}>\n          <PurchaseRequisitionTemplateBrowser\n            setSelectedTemplate={setSelectedPurchaseRequisitionTemplate}\n            setLoading={props.setLoading}\n            purchaseRequisitionTemplates={purchaseRequisitionTemplates ?? []}\n            setPurchaseRequisitionTemplates={setPurchaseRequisitionTemplates}\n          />\n          <Divider />\n          {/* Excel Upload */}\n          <Row>\n            <Col span={16}>\n              <div className=\"input-group align-items-center\">\n                <Input className=\"form-control\" key=\"template-excel-input\" type=\"file\" onChange={(e: any) => setExcelFile(e.target.files[0])} />\n                <Button className=\"input-group-btn mx-1\" key=\"upload-excel-button\" type=\"default\" onClick={() => uploadExcelFile()}>\n                  Upload\n                </Button>\n              </div>\n            </Col>\n            <Col span={6} offset={2}>\n              <Button className=\"input-group-btn float-end\" key=\"load-database-button\" type=\"primary\" onClick={() => loadDatabaseWithExcelData()}>\n                Load Database\n              </Button>\n            </Col>\n          </Row>\n          {/* Add Component */}\n          <div className=\"mt-5\">\n            <Row>\n              <VendorDebounceSelect selectedVendor={selectedVendor} setSelectedVendor={setSelectedVendor} />\n            </Row>\n            <Row>\n              <ComponentCodeSelector selectedVendor={selectedVendor} selectedComponentCode={selectedComponentCode} setSelectedComponentCode={setSelectedComponentCode} />\n            </Row>\n            <Form layout=\"inline\" onFinish={addNewComponentAsTemplateItem} onFinishFailed={formValidationFailed}>\n              <Form.Item\n                className=\"input-group\"\n                name=\"packagingSize\"\n                rules={[\n                  { required: true, message: 'Enter packing size' },\n                  {\n                    type: 'number',\n                    min: 1,\n                    message: 'Packing Size must be positive',\n                  },\n                ]}\n              >\n                <InputNumber type=\"number\" className=\"w-100\" key=\"packing-size-input\" placeholder=\"Packing Size\" />\n              </Form.Item>\n              <Form.Item\n                className=\"input-group\"\n                name=\"itemSequence\"\n                rules={[\n                  { required: true, message: 'Enter item sequence' },\n                  {\n                    type: 'number',\n                    min: 0,\n                    message: 'Item sequence must be 0 or greater',\n                  },\n                ]}\n              >\n                <InputNumber type=\"number\" className=\"w-50\" key=\"item-sequence-input\" placeholder=\"Item Sequence\" />\n              </Form.Item>\n              <Form.Item>\n                <Button className=\"input-group-btn float-end\" key=\"load-database-button\" type=\"primary\" htmlType=\"submit\">\n                  Add Component\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n          <Divider />\n          <Button key=\"save-template-button\" type=\"primary\" size=\"large\" className=\"float-end mb-2\" onClick={saveTemplate}>\n            Save Template\n          </Button>\n        </div>\n      </div>\n      <Modal title=\"Edit Template Name\" key=\"edit-templateName-modal\" visible={editTemplateNameModal} footer={null} onCancel={closeTemplateNameModal}>\n        <Form onFinish={editTemplateName}>\n          <Form.Item label=\"Template Name\">\n            <Input placeholder=\"name\" value={newTemplateName} onChange={(e) => setNewTemplateName(e.target.value)} />\n          </Form.Item>\n          <Form.Item className=\"text-center mt-3\">\n            <Space className=\"\">\n              <Button htmlType=\"button\" onClick={closeTemplateNameModal}>\n                Cancel\n              </Button>\n              <Button htmlType=\"submit\" type=\"primary\">\n                Submit\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  setLoading,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseRequisitionTemplateList);\nfunction generateErrorMessage(error: unknown): string {\n  throw new Error('Function not implemented.');\n}\n","import React from 'react';\nimport { RouteComponentProps, Route, Switch } from 'react-router-dom';\nimport PurchaseRequisitionTemplateList from './purchase-requisition-template-list';\n\nconst Routes: React.FC<RouteComponentProps> = ({ match }) => (\n  <>\n    <Switch>\n      <Route path={match.url} component={PurchaseRequisitionTemplateList} />\n    </Switch>\n  </>\n);\n\nexport default Routes;\n","export enum ChangeEvent {\n  NUMBER_INPUT,\n  TEXT_INPUT,\n  DATE_TIME,\n}\n","import './template-browser.less';\nimport { getPurchaseRequisitionTemplate } from '@api/purchase-requisition-template.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { IPurchaseRequisitionTemplate } from '@dto/i-purchase-requisition-template.dto';\nimport { useEffect, useState } from 'react';\nimport { Button } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\n\ninterface IPurchaseRequisitionTemplateProps {\n  setSelectedTemplate: (template: IPurchaseRequisitionTemplate) => void;\n  setLoading?: (loading: boolean) => void;\n}\n\nconst PurchaseRequisitionTemplateBrowser: React.FC<IPurchaseRequisitionTemplateProps> = (props) => {\n  const [purchaseRequisitionTemplates, setPurchaseRequisitionTemplates] = useState<IPurchaseRequisitionTemplate[]>();\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  useEffect(() => {\n    const getTemplates = async () => {\n      const apiResponse = await getPurchaseRequisitionTemplate();\n\n      if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n        setPurchaseRequisitionTemplates(apiResponse.data);\n      }\n    };\n\n    getTemplates();\n  }, []);\n\n  return (\n    <>\n      <div className=\"scrollable-menu d-flex\">\n        {purchaseRequisitionTemplates &&\n          purchaseRequisitionTemplates.map((template, index) => {\n            return (\n              <Button\n                key={index}\n                type={selectedIndex === index ? 'primary' : 'default'}\n                shape=\"round\"\n                className=\"m-2 selection-pile-button\"\n                size=\"large\"\n                onClick={() => {\n                  props.setLoading && props.setLoading(true);\n                  setSelectedIndex(index);\n                  const deepCopy: IPurchaseRequisitionTemplate = CLONING_LIB.deepClone(template);\n                  props.setSelectedTemplate(deepCopy);\n                  setTimeout(function() {\n                    props.setLoading && props.setLoading(false);\n                  }, 500);\n                }}\n              >\n                <Text ellipsis className={selectedIndex === index ? 'text-white' : 'text-dark'}>{template.templateName}</Text>\n              </Button>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseRequisitionTemplateBrowser;\n","import { useState, useEffect } from 'react';\n// Define general type for useWindowSize hook, which includes width and height\nexport interface IWindowSize {\n  width: number;\n  height: number;\n}\n\n// Hook\nexport function useWindowResized(): IWindowSize {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<IWindowSize>({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n","export const APP_HEADER_HEIGHT: number = 58;\n","import React, { useEffect, useState } from 'react';\nimport Table from 'antd/lib/table';\nimport moment from 'moment';\nimport { Moment } from 'moment';\nimport { ClearOutlined } from '@ant-design/icons';\nimport { Button, DatePicker, InputNumber, Popconfirm, Popover } from 'antd';\n\nimport { TABLE_PAGINATION_CONFIG } from '@constant/pagination-config';\nimport { IPurchaseRequisitionTemplate } from '@dto/i-purchase-requisition-template.dto';\nimport { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { ChangeEvent } from '@constant/change-event.enum';\nimport { ITableColumn, ITableColumnDisplaySettings } from '@dto/i-table-columns';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { PURCHASE_REQUISITION_BOTTOM_TOOLS_HEIGHT, PURCHASE_REQUISITION_TITLE_HEIGHT, PURCHASE_REQUISITION_TOP_TOOLS_HEIGHT } from '@constant/display/purchase-requisition-request.constant';\nimport { TABLE_PAGINATION_TOOLS_HEIGHT, TABLE_HEADER_HEIGHT } from '@constant/display/table.constant';\nimport { getStockBalance } from '@api/component.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\n\ninterface IPurchaseRequisitionRequestConstructorProps {\n  readonly currentTemplate?: IPurchaseRequisitionTemplate;\n  readonly searchResult?: IPurchaseRequisitionTemplateItem[];\n  updateTemplate: (template: IPurchaseRequisitionTemplate) => void;\n  tableColumnDisplaySettings?: ITableColumnDisplaySettings[];\n  tableColumnDisplaySettingsUpdateTime: Date;\n}\n\n/**\n * Due to the need of dynamic column settings, the implementation details are as follows:\n * - The columns are stored as key value data structure as a local constant (const COLUMNS: ITableColumn)\n * - The sequence and visibility of columns are supplied by parent component, the constructor table generates column structure based on:\n *   - The sequence of column list provided\n *   - The visible as defined\n * @param props IPurchaseRequisitionRequestConstructorProps\n * @returns PurchaseRequisitionRequestConstructor\n */\nconst PurchaseRequisitionRequestConstructor: React.FC<IPurchaseRequisitionRequestConstructorProps> = (props) => {\n  const updateTemplate = props.updateTemplate;\n  const windowSize: IWindowSize = useWindowResized();\n  const [componentAndStockBalance, setComponentAndStockBalance] = useState<Map<string, number>>();\n  const TABLE_BODY_MAX_HEIHGT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT +\n    APP_CONTENT_MARGIN +\n    PURCHASE_REQUISITION_TITLE_HEIGHT +\n    PURCHASE_REQUISITION_TOP_TOOLS_HEIGHT +\n    PURCHASE_REQUISITION_BOTTOM_TOOLS_HEIGHT +\n    TABLE_HEADER_HEIGHT +\n    TABLE_PAGINATION_TOOLS_HEIGHT;\n\n  const getStockBalanceByComponentCode = async (componentCode: string) => {\n    const res = await getStockBalance(componentCode);\n\n    if (res && res.status === ApiResponseStatus.SUCCESS) {\n      return res.data;\n    } else {\n      return 0;\n    }\n  };\n\n  /**\n   * Effect that populates the stock balance\n   */\n  useEffect(() => {\n\n    const stockBalance = async () => {\n      if (props.searchResult) {\n        let tempComponentAndStockBalanceMap: Map<string, number> = new Map();\n        for (let index = 0; index < props.searchResult.length; index++) {\n          const element: IPurchaseRequisitionTemplateItem = props.searchResult[index];\n          const balanceQty: number = await getStockBalanceByComponentCode(element.componentCode);\n          tempComponentAndStockBalanceMap.set(element.componentCode, balanceQty);\n        }\n        setComponentAndStockBalance(tempComponentAndStockBalanceMap);\n      }\n    };\n    \n    stockBalance();\n  }, [props.searchResult]);\n\n  const updateAllDeliveryDate: (value: any) => void = (value) => {\n    if (props.currentTemplate) {\n      const updatedPurchaseRequisitionTemplate = CLONING_LIB.deepClone(props.currentTemplate);\n      if (value) {\n        updatedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList.forEach((item) => {\n          item.deliveryDate = (value as Moment).toDate();\n        });\n        updateTemplate(updatedPurchaseRequisitionTemplate);\n      }\n    }\n  };\n\n  const clearAllInput: () => void = () => {\n    if (props.currentTemplate) {\n      const updatedPurchaseRequisitionTemplate = CLONING_LIB.deepClone(props.currentTemplate);\n      updatedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList.forEach((item) => {\n        item.quantity = 0;\n        item.packagingSize = 0;\n        item.deliveryDate = undefined;\n      });\n      updateTemplate(updatedPurchaseRequisitionTemplate);\n    }\n  };\n\n  const updateData: (selectedPurchaseRequisitionApproval: IPurchaseRequisitionTemplate, value: any, record: IPurchaseRequisitionTemplateItem, key: string) => IPurchaseRequisitionTemplate = (\n    selectedPurchaseRequisitionApproval,\n    value,\n    record,\n    key\n  ) => {\n    const idToUpdate = record.id;\n    const updatedSelectedPurchaseRequisitionApprovalItems = selectedPurchaseRequisitionApproval.purchaseRequisitionTemplateItemList.map((item) => {\n      if (item.id === idToUpdate) {\n        (item as any)[key] = value;\n      }\n      return item;\n    });\n    const updatedSelectedPurchaseRequisitionApproval = CLONING_LIB.deepClone(selectedPurchaseRequisitionApproval);\n    updatedSelectedPurchaseRequisitionApproval.purchaseRequisitionTemplateItemList = updatedSelectedPurchaseRequisitionApprovalItems;\n    return updatedSelectedPurchaseRequisitionApproval;\n  };\n\n  const clearInputByItemId: (record: IPurchaseRequisitionTemplateItem) => void = (record) => {\n    if (props.currentTemplate) {\n      const updatedPurchaseRequisitionTemplate = CLONING_LIB.deepClone(props.currentTemplate);\n      const updatedPurchaseRequisitionTemplateItems: IPurchaseRequisitionTemplateItem[] = updatedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList.map((item) => {\n        if (item.id === record.id) {\n          return {\n            ...item,\n            quantity: 0,\n            deliveryDate: undefined,\n            packagingSize: 0,\n          };\n        } else {\n          return item;\n        }\n      });\n      updatedPurchaseRequisitionTemplate.purchaseRequisitionTemplateItemList = updatedPurchaseRequisitionTemplateItems;\n      updateTemplate(updatedPurchaseRequisitionTemplate);\n    }\n  };\n\n  /**\n   * Update the SelectedApprovalItem's field based on the provided key\n   * @param changeEvent change event emitted by html element\n   * @param record the data associated with current row\n   * @param key the key of the modified field (to perform modifying logic)\n   * @param index the index of current row (against table)\n   */\n  const dataChanged: (changeEventType: ChangeEvent, changeEvent: any, record: IPurchaseRequisitionTemplateItem, key: string, index: number) => void = (\n    changeEventType,\n    changeEvent,\n    record,\n    key,\n    index\n  ) => {\n    console.group('dataChanged');\n    console.log('changeEventType >>: ', changeEventType);\n    console.log('changeEvent >>: ', changeEvent);\n    console.log('record >>: ', record);\n    console.log('key >>: ', key);\n    console.log('index >>: ', index);\n    console.groupEnd();\n\n    let valueToUpdate: any;\n    switch (changeEventType) {\n      case ChangeEvent.NUMBER_INPUT:\n        valueToUpdate = changeEvent;\n        break;\n      case ChangeEvent.DATE_TIME:\n        valueToUpdate = changeEvent ? (changeEvent as Moment).toDate() : undefined;\n        break;\n      case ChangeEvent.TEXT_INPUT:\n        valueToUpdate = changeEvent.target.value;\n        break;\n      default:\n        valueToUpdate = '';\n        break;\n    }\n\n    if (props.currentTemplate) {\n      const updatedSelectedPurchaseRequisitionApproval = updateData(props.currentTemplate, valueToUpdate, record, key);\n      updateTemplate(updatedSelectedPurchaseRequisitionApproval);\n    }\n  };\n\n  /**\n   * Add column display settings updated time stamp to the tail of column keys to ensure columns are always refreshed after settings updated\n   * - If key remains the same, react does not refresh component, hence adding timestamp in key to force refresh\n   * - However, if refresh on every render, user will be unable to edit the data in table, hence only refresh if the time stamp got updated\n   */\n  const CURRENT_TIME: number = props.tableColumnDisplaySettingsUpdateTime.getTime();\n  const COLUMNS: ITableColumn = {\n    sequence: <Table.Column title=\"Row\" width=\"65px\" render={(value, record: IPurchaseRequisitionTemplateItem, index: number) => <>{index + 1}</>} key={`sequence-${CURRENT_TIME}`} />,\n    componentCode: <Table.Column title=\"Component ID\" width=\"150px\" dataIndex=\"componentCode\" key={`componentCode-${CURRENT_TIME}`} />,\n    componentName: <Table.Column title=\"Component Name\" width=\"172px\" dataIndex=\"componentName\" key={`componentName-${CURRENT_TIME}`} />,\n    vendor: <Table.Column title=\"Vendor\" width=\"172px\" dataIndex=\"vendorName\" key={`vendorName-${CURRENT_TIME}`} />,\n    balance: (\n      <Table.Column\n        title={\n          <span>\n            Balance Qty <br />\n            (kgs)\n          </span>\n        }\n        width=\"133px\"\n        render={(value, record: IPurchaseRequisitionTemplateItem, index: number) => <>{componentAndStockBalance?.get(record.componentCode) || 0}</>}\n        key={`balance-${CURRENT_TIME}`}\n      />\n    ),\n    packagingSize: (\n      <Table.Column\n        title={\n          <span>\n            Packaging Size <br />\n            (kgs per pack)\n          </span>\n        }\n        width=\"150px\"\n        dataIndex=\"packagingSize\"\n        render={(value: number, record: IPurchaseRequisitionTemplateItem, index: number) => (\n          <InputNumber type=\"number\" onChange={(e) => dataChanged(ChangeEvent.NUMBER_INPUT, e, record, 'packagingSize', index)} value={value} />\n        )}\n        key={`packagingSize-${CURRENT_TIME}`}\n      />\n    ),\n    noOfPacks: (\n      <Table.Column\n        title=\"No. of Packs to Order\"\n        width=\"150px\"\n        dataIndex=\"quantity\"\n        render={(value: number, record: IPurchaseRequisitionTemplateItem, index: number) => (\n          <InputNumber type=\"number\" onChange={(e) => dataChanged(ChangeEvent.NUMBER_INPUT, e, record, 'quantity', index)} value={value} />\n        )}\n        key={`quantity-${CURRENT_TIME}`}\n      />\n    ),\n    quantity: (\n      <Table.Column\n        title=\"Total Quantity to Order (kgs)\"\n        width=\"133px\"\n        render={(value, record: IPurchaseRequisitionTemplateItem, index: number) => <>{record.packagingSize * (record.quantity || 0)}</>}\n        key={`quantity-${CURRENT_TIME}`}\n      />\n    ),\n    deliveryDate: (\n      <Table.Column\n        title={\n          <Popover\n            content={\n              <DatePicker\n                inputReadOnly\n                onChange={(moment) => {\n                  updateAllDeliveryDate(moment);\n                }}\n              />\n            }\n            trigger=\"click\"\n          >\n            <div className=\"cursor-pointer\">\n              <span>Delivery Date</span>\n              <br />\n              <span style={{ fontSize: '8px' }}>*Click to change all</span>\n            </div>\n          </Popover>\n        }\n        width=\"136px\"\n        dataIndex=\"deliveryDate\"\n        render={(value: Date, record: IPurchaseRequisitionTemplateItem, index: number) => {\n          let castedValue = undefined;\n          if (value) {\n            castedValue = moment(new Date(value));\n          }\n          return <DatePicker inputReadOnly value={castedValue} onChange={(moment) => dataChanged(ChangeEvent.DATE_TIME, moment, record, 'deliveryDate', index)} />;\n        }}\n        key={`deliveryDate-${CURRENT_TIME}`}\n      />\n    ),\n    clearInput: (\n      <Table.Column\n        title={\n          <Popconfirm title=\"Are you sure you want to clear input for all rows?\" okText=\"OK\" cancelText=\"Cancel\" onConfirm={() => clearAllInput()}>\n            <div className=\"cursor-pointer\">\n              <span>Clear Input</span>\n              <br />\n              <span style={{ fontSize: '8px' }}>*Click to clear all</span>\n            </div>\n          </Popconfirm>\n        }\n        width=\"114px\"\n        render={(value, record: IPurchaseRequisitionTemplateItem, index: number) => <Button onClick={() => clearInputByItemId(record)} icon={<ClearOutlined />} />}\n        key={`clearInput-${CURRENT_TIME}`}\n      />\n    ),\n  };\n\n  return (\n    <>\n      <Table dataSource={props.searchResult} rowKey=\"id\" scroll={{ y: windowSize.height - TABLE_BODY_MAX_HEIHGT_CONSTRAINT }} pagination={TABLE_PAGINATION_CONFIG}>\n        {props.tableColumnDisplaySettings &&\n          props.tableColumnDisplaySettings.filter((columnDisplaySetting) => columnDisplaySetting.visible).map((columnDisplaySetting) => COLUMNS[columnDisplaySetting.columnKey])}\n      </Table>\n    </>\n  );\n};\n\nexport default PurchaseRequisitionRequestConstructor;\n","import { ITableColumnDisplaySettings } from '@dto/i-table-columns';\n\nconst DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS: ITableColumnDisplaySettings[] = [\n  {\n    columnKey: 'sequence',\n    settingDisplayName: 'Row',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'componentCode',\n    settingDisplayName: 'Component Code',\n    visible: true,\n    visibilityEditable: false,\n  },\n  {\n    columnKey: 'componentName',\n    settingDisplayName: 'Component Name',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'vendor',\n    settingDisplayName: 'Vendor',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'balance',\n    settingDisplayName: 'Balance Quantity',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'packagingSize',\n    settingDisplayName: 'Packaging Size',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'noOfPacks',\n    settingDisplayName: 'No. of Packs',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'quantity',\n    settingDisplayName: 'Total Quantity',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'deliveryDate',\n    settingDisplayName: 'Delivery Date',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'clearInput',\n    settingDisplayName: 'Actions',\n    visible: true,\n    visibilityEditable: true,\n  },\n];\n\nexport default DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS;\n","import { useEffect } from 'react';\nimport List from 'antd/lib/list';\nimport { DownOutlined, UndoOutlined, UpOutlined } from '@ant-design/icons';\nimport Checkbox, { CheckboxChangeEvent } from 'antd/lib/checkbox/Checkbox';\n\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { ITableColumnDisplaySettings } from '@dto/i-table-columns';\nimport DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS from '@constant/purchase-requisition-request/purchase-requisition-request-table-display-settings';\nimport { popNotification } from '@module/shared/components/notification';\nimport { NotificationType } from '@constant/notification.enum';\nimport { Button } from 'antd';\n\ninterface IPurchaseRequisitionColumnFilterProps {\n  tableColumnDisplaySettings?: ITableColumnDisplaySettings[];\n  setTableColumnDisplaySettings: (columnFilters: ITableColumnDisplaySettings[]) => void;\n}\n\nconst PurchaseRequisitionRequestTableDisplaySettings: React.FC<IPurchaseRequisitionColumnFilterProps> = (props) => {\n  const setTableColumnDisplaySettings = props.setTableColumnDisplaySettings;\n  const tableColumnDisplaySettings = props.tableColumnDisplaySettings;\n\n  useEffect(() => {\n    const savedPurchaseRequisitionRequestTableDisplaySettings = localStorage.getItem('purchaseRequisitionRequestTableDisplaySettings');\n\n    if (savedPurchaseRequisitionRequestTableDisplaySettings) {\n      const parsedSavedPurchaseRequisitionRequestTableDisplaySettings: ITableColumnDisplaySettings[] = JSON.parse(savedPurchaseRequisitionRequestTableDisplaySettings);\n      setTableColumnDisplaySettings(parsedSavedPurchaseRequisitionRequestTableDisplaySettings);\n    } else {\n      setTableColumnDisplaySettings(DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS);\n      saveDisplaySettings(DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (tableColumnDisplaySettings) {\n      saveDisplaySettings(tableColumnDisplaySettings);\n    }\n  }, [tableColumnDisplaySettings]);\n\n  const saveDisplaySettings = (tableColumnDisplaySettings: ITableColumnDisplaySettings[]) => {\n    /**\n     * Only save it in non local environment\n     */\n    if (process.env.NODE_ENV !== 'development') {\n      localStorage.setItem('purchaseRequisitionRequestTableDisplaySettings', JSON.stringify(tableColumnDisplaySettings));\n    }\n  };\n\n  const updateVisibility = (e: CheckboxChangeEvent, item: ITableColumnDisplaySettings) => {\n    if (tableColumnDisplaySettings) {\n      const updatedTableColumnDisplaySettings = CLONING_LIB.deepClone(tableColumnDisplaySettings).map((setting) => {\n        if (setting.columnKey === item.columnKey) {\n          setting.visible = e.target.checked;\n        }\n        return setting;\n      });\n      setTableColumnDisplaySettings(updatedTableColumnDisplaySettings);\n    }\n  };\n\n  const resetTableDisplaySettings = () => {\n    localStorage.removeItem('purchaseRequisitionRequestTableDisplaySettings');\n    setTableColumnDisplaySettings(DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS);\n    saveDisplaySettings(DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS);\n  };\n\n  const moveColumn = (item: ITableColumnDisplaySettings, moveIndex: number) => {\n    if (tableColumnDisplaySettings) {\n      /**\n       * - Find index of item\n       * - Check validity of moving range\n       * - Move\n       */\n      const currentIndex = tableColumnDisplaySettings.findIndex((setting) => setting.columnKey === item.columnKey);\n      const indexInBound = currentIndex + moveIndex >= 0 && currentIndex + moveIndex <= tableColumnDisplaySettings.length - 1;\n\n      if (indexInBound) {\n        let updatedTableColumnDisplaySettings = CLONING_LIB.deepClone(tableColumnDisplaySettings);\n\n        /**\n         * - Backup destination item\n         * - Replace destination item with current item\n         * - Replace current item with backed destination item\n         */\n        const destinationItem = updatedTableColumnDisplaySettings[currentIndex + moveIndex];\n        updatedTableColumnDisplaySettings[currentIndex + moveIndex] = item;\n        updatedTableColumnDisplaySettings[currentIndex] = destinationItem;\n        setTableColumnDisplaySettings([...updatedTableColumnDisplaySettings]);\n      } else {\n        popNotification('Cannot move outside of sequence range', NotificationType.warning);\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"d-flex flex-column justify-content-between h-100\">\n        <List\n          dataSource={tableColumnDisplaySettings}\n          itemLayout=\"vertical\"\n          style={{ width: 200 }}\n          renderItem={(item, index) => {\n            return (\n              <List.Item key={item.columnKey}>\n                <div className=\"d-flex justify-content-between\">\n                  <Checkbox className=\"align-self-center\" checked={item.visible} onChange={(e) => updateVisibility(e, item)} disabled={!item.visibilityEditable} />\n                  <span className=\"align-self-center\">{item.settingDisplayName}</span>\n                  <div className=\"d-flex flex-column align-self-center mx-3\">\n                    <UpOutlined onClick={() => moveColumn(item, -1)} />\n                    <DownOutlined onClick={() => moveColumn(item, 1)} />\n                  </div>\n                </div>\n              </List.Item>\n            );\n          }}\n        />\n        <Button onClick={resetTableDisplaySettings} icon={<UndoOutlined style={{ transform: 'translateY(-3px)' }} />}>\n          Reset\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseRequisitionRequestTableDisplaySettings;\n","import { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\n\nexport default function generateIndex(purchaseRequisitionTemplateItem: IPurchaseRequisitionTemplateItem): string {\n  const searchIndex = JSON.stringify(purchaseRequisitionTemplateItem);\n  return searchIndex.replace(/\\s+/g, '').toLowerCase();\n}\n","export enum Sort {\n  ASC = 'ASC',\n  DES = 'DES',\n}\n","import axios from 'axios';\nimport { IPurchaseRequisitionRequest } from '@dto/i-purchase-requisition-request.dto';\nimport { Sort } from '@constant/sort.enum';\nimport { QueryParamsBuilder } from '@utils/api/query-params-builder';\nimport { PURCHASE_REQUISITION_REQUEST } from '@constant/api-endpoints';\n\nexport async function createPurchaseRequisitionRequest(purchaseRequisitionRequest: IPurchaseRequisitionRequest) {\n  return await axios.post<IPurchaseRequisitionRequest>(`${PURCHASE_REQUISITION_REQUEST}/request`, purchaseRequisitionRequest);\n}\n\nexport async function getPurchaseRequisitionRequest(startDate: Date, endDate: Date, sortBy: Sort) {\n  // TODO: Temporary remove filter date parameter\n  // const wrappedParams = { startDate, endDate, sortBy };\n  let sort = 'createdDate';\n  if (sortBy === Sort.DES) {\n    sort += ',desc';\n  } else if (sortBy === Sort.ASC) {\n    sort += ',asc';\n  }\n  const wrappedParams = { sort };\n  const url: string = QueryParamsBuilder.withUrl(`${PURCHASE_REQUISITION_REQUEST}/submission`).addParams(wrappedParams).build();\n  return await axios.get<IPurchaseRequisitionRequest[]>(url);\n}\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button, Drawer } from 'antd';\nimport Title from 'antd/lib/typography/Title';\n\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { ITableColumnDisplaySettings } from '@dto/i-table-columns';\nimport { getSearchText, SearchEngine } from '@utils/search/native-search';\nimport { IPurchaseRequisitionTemplate } from '@dto/i-purchase-requisition-template.dto';\nimport { IPurchaseRequisitionRequest } from '@dto/i-purchase-requisition-request.dto';\nimport { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\n\nimport PurchaseRequisitionTemplateBrowser from '../components/template-browser/template-browser';\nimport PurchaseRequisitionRequestConstructor from '../components/request-constructor/request-constructor';\nimport PurchaseRequisitionRequestTableDisplaySettings from '../components/table-column-display-settings/table-column-display-settings';\nimport generateIndex from '../components/request-constructor/request-constructor-indexer';\nimport { setLoading } from '@module/shared/reducers/app-reducers';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS from '@constant/purchase-requisition-request/purchase-requisition-request-table-display-settings';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { PURCHASE_REQUISITION_BOTTOM_TOOLS_HEIGHT, PURCHASE_REQUISITION_TITLE_HEIGHT, PURCHASE_REQUISITION_TOP_TOOLS_HEIGHT } from '@constant/display/purchase-requisition-request.constant';\nimport { createPurchaseRequisitionRequest } from '@api/purchase-requisition-request.api';\nimport { IPurchaseRequisitionRequestItem } from '@dto/i-purchase-requisition-request-item.dto';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { popNotification } from '@module/shared/components/notification';\nimport { NotificationType } from '@constant/notification.enum';\n\ninterface IPurchaseRequisitionRequestPageProps extends StateProps, DispatchProps {}\n\nconst PurchaseRequisitionRequestPage: React.FC<IPurchaseRequisitionRequestPageProps> = (props: IPurchaseRequisitionRequestPageProps) => {\n  const [submissionInProgress, setSubmissionInProgress] = useState<boolean>(false);\n  const [selectedTemplate, setSelectedTemplate] = useState<IPurchaseRequisitionTemplate>();\n  const [tableColumnDisplaySettings, setTableColumnDisplaySettings] = useState<ITableColumnDisplaySettings[]>();\n  const [tableColumnDisplaySettingsUpdateTime, setTableColumnDisplaySettingsUpdateTime] = useState<Date>(new Date());\n  const [searchResult, setSearchResult] = useState<IPurchaseRequisitionTemplateItem[]>();\n  const [showTableDisplaySettings, setShowTableDisplaySettings] = useState<boolean>(false);\n  const searchEngine: SearchEngine<IPurchaseRequisitionTemplateItem> = new SearchEngine([], generateIndex);\n  const windowSize: IWindowSize = useWindowResized();\n  const PURCHASE_REQUISITION_CONSTRUCTOR_WRAPPER_HEIGHT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT + APP_CONTENT_MARGIN + PURCHASE_REQUISITION_TITLE_HEIGHT + PURCHASE_REQUISITION_TOP_TOOLS_HEIGHT + PURCHASE_REQUISITION_BOTTOM_TOOLS_HEIGHT;\n\n  useEffect(() => {\n    const savedPurchaseRequisitionRequestTableDisplaySettings = localStorage.getItem('purchaseRequisitionRequestTableDisplaySettings');\n    if (savedPurchaseRequisitionRequestTableDisplaySettings) {\n      const parsedSavedPurchaseRequisitionRequestTableDisplaySettings: ITableColumnDisplaySettings[] = JSON.parse(savedPurchaseRequisitionRequestTableDisplaySettings);\n      setTableColumnDisplaySettings(parsedSavedPurchaseRequisitionRequestTableDisplaySettings);\n    } else {\n      setTableColumnDisplaySettings(DEFAULT_PURCHASE_REQUISITION_REQUEST_TABLE_DISPLAY_SETTINGS);\n    }\n  }, []);\n\n  /**\n   * Update the tableColumnDisplaySettingsUpdateTime to latest date if it is being modified\n   */\n  useEffect(() => {\n    setTableColumnDisplaySettingsUpdateTime(new Date());\n  }, [tableColumnDisplaySettings]);\n\n  useEffect(() => {\n    if (selectedTemplate) {\n      const initSearchResult = CLONING_LIB.deepClone(selectedTemplate.purchaseRequisitionTemplateItemList);\n      setSearchResult(initSearchResult);\n    }\n  }, [selectedTemplate]);\n\n  const updateRemarks: (event: ChangeEvent<HTMLTextAreaElement> | undefined) => void = (event) => {\n    if (selectedTemplate && event) {\n      const updatedTemplate = CLONING_LIB.deepClone(selectedTemplate);\n      updatedTemplate.remarks = event.target.value;\n      setSelectedTemplate(updatedTemplate);\n    }\n  };\n\n  const handleSearch = (value: string, event: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLInputElement> | undefined) => {\n    props.setLoading(true);\n    console.group('Search [PurchaseRequititionApprovalTable]');\n    console.log('value >>: ', value);\n    console.log('event >>: ', event);\n    if (selectedTemplate) {\n      console.log('selectedPurchaseRequisitionApproval >>: ', selectedTemplate);\n      const sanitisedSearchText: string = getSearchText(value);\n      const searchOutput = searchEngine.updateEngine(selectedTemplate.purchaseRequisitionTemplateItemList).search(sanitisedSearchText);\n      setSearchResult(searchOutput);\n    }\n    setTimeout(function () {\n      props.setLoading(false);\n    }, 500);\n    console.groupEnd();\n  };\n\n  const openTableDisplaySettings = () => {\n    setShowTableDisplaySettings(!showTableDisplaySettings);\n  };\n\n  const submitPurchaseRequisitionRequest = async () => {\n    setSubmissionInProgress(true);\n    if (selectedTemplate) {\n      const purchaseRequisitionRequestItems: IPurchaseRequisitionRequestItem[] = selectedTemplate.purchaseRequisitionTemplateItemList.map((purchaseRequisitionTemplateItem) => {\n        return {\n          componentCode: purchaseRequisitionTemplateItem.componentCode,\n          componentName: purchaseRequisitionTemplateItem.componentName,\n          vendorId: purchaseRequisitionTemplateItem.vendorId,\n          vendorName: purchaseRequisitionTemplateItem.vendorName,\n          stockBalance: 0, // undefined problem\n          packagingSize: purchaseRequisitionTemplateItem.packagingSize,\n          noOfPacks: purchaseRequisitionTemplateItem.quantity || 0, // because initially template quantity is 0\n          quantity: purchaseRequisitionTemplateItem.packagingSize * (purchaseRequisitionTemplateItem.quantity || 0),\n          deliveryDate: purchaseRequisitionTemplateItem.deliveryDate || new Date(), // undefined problem\n        };\n      }).filter(items => items.quantity > 0);\n      \n      if (purchaseRequisitionRequestItems.length === 0) {\n        popNotification('No Items to be Submit', NotificationType.error);\n        setSubmissionInProgress(false);\n        return;\n      }\n\n      const purchaseRequisitionRequest: IPurchaseRequisitionRequest = {\n        createdDate: new Date(),\n        templateId: selectedTemplate.id,\n        remarks: selectedTemplate.remarks,\n        purchaseRequisitionRequestItems: purchaseRequisitionRequestItems,\n      };\n      const result = await createPurchaseRequisitionRequest(purchaseRequisitionRequest);\n      if (result) {\n        setSubmissionInProgress(false);\n        if (result.status === ApiResponseStatus.SUCCESS) {\n          popNotification('Successfully Submitted Request', NotificationType.success);\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\" style={{ height: `${PURCHASE_REQUISITION_TITLE_HEIGHT}px` }}>\n          <div className=\"col d-flex flex-column justify-content-center\">\n            <Title level={4}>Purchase Requisition</Title>\n          </div>\n        </div>\n        <div className=\"row\" style={{ height: `${PURCHASE_REQUISITION_TOP_TOOLS_HEIGHT}px` }}>\n          <div className=\"col-8\">\n            <PurchaseRequisitionTemplateBrowser setSelectedTemplate={setSelectedTemplate} setLoading={props.setLoading} />\n          </div>\n          <div className=\"col-4 d-flex\">\n            <Input.Search placeholder=\"Search\" onSearch={handleSearch} allowClear></Input.Search>\n            <Button onClick={openTableDisplaySettings} style={{ width: '50px' }} icon={<SettingOutlined />}></Button>\n          </div>\n        </div>\n\n        <div\n          className=\"row\"\n          style={{\n            height: `${windowSize.height - PURCHASE_REQUISITION_CONSTRUCTOR_WRAPPER_HEIGHT_CONSTRAINT}px`,\n          }}\n        >\n          <div className=\"col\">\n            <PurchaseRequisitionRequestConstructor\n              searchResult={searchResult}\n              currentTemplate={selectedTemplate}\n              tableColumnDisplaySettings={tableColumnDisplaySettings}\n              tableColumnDisplaySettingsUpdateTime={tableColumnDisplaySettingsUpdateTime}\n              updateTemplate={setSelectedTemplate}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\" style={{ height: `${PURCHASE_REQUISITION_BOTTOM_TOOLS_HEIGHT}px` }}>\n          <div className=\"col\">\n            <Input.TextArea className=\"remarks-textbox\" value={selectedTemplate?.remarks} onChange={updateRemarks} rows={3} placeholder=\"Remarks here\"></Input.TextArea>\n          </div>\n          <div className=\"col d-flex flex-column align-items-end\">\n            <Button type=\"primary\" size=\"large\" onClick={submitPurchaseRequisitionRequest} disabled={submissionInProgress}>\n              Submit Request\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <Drawer title=\"Column Settings\" placement=\"right\" onClose={openTableDisplaySettings} visible={showTableDisplaySettings}>\n        <PurchaseRequisitionRequestTableDisplaySettings tableColumnDisplaySettings={tableColumnDisplaySettings} setTableColumnDisplaySettings={setTableColumnDisplaySettings} />\n      </Drawer>\n    </>\n  );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  setLoading,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseRequisitionRequestPage);\n","export enum PurchaseRequisitionApprovalStatus {\n  TO_CONFIRM = 'TO_CONFIRM',\n  CONFIRMED = 'CONFIRMED',\n  ISSUED = 'ISSUED',\n}\n\nconst DISPLAY_TEXT_MAP = new Map<string, string>();\nDISPLAY_TEXT_MAP.set(PurchaseRequisitionApprovalStatus.TO_CONFIRM, 'To be confirmed');\nDISPLAY_TEXT_MAP.set(PurchaseRequisitionApprovalStatus.CONFIRMED, 'Confirmed');\nDISPLAY_TEXT_MAP.set(PurchaseRequisitionApprovalStatus.ISSUED, 'Issued');\n\nexport function PurchaseRequisitionApprovalStatusDisplayText(key: PurchaseRequisitionApprovalStatus): string {\n  const displayText = DISPLAY_TEXT_MAP.get(key.toString());\n\n  if (displayText) {\n    return displayText;\n  } else {\n    throw new Error(\"Status's Display Text not defined. Please define status display text at function: PurchaseRequisitionApprovalStatusDisplayText\");\n  }\n}\n","export const PURCHASE_REQUISITION_TITLE_HEIGHT: number = 40;\nexport const PURCHASE_REQUISITION_TOP_TOOLS_HEIGHT: number = 60;\nexport const PURCHASE_REQUISITION_BOTTOM_TOOLS_HEIGHT: number = 80;\n","import { PURCHASE_REQUISITION_APPROVAL, PURCHASE_REQUISITION_APPROVAL_ITEM } from '@constant/api-endpoints';\nimport { IPurchaseRequisitionApprovalItem } from '@dto/i-purchase-requisition-approval-item.dto';\nimport { IPurchaseRequisitionApproval } from '@dto/i-purchase-requisition-approval.dto';\nimport { QueryParamsBuilder } from '@utils/api/query-params-builder';\nimport axios from 'axios';\n\nexport async function getPurchaseRequisitionApproval() {\n  let sort = 'createdDate,desc';\n  const wrappedParams = { sort };\n  const url: string = QueryParamsBuilder.withUrl(`${PURCHASE_REQUISITION_APPROVAL}`).addParams(wrappedParams).build();\n  return await axios.get<IPurchaseRequisitionApproval[]>(url);\n}\n\nexport async function putPurchaseRequisitionApproval(purchaseRequisitionApproval: IPurchaseRequisitionApproval) {\n  return await axios.put<IPurchaseRequisitionApproval[]>(`${PURCHASE_REQUISITION_APPROVAL}/${purchaseRequisitionApproval.id}`, purchaseRequisitionApproval);\n}\n\nexport async function postPurchaseRequisitionApprovalItem(purchaseRequisitionApprovalId: number, purchaseRequisitionApprovalItem: IPurchaseRequisitionApprovalItem) {\n  const url = `${PURCHASE_REQUISITION_APPROVAL_ITEM}/${purchaseRequisitionApprovalId}`;\n  return await axios.post<IPurchaseRequisitionApprovalItem>(url, purchaseRequisitionApprovalItem);\n}\n","import axios from 'axios';\nimport { IPurchaseOrder } from '@dto/i-purchase-order.dto';\nimport { Sort } from '@constant/sort.enum';\nimport { QueryParamsBuilder } from '@utils/api/query-params-builder';\nimport { PURCHASE_ORDER, PURCHASE_ORDER_DOWNLOAD, PURCHASE_ORDER_OUTSTANDING_ITEM } from '@constant/api-endpoints';\nimport { IPurchaseApprovalOrder } from '@dto/i-purchase-approval-order.dto';\nimport { IPurchaseOrderItem } from '@dto/i-purchase-order-item.dto';\n\nexport async function createPurchaseOrder(purchaseOrder: IPurchaseOrder) {\n  return await axios.post<IPurchaseApprovalOrder>(PURCHASE_ORDER, purchaseOrder);\n}\n\nexport async function issuePO(purchaseApprovalId: number) {\n  return await axios.post<IPurchaseApprovalOrder>(`${PURCHASE_ORDER}/${purchaseApprovalId}`);\n}\n\nexport async function getPurchaseOrders(startDate: Date, endDate: Date, sortBy: Sort) {\n  // const wrappedParams = { startDate, endDate, sortBy }; // Disabled date sorting from backend temporarily\n  let sort = 'createdDate,desc';\n  const wrappedParams = { sort };\n  const url: string = QueryParamsBuilder.withUrl(PURCHASE_ORDER).addParams(wrappedParams).build();\n  return await axios.get<IPurchaseApprovalOrder[]>(url);\n}\n\nexport async function emailPurchaseOrder(purchaseApprovalId: number) {\n  return await axios.post<void>(`${PURCHASE_ORDER}/email/${purchaseApprovalId}`);\n}\n\nexport async function downloadPOFromAPI(purchaseOrderId: number) {\n  return await axios.post(`${PURCHASE_ORDER_DOWNLOAD}/${purchaseOrderId}`, {}, { responseType: 'arraybuffer' });\n}\n\nexport async function getOutstandingPurchaseOrder(vendorId?: string, page?: number, size?: number, sort?: number) {\n  const paginationParams = {\n    page,\n    size,\n    sort,\n  };\n  const vendorIdParam = {\n    vendorId: vendorId,\n  };\n  const url: string = QueryParamsBuilder.withUrl(PURCHASE_ORDER_OUTSTANDING_ITEM).addParams(paginationParams).addParams(vendorIdParam).build();\n\n  return await axios.get<IPurchaseOrderItem[]>(url);\n}\n\nexport async function getGrnReceiptWithVendorOutstandingPO(vendorId: string, grnNo: string, page?: number, size?: number, sort?: string) {\n  const paginationParams = {\n    page,\n    size,\n    sort,\n  };\n  const apiUrl: string = `${PURCHASE_ORDER}/${grnNo}/outstanding-item/${vendorId}`;\n  const url: string = QueryParamsBuilder.withUrl(apiUrl).addParams(paginationParams).build();\n  return await axios.get<IPurchaseOrderItem[]>(url);\n}\n","import { ReloadOutlined } from '@ant-design/icons';\nimport { Button, DatePicker, Select } from 'antd';\nimport moment from 'moment';\n\nimport { Sort } from '@constant/sort.enum';\n\ninterface IFilterAndSortProps {\n  dateRange?: [Date, Date];\n  sort?: Sort;\n  dateRangeChangedHandler: (dateRange: [Date, Date] | undefined) => void;\n  sortChangedHandler: (sort: Sort | undefined) => void;\n}\n\nconst FilterAndSort: React.FC<IFilterAndSortProps> = (props) => {\n  const sortChangedHandler = props.sortChangedHandler;\n  const dateRangeChangedHandler = props.dateRangeChangedHandler;\n  const reset = () => {\n    dateRangeChangedHandler(undefined);\n    sortChangedHandler(undefined);\n  };\n\n  return (\n    <>\n      <div className=\"d-flex align-items-center\">\n        <DatePicker.RangePicker\n          format=\"DD/MM/YYYY\"\n          inputReadOnly\n          value={props.dateRange && [moment(props.dateRange[0]), moment(props.dateRange[1])]}\n          allowEmpty={[true, true]}\n          onChange={(values) => {\n            if (values && values[0] != null && values[1] != null) {\n              const dateRange: [Date, Date] = [values[0].toDate(), values[1].toDate()];\n              dateRangeChangedHandler(dateRange);\n            }\n          }}\n        ></DatePicker.RangePicker>\n        <Select placeholder=\"Sort By\" value={props.sort} onChange={sortChangedHandler} style={{ width: 150 }} className=\"mx-1\">\n          <Select.Option value={Sort.ASC}>Ascending Date</Select.Option>\n          <Select.Option value={Sort.DES}>Descending Date</Select.Option>\n        </Select>\n        <Button className=\"d-inline-flex align-items-center\" onClick={reset}>\n          <ReloadOutlined />\n          Reset\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default FilterAndSort;\n","import { ReactNode, useState } from 'react';\n\nimport moment from 'moment';\nimport { Button, DatePicker, InputNumber } from 'antd';\n\nimport { getItemBySearchComponentOrVendor } from '@api/component.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { IPurchaseRequisitionApprovalItem, mapTemplateItemToApprovalItem } from '@dto/i-purchase-requisition-approval-item.dto';\nimport { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\nimport DebounceSelect from '@module/shared/components/debounce-select/debounce-select';\n\ninterface IComponentSelectorProps {\n  onAddComponent: (componentToAdd?: IPurchaseRequisitionApprovalItem) => void;\n}\n\nconst ComponentSelector: React.FC<IComponentSelectorProps> = (props) => {\n  const getItemsWrapper = async (searchString: string) => {\n    const componentCode = searchString;\n    const vendorId = searchString;\n    const res = await getItemBySearchComponentOrVendor(componentCode, vendorId);\n\n    if (res && res.status === ApiResponseStatus.SUCCESS) {\n      setComponents(res.data);\n      return res.data.map((component) => {\n        return {\n          label: <>{`${component.componentName} [${component.componentCode}] - ${component.vendorName}`}</>,\n          value: component.id,\n        };\n      });\n    } else {\n      return [];\n    }\n  };\n\n  const [components, setComponents] = useState<IPurchaseRequisitionTemplateItem[]>([]);\n  const [componentToAdd, setComponentToAdd] = useState<IPurchaseRequisitionApprovalItem>();\n  const [noOfPacks, setNoOfPacks] = useState<number>();\n  const [deliveryDate, setDeliveryDate] = useState<Date>();\n\n  const onDeliveryDateChanged = (value: moment.Moment | null, dateString: string) => {\n    setDeliveryDate(value?.toDate());\n  };\n\n  const onNoOfPacksChanged = (value: number) => {\n    setNoOfPacks(value);\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"row col-10\">\n          <div className=\"col\">\n            <DebounceSelect\n              showSearch\n              value={componentToAdd && { value: `${componentToAdd.componentName} [${componentToAdd.componentCode}] - ${componentToAdd.vendorName}` }}\n              placeholder=\"Select Components\"\n              fetchOptions={getItemsWrapper}\n              onChange={(e: { value: string; label: ReactNode }) => {\n                const selectedComponent = components.find((component) => component.id === Number(e.value));\n                let approvalItem: IPurchaseRequisitionApprovalItem | undefined;\n                if (selectedComponent) {\n                  approvalItem = mapTemplateItemToApprovalItem(selectedComponent);\n                  approvalItem.noOfPacks = noOfPacks || 0;\n                  approvalItem.deliveryDate = deliveryDate || new Date();\n                }\n                setComponentToAdd(approvalItem);\n              }}\n              style={{ width: '100%' }}\n              debounceTimeout={1000}\n            />\n          </div>\n          <div className=\"w-100 my-1\"></div>\n          <div className=\"col\">\n            <InputNumber type=\"number\" value={noOfPacks} min={0} onChange={onNoOfPacksChanged} className=\"w-100\" placeholder=\"No of Pack to Order\" />\n          </div>\n          <div className=\"col\">\n            <DatePicker inputReadOnly value={deliveryDate && moment(deliveryDate)} onChange={onDeliveryDateChanged} className=\"w-100\"></DatePicker>\n          </div>\n        </div>\n        <div className=\"col-2\">\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              props.onAddComponent(componentToAdd);\n            }}\n          >\n            Add Component\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ComponentSelector;\n","import { PurchaseRequisitionApprovalStatus } from '@constant/purchase-requisition-approval-status.enum';\nimport { IPurchaseRequisitionRequestItem } from './i-purchase-requisition-request-item.dto';\nimport { IPurchaseRequisitionTemplateItem } from './i-purchase-requisition-template-item.dto';\n\nexport interface IPurchaseRequisitionApprovalItem extends IPurchaseRequisitionRequestItem {\n  id?: number;\n  itemCost: number;\n  status: PurchaseRequisitionApprovalStatus;\n  balance: number;\n}\n\nexport function mapTemplateItemToApprovalItem(purchaseRequisitionTemplateItem: IPurchaseRequisitionTemplateItem): IPurchaseRequisitionApprovalItem {\n  // TODO: [LU] ensure mapping values are correct\n  return {\n    componentCode: purchaseRequisitionTemplateItem.componentCode,\n    componentName: purchaseRequisitionTemplateItem.componentName,\n    vendorId: purchaseRequisitionTemplateItem.vendorId,\n    vendorName: purchaseRequisitionTemplateItem.vendorName,\n    stockBalance: 0, // TODO: [LU] need to check, difference between stockBalance and balance\n    packagingSize: purchaseRequisitionTemplateItem.packagingSize,\n    noOfPacks: 0,\n    quantity: 0,\n    deliveryDate: new Date(),\n    itemCost: 0,\n    status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n    balance: 0\n  }\n}","export const convertToLocalString: (dateTime?: any, dateOnly?: boolean) => string = (dateTime?: any, dateOnly: boolean = false) => {\n  try {\n    const dateTimeValue = new Date(dateTime);\n\n    if (dateTimeValue.toString() === 'Invalid Date') throw new Error('Invalid Date');\n\n    const localeDate = convertToLocalDate(dateTimeValue);\n    if (dateOnly) {\n      return localeDate;\n    }\n    const localeTime = convertToLocalTime(dateTimeValue);\n    return localeDate + ' ' + localeTime;\n  } catch (error) {\n    const e = error as Error;\n\n    console.group('convertToLocalString');\n    console.error('Error message', e.message);\n    console.error('Input value: ' + dateTime);\n    console.error('Stack Trace', e.stack);\n    console.groupEnd();\n    return '';\n  }\n};\n\nexport const convertToLocalDate: (date: Date) => string = (date: Date) => {\n  date = new Date(date);\n  return date.getDate() + '/' + Number(date.getMonth() + 1) + '/' + date.getFullYear();\n};\n\nexport const convertToLocalTime: (date: Date) => string = (date: Date) => {\n  date = new Date(date);\n  return date.toLocaleTimeString('en-US');\n};\n","import { Button } from 'antd';\nimport { CheckCircleOutlined } from '@ant-design/icons';\n\nimport { PurchaseRequisitionApprovalStatus } from '@constant/purchase-requisition-approval-status.enum';\nimport { IPurchaseRequisitionApprovalItem } from '@dto/i-purchase-requisition-approval-item.dto';\nimport { IPurchaseRequisitionApproval } from '@dto/i-purchase-requisition-approval.dto';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport {\n  PURCHASE_REQUISITION_APPROVAL_BOTTOM_TOOLS_HEIGHT,\n  PURCHASE_REQUISITION_APPROVAL_TITLE_HEIGHT,\n  PURCHASE_REQUISITION_APPROVAL_TOP_TOOLS_HEIGHT,\n} from '@constant/display/purchase-requisition-approval.constant';\nimport { DIVIDER_HEIGHT } from '@constant/display/divider.constant';\n\ninterface IPurchaseRequisitionSelectorProps {\n  purcahseRequisitionApprovalList?: IPurchaseRequisitionApproval[];\n  setPurcahseRequisitionApprovalList: (purcahseRequisitionApprovalList: IPurchaseRequisitionApproval[]) => void;\n  selectedPurchaseRequisitionApproval?: IPurchaseRequisitionApproval;\n  setSelectedPurcahseRequisitionApproval: (purcahseRequisitionApprovalList: IPurchaseRequisitionApproval) => void;\n  setLoading?: (loading: boolean) => void;\n}\n\nconst PurchaseRequisitionSelector: React.FC<IPurchaseRequisitionSelectorProps> = (props) => {\n  const windowSize: IWindowSize = useWindowResized();\n  const PURCHASE_REQUISITION_APPROVAL_REQUEST_SELECTOR_HEIGHT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT +\n    APP_CONTENT_MARGIN +\n    PURCHASE_REQUISITION_APPROVAL_TITLE_HEIGHT +\n    PURCHASE_REQUISITION_APPROVAL_TOP_TOOLS_HEIGHT +\n    DIVIDER_HEIGHT +\n    PURCHASE_REQUISITION_APPROVAL_BOTTOM_TOOLS_HEIGHT;\n\n  if (props.purcahseRequisitionApprovalList) {\n    const APPROVAL_LIST: IPurchaseRequisitionApproval[] = props.purcahseRequisitionApprovalList;\n    const setSelectedPurcahseRequisitionApproval = props.setSelectedPurcahseRequisitionApproval;\n    const isAllApprovalItemsIssued: (purchaseRequisitionApprovalItems: IPurchaseRequisitionApprovalItem[]) => boolean = (purchaseRequisitionApprovalItems) => {\n      return purchaseRequisitionApprovalItems.every((item) => item.status === PurchaseRequisitionApprovalStatus.ISSUED);\n    };\n\n    return (\n      <>\n        <div className=\"d-flex flex-column scrollable-menu\" style={{ height: `${windowSize.height - PURCHASE_REQUISITION_APPROVAL_REQUEST_SELECTOR_HEIGHT_CONSTRAINT}px` }}>\n          {APPROVAL_LIST.map((purchaseRequisitionApproval, index) => (\n            <Button\n              type={purchaseRequisitionApproval.id === props.selectedPurchaseRequisitionApproval?.id ? 'primary' : 'default'}\n              className=\"m-1 px-1\"\n              shape=\"round\"\n              size=\"large\"\n              key={index}\n              onClick={() => {\n                props.setLoading && props.setLoading(true);\n                setSelectedPurcahseRequisitionApproval(purchaseRequisitionApproval);\n                setTimeout(function () {\n                  props.setLoading && props.setLoading(false);\n                }, 500);\n              }}\n            >\n              <span style={{ fontSize: '10px' }}>\n                {convertToLocalString(purchaseRequisitionApproval.createdDate)}{' '}\n                {isAllApprovalItemsIssued(purchaseRequisitionApproval.purchaseRequisitionApprovalItems) && <CheckCircleOutlined style={{ color: '#22A70C', transform: 'translateY(-3px)' }} />}\n              </span>\n            </Button>\n          ))}\n        </div>\n      </>\n    );\n  } else {\n    return <div>No data</div>;\n  }\n};\n\nexport default PurchaseRequisitionSelector;\n","import Input, { InputProps } from 'antd/lib/input/Input';\n\nimport { PurchaseRequisitionApprovalStatus } from '@constant/purchase-requisition-approval-status.enum';\n\nimport { IStatefulComponentProps } from '../i-stateful-component-props';\n\ninterface IStatefulTextInputProps extends IStatefulComponentProps, InputProps {}\n\nconst StatefulTextInput: React.FC<IStatefulTextInputProps> = (props) => {\n  if (props.state === PurchaseRequisitionApprovalStatus.TO_CONFIRM) {\n    return <Input {...props}></Input>;\n  }\n  return <>{props.value}</>;\n};\n\nexport default StatefulTextInput;\n","import { InputNumber } from 'antd';\nimport { InputNumberProps } from 'antd/lib/input-number';\n\nimport { PurchaseRequisitionApprovalStatus } from '@constant/purchase-requisition-approval-status.enum';\n\nimport { IStatefulComponentProps } from '../i-stateful-component-props';\n\ninterface IStatefulNumberInputProps extends IStatefulComponentProps, InputNumberProps {}\nconst StatefulNumberInput: React.FC<IStatefulNumberInputProps> = (props) => {\n  if (props.state === PurchaseRequisitionApprovalStatus.TO_CONFIRM) {\n    return <InputNumber type=\"number\" {...props} />;\n  }\n  return <>{props.value}</>;\n};\n\nexport default StatefulNumberInput;\n","import { IPurchaseRequisitionApprovalItem } from '@dto/i-purchase-requisition-approval-item.dto';\n\nexport default function generateIndex(purchaseRequisitionApprovalItem: IPurchaseRequisitionApprovalItem): string {\n  const searchIndex = JSON.stringify(purchaseRequisitionApprovalItem);\n  return searchIndex.replace(/\\s+/g, '').toLowerCase();\n}\n","import { useEffect, useState } from 'react';\nimport { Button, DatePicker, Input, Popconfirm, Popover, Table } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport moment, { Moment } from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { getSearchText, SearchEngine } from '@utils/search/native-search';\nimport { ChangeEvent } from '@constant/change-event.enum';\nimport { TABLE_PAGINATION_CONFIG } from '@constant/pagination-config';\nimport { PurchaseRequisitionApprovalStatus, PurchaseRequisitionApprovalStatusDisplayText } from '@constant/purchase-requisition-approval-status.enum';\nimport { IPurchaseRequisitionApproval } from '@dto/i-purchase-requisition-approval.dto';\nimport { IPurchaseRequisitionApprovalItem } from '@dto/i-purchase-requisition-approval-item.dto';\nimport StatefulTextInput from '@module/shared/components/stateful-input/stateful-text-input/stateful-text-input';\nimport StatefulNumberInput from '@module/shared/components/stateful-input/stateful-number-input/stateful-number-input';\n\nimport generateIndex from './purchase-requisition-approval-table-indexer';\nimport { popNotification } from '@module/shared/components/notification';\nimport { NotificationType } from '@constant/notification.enum';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { TABLE_PAGINATION_TOOLS_HEIGHT } from '@constant/display/table.constant';\nimport {\n  PURCHASE_REQUISITION_APPROVAL_TABLE_HEADER_HEIGHT,\n  PURCHASE_REQUISITION_APPROVAL_TABLE_SEARCHBAR_HEIGHT,\n  PURCHASE_REQUISITION_APPROVAL_TITLE_HEIGHT,\n  PURCHASE_REQUISITION_APPROVAL_TOP_TOOLS_HEIGHT,\n} from '@constant/display/purchase-requisition-approval.constant';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\nimport { DIVIDER_HEIGHT } from '@constant/display/divider.constant';\ninterface IPurchaseRequititionApprovalTableProps {\n  selectedPurchaseRequisitionApproval?: IPurchaseRequisitionApproval;\n  updatePurchaseRequisitionApproval: (purchaseRequisitionApproval: IPurchaseRequisitionApproval) => void;\n  setLoading?: (loading: boolean) => void;\n}\n\nconst PurchaseRequititionApprovalTable: React.FC<IPurchaseRequititionApprovalTableProps> = (props) => {\n  const updatePurchaseRequisitionApproval = props.updatePurchaseRequisitionApproval;\n  const [searchResult, setSearchResult] = useState<IPurchaseRequisitionApprovalItem[]>();\n  const searchEngine: SearchEngine<IPurchaseRequisitionApprovalItem> = new SearchEngine([], generateIndex);\n  const PURCHASE_REQUISITION_APPROVAL_TABLE_HEIGHT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT +\n    APP_CONTENT_MARGIN +\n    PURCHASE_REQUISITION_APPROVAL_TITLE_HEIGHT +\n    PURCHASE_REQUISITION_APPROVAL_TOP_TOOLS_HEIGHT +\n    DIVIDER_HEIGHT +\n    PURCHASE_REQUISITION_APPROVAL_TABLE_SEARCHBAR_HEIGHT +\n    PURCHASE_REQUISITION_APPROVAL_TABLE_HEADER_HEIGHT +\n    TABLE_PAGINATION_TOOLS_HEIGHT;\n  const windowSize: IWindowSize = useWindowResized();\n\n  const { setLoading } = props;\n\n  useEffect(() => {\n    if (props.selectedPurchaseRequisitionApproval) {\n      const initSearchResult = CLONING_LIB.deepClone(props.selectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems);\n      setSearchResult(initSearchResult);\n    }\n  }, [props.selectedPurchaseRequisitionApproval, setLoading]);\n\n  const updateAllStatus: () => void = () => {\n    if (props.selectedPurchaseRequisitionApproval) {\n      setLoading && setLoading(true);\n\n      const isContainToConfirm: boolean = props.selectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems.some((item) => item.status === PurchaseRequisitionApprovalStatus.TO_CONFIRM);\n\n      let updatedSelectedPurchaseRequisitionApprovalItems: IPurchaseRequisitionApprovalItem[];\n      if (isContainToConfirm) {\n        updatedSelectedPurchaseRequisitionApprovalItems = props.selectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems.map((item) => {\n          if (item.status !== PurchaseRequisitionApprovalStatus.ISSUED) {\n            item.status = PurchaseRequisitionApprovalStatus.CONFIRMED;\n          }\n          return item;\n        });\n      } else {\n        updatedSelectedPurchaseRequisitionApprovalItems = props.selectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems.map((item) => {\n          if (item.status !== PurchaseRequisitionApprovalStatus.ISSUED) {\n            item.status = PurchaseRequisitionApprovalStatus.TO_CONFIRM;\n          }\n          return item;\n        });\n      }\n\n      const updatedSelectedPurchaseRequisitionApproval = CLONING_LIB.deepClone(props.selectedPurchaseRequisitionApproval);\n      updatedSelectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems = updatedSelectedPurchaseRequisitionApprovalItems;\n      updatePurchaseRequisitionApproval(updatedSelectedPurchaseRequisitionApproval);\n      setTimeout(function () {\n        setLoading && setLoading(false);\n      }, 500);\n    }\n  };\n\n  /**\n   * Update deliveryDate for all columns:\n   * - If the order qty > 0\n   * @param value The selected date\n   */\n  const updateAllDeliveryDate: (value: any) => void = (value) => {\n    if (props.selectedPurchaseRequisitionApproval) {\n      setLoading && setLoading(true);\n      const updatedSelectedPurchaseRequisitionApproval = CLONING_LIB.deepClone(props.selectedPurchaseRequisitionApproval);\n      if (value) {\n        updatedSelectedPurchaseRequisitionApproval?.purchaseRequisitionApprovalItems.forEach((item) => {\n          const isToConfirm = item.status === PurchaseRequisitionApprovalStatus.TO_CONFIRM;\n          const isQtyMoreThan0 = item.quantity > 0;\n          if (isToConfirm && isQtyMoreThan0) {\n            item.deliveryDate = (value as Moment).toDate();\n          }\n        });\n      }\n      updatePurchaseRequisitionApproval(updatedSelectedPurchaseRequisitionApproval);\n      setTimeout(function () {\n        setLoading && setLoading(false);\n      }, 500);\n    }\n  };\n\n  const removeApprovalItem: (record: IPurchaseRequisitionApprovalItem) => void = (record) => {\n    if (record.status !== PurchaseRequisitionApprovalStatus.TO_CONFIRM) {\n      const recordStatus = PurchaseRequisitionApprovalStatusDisplayText(record.status);\n      popNotification(`Cannot delete item with status \"${recordStatus}\", please change to status \"To be confirmed\"`, NotificationType.error);\n    } else {\n      if (props.selectedPurchaseRequisitionApproval) {\n        const updatedSelectedPurchaseRequisitionApproval = CLONING_LIB.deepClone(props.selectedPurchaseRequisitionApproval);\n        updatedSelectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems = updatedSelectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems.filter(\n          (item) => item.id !== record.id\n        );\n        updatePurchaseRequisitionApproval(updatedSelectedPurchaseRequisitionApproval);\n      }\n    }\n  };\n\n  /**\n   * Update the SelectedApprovalItem's field based on the provided key\n   * @param changeEvent change event emitted by html element\n   * @param record the data associated with current row\n   * @param key the key of the modified field (to perform modifying logic)\n   * @param index the index of current row (against table)\n   */\n  const dataChanged: (changeEventType: ChangeEvent, changeEvent: any, record: IPurchaseRequisitionApprovalItem, key: string, index: number) => void = (\n    changeEventType,\n    changeEvent,\n    record,\n    key,\n    index\n  ) => {\n    console.group('dataChanged');\n    console.log('changeEventType >>: ', changeEventType);\n    console.log('changeEvent >>: ', changeEvent);\n    console.log('record >>: ', record);\n    console.log('key >>: ', key);\n    console.log('index >>: ', index);\n    console.groupEnd();\n\n    let valueToUpdate: any;\n    switch (changeEventType) {\n      case ChangeEvent.NUMBER_INPUT:\n        valueToUpdate = changeEvent;\n        break;\n      case ChangeEvent.DATE_TIME:\n        valueToUpdate = changeEvent ? (changeEvent as Moment).toDate() : undefined;\n        break;\n      case ChangeEvent.TEXT_INPUT:\n        valueToUpdate = changeEvent.target.value;\n        break;\n      default:\n        valueToUpdate = '';\n        break;\n    }\n\n    if (props.selectedPurchaseRequisitionApproval) {\n      const updatedSelectedPurchaseRequisitionApproval = updateData(props.selectedPurchaseRequisitionApproval, valueToUpdate, record, key);\n      updatePurchaseRequisitionApproval(updatedSelectedPurchaseRequisitionApproval);\n    }\n  };\n\n  const updateApprovalItemStatus: (item: IPurchaseRequisitionApprovalItem) => void = (item) => {\n    if (props.selectedPurchaseRequisitionApproval) {\n      let udpatedValue: PurchaseRequisitionApprovalStatus;\n      switch (item.status) {\n        case PurchaseRequisitionApprovalStatus.TO_CONFIRM:\n          udpatedValue = PurchaseRequisitionApprovalStatus.CONFIRMED;\n          break;\n        case PurchaseRequisitionApprovalStatus.CONFIRMED:\n          udpatedValue = PurchaseRequisitionApprovalStatus.TO_CONFIRM;\n          break;\n        case PurchaseRequisitionApprovalStatus.ISSUED:\n          udpatedValue = PurchaseRequisitionApprovalStatus.ISSUED;\n          break;\n        default:\n          udpatedValue = PurchaseRequisitionApprovalStatus.TO_CONFIRM;\n          break;\n      }\n      const updatedApproval = updateData(props.selectedPurchaseRequisitionApproval, udpatedValue, item, 'status');\n      updatePurchaseRequisitionApproval(updatedApproval);\n    }\n  };\n\n  const updateData: (selectedPurchaseRequisitionApproval: IPurchaseRequisitionApproval, value: any, record: IPurchaseRequisitionApprovalItem, key: string) => IPurchaseRequisitionApproval = (\n    selectedPurchaseRequisitionApproval,\n    value,\n    record,\n    key\n  ) => {\n    const idToUpdate = record.id;\n    const updatedSelectedPurchaseRequisitionApprovalItems = selectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems.map((item) => {\n      if (item.id === idToUpdate) {\n        (item as any)[key] = value;\n      }\n      return item;\n    });\n    const updatedSelectedPurchaseRequisitionApproval = CLONING_LIB.deepClone(selectedPurchaseRequisitionApproval);\n    updatedSelectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems = updatedSelectedPurchaseRequisitionApprovalItems;\n    return updatedSelectedPurchaseRequisitionApproval;\n  };\n\n  const handleSearch = (value: string, event: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLInputElement> | undefined) => {\n    setLoading && setLoading(true);\n    console.group('Search [PurchaseRequititionApprovalTable]');\n    console.log('value >>: ', value);\n    console.log('event >>: ', event);\n    if (props.selectedPurchaseRequisitionApproval) {\n      console.log('selectedPurchaseRequisitionApproval >>: ', props.selectedPurchaseRequisitionApproval);\n      const sanitisedSearchText: string = getSearchText(value);\n      const searchOutput = searchEngine.updateEngine(props.selectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems).search(sanitisedSearchText);\n      setSearchResult(searchOutput);\n    }\n    console.groupEnd();\n    setTimeout(function () {\n      setLoading && setLoading(false);\n    }, 500);\n  };\n\n  const SELECTED_PURCHASE_REQUISITION_APPROVAL_ITEMS: IPurchaseRequisitionApprovalItem[] = searchResult || [];\n\n  return (\n    <>\n      <div>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <strong>Submission Date</strong>: {props.selectedPurchaseRequisitionApproval && convertToLocalString(props.selectedPurchaseRequisitionApproval.createdDate)}\n          </div>\n          <div>\n            <Input.Search placeholder=\"Search\" style={{ width: '200px' }} onSearch={handleSearch} allowClear></Input.Search>\n          </div>\n        </div>\n        <Table\n          dataSource={SELECTED_PURCHASE_REQUISITION_APPROVAL_ITEMS}\n          rowKey={(item) => `${item?.id || uuidv4()}`}\n          scroll={{ y: windowSize.height - PURCHASE_REQUISITION_APPROVAL_TABLE_HEIGHT_CONSTRAINT }}\n          pagination={TABLE_PAGINATION_CONFIG}\n        >\n          <Table.Column title=\"Component Name\" width=\"330px\" align=\"center\" dataIndex=\"componentName\" key=\"componentName\" />\n          <Table.Column\n            title={\n              <div>\n                Item Cost <br /> (RM/kg)\n              </div>\n            }\n            width=\"122px\"\n            align=\"center\"\n            dataIndex=\"itemCost\"\n            key=\"itemCost\"\n            render={(value, record: IPurchaseRequisitionApprovalItem, index: number) => {\n              return <StatefulNumberInput state={record.status} value={value} onChange={(e) => dataChanged(ChangeEvent.NUMBER_INPUT, e, record, 'itemCost', index)} />;\n            }}\n          />\n          <Table.Column\n            title=\"Vendor\"\n            align=\"center\"\n            dataIndex=\"vendorName\"\n            key=\"vendorName\"\n            width=\"290px\"\n            render={(value, record: IPurchaseRequisitionApprovalItem, index: number) => {\n              return <StatefulTextInput state={record.status} value={value} onChange={(e) => dataChanged(ChangeEvent.TEXT_INPUT, e, record, 'vendorName', index)} />;\n            }}\n          />\n          <Table.Column\n            title={\n              <Button onClick={updateAllStatus} size=\"small\" type=\"primary\">\n                {props.selectedPurchaseRequisitionApproval?.purchaseRequisitionApprovalItems.some((item) => item.status === PurchaseRequisitionApprovalStatus.TO_CONFIRM)\n                  ? 'Confirm All'\n                  : 'Un-Confirm All'}\n              </Button>\n            }\n            dataIndex=\"status\"\n            key=\"status\"\n            width=\"120px\"\n            align=\"center\"\n            render={(value: PurchaseRequisitionApprovalStatus, record: IPurchaseRequisitionApprovalItem, index: number) => {\n              return <Button onClick={() => updateApprovalItemStatus(record)}>{`${PurchaseRequisitionApprovalStatusDisplayText(value)}`}</Button>;\n            }}\n          />\n          <Table.Column\n            title={\n              <div>\n                Packing Size <br /> (kgs per pack)\n              </div>\n            }\n            width=\"136px\"\n            align=\"center\"\n            dataIndex=\"packagingSize\"\n            key=\"packagingSize\"\n            render={(value, record: IPurchaseRequisitionApprovalItem, index: number) => {\n              return <StatefulNumberInput state={record.status} value={value} onChange={(e) => dataChanged(ChangeEvent.NUMBER_INPUT, e, record, 'packagingSize', index)} />;\n            }}\n          />\n          <Table.Column\n            title=\"No. of Packs to Order\"\n            width=\"150px\"\n            align=\"center\"\n            dataIndex=\"noOfPacks\"\n            key=\"noOfPacks\"\n            render={(value, record: IPurchaseRequisitionApprovalItem, index: number) => {\n              return <StatefulNumberInput state={record.status} value={value} onChange={(e) => dataChanged(ChangeEvent.NUMBER_INPUT, e, record, 'noOfPacks', index)} />;\n            }}\n          />\n          <Table.Column title=\"Total Quantity To Order (kgs)\" width=\"128px\" align=\"center\" dataIndex=\"quantity\" key=\"quantity\" />\n          <Table.Column\n            title={\n              <Popover\n                content={\n                  <DatePicker\n                    inputReadOnly\n                    onChange={(moment) => {\n                      updateAllDeliveryDate(moment);\n                    }}\n                  />\n                }\n                trigger=\"click\"\n              >\n                <div className=\"cursor-pointer\">\n                  <span>Delivery Date</span>\n                  <br />\n                  <span style={{ fontSize: '8px' }}>*Click to change all</span>\n                </div>\n              </Popover>\n            }\n            width=\"200px\"\n            align=\"center\"\n            dataIndex=\"deliveryDate\"\n            key=\"deliveryDate\"\n            render={(value, record: IPurchaseRequisitionApprovalItem, index: number) => {\n              let castedValue = undefined;\n              if (value) {\n                castedValue = moment(new Date(value));\n              }\n              return (\n                <DatePicker\n                  inputReadOnly\n                  disabled={!(record.status === PurchaseRequisitionApprovalStatus.TO_CONFIRM)}\n                  value={castedValue}\n                  onChange={(moment) => dataChanged(ChangeEvent.DATE_TIME, moment, record, 'deliveryDate', index)}\n                />\n              );\n            }}\n          />\n          <Table.Column title=\"Balance\" width=\"119px\" align=\"center\" dataIndex=\"balance\" key=\"balance\" />\n          <Table.Column\n            title=\"Action\"\n            width=\"88px\"\n            align=\"center\"\n            render={(value, record: IPurchaseRequisitionApprovalItem, index: number) => {\n              return (\n                <Popconfirm title=\"Are you sure you want to delete this item?\" okText=\"OK\" cancelText=\"Cancel\" onConfirm={() => removeApprovalItem(record)}>\n                  <Button icon={<DeleteOutlined />} />\n                </Popconfirm>\n              );\n            }}\n          />\n        </Table>\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseRequititionApprovalTable;\n","import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Title from 'antd/lib/typography/Title';\nimport { Button, Divider } from 'antd';\n\nimport { Sort } from '@constant/sort.enum';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { PurchaseRequisitionApprovalStatus } from '@constant/purchase-requisition-approval-status.enum';\nimport { getPurchaseRequisitionApproval, postPurchaseRequisitionApprovalItem, putPurchaseRequisitionApproval } from '@api/purchase-requisition-approval.api';\nimport { issuePO } from '@api/purchase-order.api';\nimport { IPurchaseRequisitionApproval } from '@dto/i-purchase-requisition-approval.dto';\nimport { setLoading } from '@module/shared/reducers/app-reducers';\n\nimport FilterAndSort from '../components/filter-and-sort/filter-and-sort';\nimport ComponentSelector from '../components/component-selector/component-selector';\nimport PurchaseRequisitionSelector from '../components/purchase-requisition-request-selector/purchase-requisition-request-selector';\nimport PurchaseRequititionApprovalTable from '../components/purchase-requisition-approval-table/purchase-requisition-approval-table';\nimport { PURCHASE_REQUISITION_APPROVAL_TITLE_HEIGHT, PURCHASE_REQUISITION_APPROVAL_TOP_TOOLS_HEIGHT } from '@constant/display/purchase-requisition-approval.constant';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { DIVIDER_HEIGHT } from '@constant/display/divider.constant';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { popNotification } from '@module/shared/components/notification';\nimport { NotificationType } from '@constant/notification.enum';\nimport { IPurchaseRequisitionApprovalItem } from '@dto/i-purchase-requisition-approval-item.dto';\n\ninterface IPurchaseRequisitionApprovalProps extends StateProps, DispatchProps {}\n\nconst PurchaseRequisitionApprovalPage: React.FC<IPurchaseRequisitionApprovalProps> = (props: IPurchaseRequisitionApprovalProps) => {\n  const [approvalUpdated, setApprovalUpdated] = useState<boolean>(false);\n  const [sort, setSort] = useState<Sort>();\n  const [dateRange, setDateRange] = useState<[Date, Date]>();\n  const [purchaseRequisitionApprovalList, setPurchaseRequisitionApprovalList] = useState<IPurchaseRequisitionApproval[]>();\n  const [filteredPurchaseRequisitionApprovalList, setFilteredPurchaseRequisitionApprovalList] = useState<IPurchaseRequisitionApproval[]>();\n  const [selectedPurchaseRequisitionApproval, setSelectedPurchaseRequisitionApproval] = useState<IPurchaseRequisitionApproval>();\n  const windowSize: IWindowSize = useWindowResized();\n  const PURCHASE_REQUISITION_APPROVAL_TABLE_WRAPPER_HEIGHT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT + APP_CONTENT_MARGIN + PURCHASE_REQUISITION_APPROVAL_TITLE_HEIGHT + PURCHASE_REQUISITION_APPROVAL_TOP_TOOLS_HEIGHT + DIVIDER_HEIGHT;\n\n  const { setLoading } = props;\n\n  const getApprovals = async () => {\n    const approvals = await getPurchaseRequisitionApproval();\n    console.log(approvals);\n    if (approvals && approvals.status === ApiResponseStatus.SUCCESS) {\n      console.log(approvals);\n      setPurchaseRequisitionApprovalList(approvals.data);\n      setFilteredPurchaseRequisitionApprovalList(approvals.data);\n    }\n  };\n\n  /**\n   * Initial data load\n   */\n  useEffect(() => {\n    getApprovals();\n  }, []);\n\n  /**\n   * Listen to sort and daterange changes, refilter on any changes\n   */\n  useEffect(() => {\n    if (purchaseRequisitionApprovalList) {\n      setLoading(true);\n      let filteredAndSortedList: IPurchaseRequisitionApproval[] = CLONING_LIB.deepClone(purchaseRequisitionApprovalList);\n\n      if (dateRange) {\n        filteredAndSortedList = filteredAndSortedList.filter((approval) => new Date(approval.createdDate) > dateRange[0] && new Date(approval.createdDate) < dateRange[1]);\n      }\n\n      if (sort) {\n        filteredAndSortedList = filteredAndSortedList.sort((approval1, approval2) => {\n          if (sort === Sort.ASC) {\n            return approval1.createdDate < approval2.createdDate ? -1 : 1;\n          } else if (sort === Sort.DES) {\n            return approval1.createdDate > approval2.createdDate ? -1 : 1;\n          }\n          return 0;\n        });\n      }\n\n      setFilteredPurchaseRequisitionApprovalList(filteredAndSortedList);\n      setTimeout(function () {\n        setLoading(false);\n      }, 500);\n    }\n  }, [sort, dateRange, purchaseRequisitionApprovalList, setLoading]);\n\n  /**\n   * Update the selected content when purchaseRequisitionApprovalList changes\n   */\n  useEffect(() => {\n    if (selectedPurchaseRequisitionApproval && purchaseRequisitionApprovalList) {\n      const selectedId = selectedPurchaseRequisitionApproval.id;\n      const selectedApproval = purchaseRequisitionApprovalList.find((approval) => approval.id === selectedId);\n      setSelectedPurchaseRequisitionApproval(CLONING_LIB.deepClone(selectedApproval));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [purchaseRequisitionApprovalList]);\n\n  const handleSortChange = (value: Sort | undefined) => {\n    setSort(value);\n  };\n\n  const handleDateRangeChange = (value: [Date, Date] | undefined) => {\n    setDateRange(value);\n  };\n\n  /**\n   * - Pass in the currently selected purchase requisition approval with udpated data\n   * - Update the approval list\n   * - Updated the selected item\n   * @param value The currently selected purchase requisition approval\n   */\n  const updatePurchaseRequisitionApproval = (value: IPurchaseRequisitionApproval) => {\n    if (purchaseRequisitionApprovalList) {\n      const updatedPurcahseRequisitionApprovalList = CLONING_LIB.deepClone(purchaseRequisitionApprovalList).map((approval) => {\n        const updatedApproval = approval.id === value.id ? value : approval;\n        updatedApproval.purchaseRequisitionApprovalItems.forEach((item) => {\n          item.quantity = item.packagingSize * item.noOfPacks;\n        });\n        return updatedApproval;\n      });\n      setPurchaseRequisitionApprovalList(updatedPurcahseRequisitionApprovalList);\n      setApprovalUpdated(true);\n    }\n  };\n\n  const issuePurchaseOrder = () => {\n    if (selectedPurchaseRequisitionApproval) {\n      issuePO(selectedPurchaseRequisitionApproval.id)\n        .then((res) => {\n          console.log(res.status);\n          if (res.status === ApiResponseStatus.SUCCESS) {\n            console.log(res.data);\n            const clonedSelectedPurchaseRequisitionApproval = CLONING_LIB.deepClone(selectedPurchaseRequisitionApproval);\n            const updatedApprovalItems = clonedSelectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems.map((item) => {\n              if (item.status === PurchaseRequisitionApprovalStatus.CONFIRMED) {\n                item.status = PurchaseRequisitionApprovalStatus.ISSUED;\n              }\n              return item;\n            });\n            clonedSelectedPurchaseRequisitionApproval.purchaseRequisitionApprovalItems = updatedApprovalItems;\n            setSelectedPurchaseRequisitionApproval(clonedSelectedPurchaseRequisitionApproval);\n            updatePurchaseRequisitionApproval(clonedSelectedPurchaseRequisitionApproval);\n            popNotification('Successfully Issued Confirmed PO', NotificationType.success);\n          }\n        })\n        .catch((error) => {\n          console.log(error.response);\n          const errResponse = error.response;\n          const errorMessage = errResponse.data ? errResponse.data : 'Request Failed';\n          popNotification(errorMessage, NotificationType.error);\n        });\n    }\n  };\n\n  const submitApprovalUpdates = () => {\n    if (selectedPurchaseRequisitionApproval) {\n      putPurchaseRequisitionApproval(selectedPurchaseRequisitionApproval)\n        .then((res) => {\n          if (res.status === ApiResponseStatus.SUCCESS) {\n            setApprovalUpdated(false);\n            popNotification('Successfully Updated Approval', NotificationType.success);\n          }\n        })\n        .catch((error) => {\n          console.log(error.response);\n          const errResponse = error.response;\n          const errorMessage = errResponse.data ? errResponse.data : 'Request Failed';\n          popNotification(errorMessage, NotificationType.error);\n        });\n    }\n  };\n\n  const onAddComponentHandler = async (componentToAdd?: IPurchaseRequisitionApprovalItem) => {\n    console.log('componentToAdd :>> ', componentToAdd);\n\n    if (selectedPurchaseRequisitionApproval) {\n      if (componentToAdd === undefined || componentToAdd === null) {\n        popNotification('No component to add', NotificationType.error);\n      } else {\n        const res = await postPurchaseRequisitionApprovalItem(selectedPurchaseRequisitionApproval.id, componentToAdd);\n\n        if (res && res.status === ApiResponseStatus.SUCCESS) {\n          console.log('res :>> ', res);\n          getApprovals();\n        } else {\n          console.log('res :>> ', res);\n          popNotification(`Error adding component :[${res.status}] ${res.statusText}`, NotificationType.error);\n        }\n      }\n    } else {\n      popNotification('Please select an approval list before adding component', NotificationType.error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\" style={{ height: `${PURCHASE_REQUISITION_APPROVAL_TITLE_HEIGHT}px` }}>\n          <Title level={4}>Purchase Approval</Title>\n        </div>\n\n        <div className=\"row\" style={{ height: `${PURCHASE_REQUISITION_APPROVAL_TOP_TOOLS_HEIGHT}px` }}>\n          <div className=\"col-6\">\n            <div className=\"my-2\">Advance Sorting / Filtering</div>\n            <FilterAndSort sortChangedHandler={handleSortChange} dateRangeChangedHandler={handleDateRangeChange} dateRange={dateRange} sort={sort}></FilterAndSort>\n          </div>\n          <div className=\"col-6\">\n            <ComponentSelector onAddComponent={onAddComponentHandler}></ComponentSelector>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col\">\n            <Divider />\n          </div>\n        </div>\n\n        <div className=\"row\" style={{ height: `${windowSize.height - PURCHASE_REQUISITION_APPROVAL_TABLE_WRAPPER_HEIGHT_CONSTRAINT}px` }}>\n          <div className=\"col-2\">\n            <PurchaseRequisitionSelector\n              purcahseRequisitionApprovalList={filteredPurchaseRequisitionApprovalList}\n              setPurcahseRequisitionApprovalList={setFilteredPurchaseRequisitionApprovalList}\n              selectedPurchaseRequisitionApproval={selectedPurchaseRequisitionApproval}\n              setSelectedPurcahseRequisitionApproval={setSelectedPurchaseRequisitionApproval}\n              setLoading={props.setLoading}\n            />\n            <Paragraph ellipsis={{ rows: 2, tooltip: true }} className=\"my-2\" style={{ cursor: 'pointer' }}>\n              Remarks: {selectedPurchaseRequisitionApproval && selectedPurchaseRequisitionApproval.remarks}\n            </Paragraph>\n            {approvalUpdated ? (\n              <Button onClick={submitApprovalUpdates} type=\"primary\" size=\"middle\" className=\"issue-po-btn\">\n                Update Approval\n              </Button>\n            ) : (\n              <Button onClick={issuePurchaseOrder} type=\"primary\" size=\"middle\" className=\"issue-po-btn\">\n                Issue Confirmed PO\n              </Button>\n            )}\n          </div>\n          <div className=\"col-10\">\n            <PurchaseRequititionApprovalTable\n              selectedPurchaseRequisitionApproval={selectedPurchaseRequisitionApproval}\n              updatePurchaseRequisitionApproval={updatePurchaseRequisitionApproval}\n              setLoading={props.setLoading}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  setLoading,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseRequisitionApprovalPage);\n","export const PURCHASE_REQUISITION_APPROVAL_TITLE_HEIGHT: number = 40;\nexport const PURCHASE_REQUISITION_APPROVAL_TOP_TOOLS_HEIGHT: number = 70;\nexport const PURCHASE_REQUISITION_APPROVAL_BOTTOM_TOOLS_HEIGHT: number = 120;\nexport const PURCHASE_REQUISITION_APPROVAL_TABLE_SEARCHBAR_HEIGHT: number = 35;\nexport const PURCHASE_REQUISITION_APPROVAL_TABLE_HEADER_HEIGHT: number = 65;\n","import React from 'react';\nimport { Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\n\nimport { TABLE_PAGINATION_CONFIG } from '@constant/pagination-config';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { IPurchaseRequisitionRequest } from '@dto/i-purchase-requisition-request.dto';\nimport { IPurchaseRequisitionRequestItem } from '@dto/i-purchase-requisition-request-item.dto';\nimport { PURCHASE_REQUISITION_SUBMISSION_TABLE_SEARCHBAR_HEIGHT, PURCHASE_REQUISITION_SUBMISSION_TOP_TOOLS_HEIGHT } from '@constant/display/purcahse-requisition-submission.constant';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { TABLE_PAGINATION_TOOLS_HEIGHT, TABLE_HEADER_HEIGHT } from '@constant/display/table.constant';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\n\ninterface IPurchaseRequisitionSubmissionTableProps {\n  readonly currentSubmissionRecord?: IPurchaseRequisitionRequest;\n  filteredItems?: IPurchaseRequisitionRequestItem[];\n}\n\nconst PurchaseRequisitionSubmissionTable: React.FC<IPurchaseRequisitionSubmissionTableProps> = (props) => {\n  const PURCHASE_REQUISITION_SUBMISSION_TABLE_HEIGHT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT +\n    APP_CONTENT_MARGIN +\n    PURCHASE_REQUISITION_SUBMISSION_TOP_TOOLS_HEIGHT +\n    PURCHASE_REQUISITION_SUBMISSION_TABLE_SEARCHBAR_HEIGHT +\n    TABLE_HEADER_HEIGHT +\n    TABLE_PAGINATION_TOOLS_HEIGHT;\n  const windowSize: IWindowSize = useWindowResized();\n  const PURCHASE_REQUISITION_SUBMISSION_TABLE_COLUMN: ColumnsType<IPurchaseRequisitionRequestItem> = [\n    {\n      title: 'Component',\n      dataIndex: 'componentCode',\n      key: 'component',\n      align: 'center',\n      width: '330px',\n      render: (text: string, record: IPurchaseRequisitionRequestItem) => (\n        <span>\n          {text} - {record.componentName}\n        </span>\n      ),\n    },\n    {\n      title: 'Vendor',\n      dataIndex: 'vendorName',\n      key: 'vendor',\n      align: 'center',\n      width: '310px',\n      render: (text: string, record: IPurchaseRequisitionRequestItem) => (\n        <span>\n          {record.vendorId ? record.vendorId + ' - ' : ''}\n          {text}\n        </span>\n      ),\n    },\n    {\n      title: 'Packing Size (kgs per pack)',\n      dataIndex: 'packagingSize',\n      key: 'packingSize',\n      align: 'center',\n      width: '143px',\n    },\n    {\n      title: 'No. of Packs to Order',\n      dataIndex: 'noOfPacks',\n      key: 'noOfPacks',\n      width: '120px',\n    },\n    {\n      title: 'Total Quantity To Order (kgs)',\n      dataIndex: 'quantity',\n      key: 'quantity',\n      width: '136px',\n    },\n    {\n      title: 'Delivery Date',\n      dataIndex: 'deliveryDate',\n      key: 'deliveryDate',\n      width: '128px',\n      render: (text: string, record: IPurchaseRequisitionRequestItem) => <span>{convertToLocalString(record.deliveryDate, true)}</span>,\n    },\n  ];\n\n  const submissionItems = props.filteredItems === undefined ? props.currentSubmissionRecord?.purchaseRequisitionRequestItems ?? [] : props.filteredItems;\n  return (\n    <>\n      <Table\n        className=\"my-1\"\n        dataSource={submissionItems}\n        columns={PURCHASE_REQUISITION_SUBMISSION_TABLE_COLUMN}\n        rowKey=\"id\"\n        scroll={{ y: windowSize.height - PURCHASE_REQUISITION_SUBMISSION_TABLE_HEIGHT_CONSTRAINT }}\n        pagination={TABLE_PAGINATION_CONFIG}\n      ></Table>\n    </>\n  );\n};\n\nexport default PurchaseRequisitionSubmissionTable;\n","import { IPurchaseRequisitionRequest } from '@dto/i-purchase-requisition-request.dto';\nimport { useState } from 'react';\nimport { Button } from 'antd';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { IPurchaseRequisitionRequestItem } from '@dto/i-purchase-requisition-request-item.dto';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { PURCHASE_REQUISITION_SUBMISSION_REMARKS_HEIGHT, PURCHASE_REQUISITION_SUBMISSION_TOP_TOOLS_HEIGHT } from '@constant/display/purcahse-requisition-submission.constant';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\n\ninterface IPurchaseRequisitionSubmissionProps {\n  setSelectedSubmissionRecord: (submissionRecord: IPurchaseRequisitionRequest) => void;\n  purchaseRequisitionSubmissios: IPurchaseRequisitionRequest[];\n  setFilteredSubmissionsItems: (submissionItems: IPurchaseRequisitionRequestItem[]) => void;\n  setLoading?: (loading: boolean) => void;\n}\n\nconst PurchaseRequisitionSubmissionBrowser: React.FC<IPurchaseRequisitionSubmissionProps> = (props) => {\n  const [selectedIndex, setSelectedIndex] = useState<number>(-1);\n  const { purchaseRequisitionSubmissios } = props;\n  const PURCHASE_REQUISITION_SUBMISSION_BROWSER_HEIGHT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT + APP_CONTENT_MARGIN + PURCHASE_REQUISITION_SUBMISSION_TOP_TOOLS_HEIGHT + PURCHASE_REQUISITION_SUBMISSION_REMARKS_HEIGHT;\n  const windowSize: IWindowSize = useWindowResized();\n\n  return (\n    <>\n      <div className=\"scrollable-menu d-flex flex-column\" style={{ height: `${windowSize.height - PURCHASE_REQUISITION_SUBMISSION_BROWSER_HEIGHT_CONSTRAINT}px` }}>\n        {purchaseRequisitionSubmissios &&\n          purchaseRequisitionSubmissios.map((submission, index) => {\n            return (\n              <Button\n                key={`submission-date-${index}`}\n                type={selectedIndex === index ? 'primary' : 'default'}\n                shape=\"round\"\n                className=\"m-1 px-1\"\n                size=\"large\"\n                onClick={() => {\n                  props.setLoading && props.setLoading(true);\n                  setSelectedIndex(index);\n                  const deepCopy: IPurchaseRequisitionRequest = CLONING_LIB.deepClone(submission);\n                  props.setSelectedSubmissionRecord(deepCopy);\n                  props.setFilteredSubmissionsItems(deepCopy.purchaseRequisitionRequestItems);\n                  setTimeout(function () {\n                    props.setLoading && props.setLoading(false);\n                  }, 500);\n                }}\n              >\n                <span style={{ fontSize: '10px' }}>{convertToLocalString(submission.createdDate)}</span>\n              </Button>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseRequisitionSubmissionBrowser;\n","import { IPurchaseRequisitionRequestItem } from '@dto/i-purchase-requisition-request-item.dto';\n\nexport const genereateIndex = (purchaseRequisitionSubmissionItem: IPurchaseRequisitionRequestItem) => {\n  const searchIndex =\n    (purchaseRequisitionSubmissionItem.componentCode.trim() || '') +\n    (purchaseRequisitionSubmissionItem.componentName.trim() || '') +\n    (purchaseRequisitionSubmissionItem.vendorName.trim() || '') +\n    (purchaseRequisitionSubmissionItem.deliveryDate || '');\n  return searchIndex.replace(/\\s+/g, '').toLowerCase();\n};\n","import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button, Select, DatePicker, Divider } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport { ArrowRightOutlined, ReloadOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nimport { IPurchaseRequisitionRequest } from '@dto/i-purchase-requisition-request.dto';\nimport PurchaseRequisitionSubmissionTable from '../components/submission-table';\nimport PurchaseRequisitionSubmissionBrowser from '../components/submission-record-browser/submission-record-browser';\nimport { getSearchText, SearchEngine } from '@utils/search/native-search';\nimport { genereateIndex } from '../components/submission-indexer';\nimport { IPurchaseRequisitionRequestItem } from '@dto/i-purchase-requisition-request-item.dto';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { Sort } from '@constant/sort.enum';\nimport { getPurchaseRequisitionRequest } from '@api/purchase-requisition-request.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { setLoading } from '@module/shared/reducers/app-reducers';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { PURCHASE_REQUISITION_SUBMISSION_TOP_TOOLS_HEIGHT } from '@constant/display/purcahse-requisition-submission.constant';\n\ninterface IPurchaseRequisitionSubmissionProps extends StateProps, DispatchProps {}\n\nconst PurchaseRequisitionSubmissionPage: React.FC<IPurchaseRequisitionSubmissionProps> = (props: IPurchaseRequisitionSubmissionProps) => {\n  const [purchaseRequisitionSubmissios, setPurchaseRequisitionSubmissions] = useState<IPurchaseRequisitionRequest[]>();\n  const [filteredPurchaseRequisitionSubmissios, setFilteredPurchaseRequisitionSubmissions] = useState<IPurchaseRequisitionRequest[]>();\n  const [selectedSubmissionRequest, setSelectedSubmissionRequest] = useState<IPurchaseRequisitionRequest>();\n  const [filteredSubmissionItems, setFilteredSubmissionItems] = useState<IPurchaseRequisitionRequestItem[]>();\n  const searchEngine: SearchEngine<IPurchaseRequisitionRequestItem> = new SearchEngine([], genereateIndex);\n  const [startDateFilterCriteria, setStartDateFilterCriteria] = useState<Date>();\n  const [endDateFilterCriteria, setEndDateFilterCriteria] = useState<Date>();\n  const [sortCriteria, setSortCriteria] = useState<Sort>(Sort.DES);\n  const windowSize: IWindowSize = useWindowResized();\n  const PURCHASE_REQUISITION_SUBMISSION_TABLE_WRAPPER_HEIGHT_CONSTRAINT: number = APP_HEADER_HEIGHT + APP_CONTENT_MARGIN + PURCHASE_REQUISITION_SUBMISSION_TOP_TOOLS_HEIGHT;\n\n  useEffect(() => {\n    const getSubmissions = async () => {\n      const apiResponse = await getPurchaseRequisitionRequest(new Date('2021-12-17T03:24:00'), new Date(), Sort.DES);\n\n      if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n        setPurchaseRequisitionSubmissions(apiResponse.data);\n        setFilteredPurchaseRequisitionSubmissions(apiResponse.data);\n      }\n    };\n\n    getSubmissions();\n  }, []);\n\n  useEffect(() => {\n    console.group(PurchaseRequisitionSubmissionPage.name);\n    console.log('Filtering list after filters are set >>: ', {\n      startDateFilterCriteria,\n      endDateFilterCriteria,\n    });\n    filterSubmissionRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [startDateFilterCriteria, endDateFilterCriteria]);\n\n  useEffect(() => {\n    console.group(PurchaseRequisitionSubmissionPage.name);\n    console.log('Sorting list after sort is set >>: ', {\n      sortCriteria,\n    });\n    sortSubmissionRequestByDate(sortCriteria);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortCriteria]);\n\n  const search = (value: string, event: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLInputElement> | undefined) => {\n    if (selectedSubmissionRequest) {\n      props.setLoading(true);\n      console.group('Search [PurchaseRequisitionSubmissionPage]');\n      console.log('value >>: ', value);\n      console.log('event >>: ', event);\n      const sanitisedSearchText: string = getSearchText(value);\n      const filteredData = searchEngine.updateEngine(selectedSubmissionRequest.purchaseRequisitionRequestItems).search(sanitisedSearchText);\n      setFilteredSubmissionItems(filteredData);\n      console.groupEnd();\n      setTimeout(function () {\n        props.setLoading(false);\n      }, 500);\n    }\n  };\n\n  const filterByDateRange = (startDate?: string, endDate?: string) => {\n    const startDateValue = startDate === undefined ? startDate : new Date(new Date(startDate).setHours(0, 0, 0, 0));\n    setStartDateFilterCriteria(startDateValue);\n    const endDateValue = endDate === undefined ? endDate : new Date(new Date(endDate).setHours(23, 59, 59, 59));\n    setEndDateFilterCriteria(endDateValue);\n    filterSubmissionRequest();\n  };\n\n  const filterSubmissionRequest = () => {\n    props.setLoading(true);\n    const filteredResult: IPurchaseRequisitionRequest[] = [];\n    purchaseRequisitionSubmissios?.forEach((submission) => {\n      const submissionCreatedDate = new Date(submission.createdDate);\n      if (startDateFilterCriteria !== undefined && submissionCreatedDate < startDateFilterCriteria) {\n      } else if (endDateFilterCriteria !== undefined && submissionCreatedDate > endDateFilterCriteria) {\n      } else {\n        filteredResult.push(submission);\n      }\n    });\n    console.log('Filtered result >>:', filteredResult);\n    console.groupEnd();\n    setFilteredPurchaseRequisitionSubmissions(filteredResult);\n    setTimeout(function () {\n      props.setLoading(false);\n    }, 500);\n  };\n\n  const sortSubmissionRequestByDate = (sort: Sort) => {\n    props.setLoading(true);\n    const sortedResult = CLONING_LIB.deepClone(filteredPurchaseRequisitionSubmissios)?.sort((submission1, submission2) => {\n      if (sort === Sort.ASC) {\n        return submission1.createdDate < submission2.createdDate ? -1 : 1;\n      } else if (sort === Sort.DES) {\n        return submission1.createdDate > submission2.createdDate ? -1 : 1;\n      }\n      return 0;\n    });\n    console.log('Sorted result', sortedResult);\n    console.groupEnd();\n    setFilteredPurchaseRequisitionSubmissions(sortedResult);\n    setTimeout(function () {\n      props.setLoading(false);\n    }, 500);\n  };\n\n  const resetSortingAndFilter = () => {\n    setFilteredPurchaseRequisitionSubmissions(purchaseRequisitionSubmissios);\n    setStartDateFilterCriteria(undefined);\n    setEndDateFilterCriteria(undefined);\n    filterSubmissionRequest();\n\n    setSortCriteria(Sort.DES);\n    sortSubmissionRequestByDate(Sort.DES);\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <Title level={4}>Purchase Requisition Submission Record</Title>\n          </div>\n          <div className=\"col-4 d-flex flex-column align-items-end\">\n            <Button role=\"link\" href=\"/purchase-requisition-request\">\n              <span>Purchase Requisition</span>\n              <ArrowRightOutlined style={{ transform: 'translateY(-3px)' }} />\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col\">\n            <label className=\"mx-1\" style={{ fontSize: '13px' }}>\n              Advance Sorting / Filtering\n            </label>\n            <DatePicker.RangePicker\n              className=\"mx-1\"\n              format=\"DD/MM/YYYY\"\n              inputReadOnly\n              allowEmpty={[true, true]}\n              value={[startDateFilterCriteria === undefined ? null : moment(startDateFilterCriteria), endDateFilterCriteria === undefined ? null : moment(endDateFilterCriteria)]}\n              onChange={(dateValues) => filterByDateRange(dateValues != null ? dateValues[0]?.toString() : undefined, dateValues != null ? dateValues[1]?.toString() : undefined)}\n            />\n            <Select key=\"sort-submission-request-select\" className=\"mx-1\" value={sortCriteria} onChange={(value) => setSortCriteria(value)}>\n              <Select.Option value={Sort.DES}>Created Date Desc</Select.Option>\n              <Select.Option value={Sort.ASC}>Created Date Asc</Select.Option>\n            </Select>\n            <Button className=\"mx-1\" onClick={resetSortingAndFilter}>\n              <ReloadOutlined style={{ transform: 'translateY(-3px)' }} />\n              Reset\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col\">\n            <Divider />\n          </div>\n        </div>\n\n        <div className=\"row\" style={{ height: `${windowSize.height - PURCHASE_REQUISITION_SUBMISSION_TABLE_WRAPPER_HEIGHT_CONSTRAINT}px` }}>\n          <div className=\"col-3\">\n            <PurchaseRequisitionSubmissionBrowser\n              setSelectedSubmissionRecord={setSelectedSubmissionRequest}\n              purchaseRequisitionSubmissios={filteredPurchaseRequisitionSubmissios ?? []}\n              setFilteredSubmissionsItems={setFilteredSubmissionItems}\n              setLoading={props.setLoading}\n            />\n            <Input.TextArea className=\"my-2\" readOnly value={selectedSubmissionRequest?.remarks || ''} placeholder=\"Remarks\" />\n          </div>\n          <div className=\"col-9\">\n            <div className=\"d-flex justify-content-between\">\n              <span className=\"my-1\">\n                Submission Date: <b color=\"primary\">{selectedSubmissionRequest ? convertToLocalString(selectedSubmissionRequest.createdDate) : ''}</b>\n              </span>\n              <Input.Search style={{ width: '200px' }} allowClear placeholder=\"Search\" onSearch={search} />\n            </div>\n            <PurchaseRequisitionSubmissionTable currentSubmissionRecord={selectedSubmissionRequest} filteredItems={filteredSubmissionItems} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  setLoading,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseRequisitionSubmissionPage);\n","import { IPurchaseOrder } from '@dto/i-purchase-order.dto';\n\nexport const genereateIndex = (purchaseOrder: IPurchaseOrder) => {\n  const searchIndex = '' + (purchaseOrder.vendorId || '') + (purchaseOrder.poNumber.trim() || '');\n  return searchIndex.replace(/\\s+/g, '').toLowerCase();\n};\n","import { IPurchaseApprovalOrder } from '@dto/i-purchase-approval-order.dto';\nimport { IPurchaseOrder } from '@dto/i-purchase-order.dto';\nimport { useState } from 'react';\nimport { Button } from 'antd';\nimport { CheckCircleTwoTone } from '@ant-design/icons';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\n\ninterface IPurchaseOrderProps {\n  setSelectedPurchaseApprovalOrder: (submissionRecord: IPurchaseApprovalOrder) => void;\n  purchaseApprovalOrders: IPurchaseApprovalOrder[];\n  setFilteredPurchaseOrders: (purchaseOrders: IPurchaseOrder[]) => void;\n  setLoading?: (loading: boolean) => void;\n}\n\nconst PurchaseOrderBrowser: React.FC<IPurchaseOrderProps> = (props) => {\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const { purchaseApprovalOrders } = props;\n\n  return (\n    <>\n      <div className=\"text-center d-flex flex-column py-2\" style={{ overflowY: 'scroll', maxHeight: '80vh' }}>\n        {purchaseApprovalOrders &&\n          purchaseApprovalOrders.map((purchaseApprovalOrder, index) => {\n            return (\n              <Button\n                key={`purchase-order-date-${index}`}\n                type={selectedIndex === index ? 'primary' : 'default'}\n                shape=\"round\"\n                className=\"m-2 d-inline-flex align-items-center\"\n                size=\"large\"\n                onClick={() => {\n                  props.setLoading && props.setLoading(true);\n                  setSelectedIndex(index);\n                  const deepCopy: IPurchaseApprovalOrder = CLONING_LIB.deepClone(purchaseApprovalOrder);\n                  props.setSelectedPurchaseApprovalOrder(deepCopy);\n                  props.setFilteredPurchaseOrders(deepCopy.purchaseOrders);\n                  setTimeout(function () {\n                    props.setLoading && props.setLoading(false);\n                  }, 500);\n                }}\n              >\n                <span style={{ fontSize: '12px' }}>\n                  {convertToLocalString(purchaseApprovalOrder.createdDate)}\n                  <CheckCircleTwoTone hidden={!purchaseApprovalOrder.completed} twoToneColor=\"#52c41a\" style={{ fontSize: '1.3em', transform: 'translateY(-3px)' }} />\n                </span>\n              </Button>\n            );\n          })\n        }\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseOrderBrowser;\n","type BlobFileDownloadService = (blob: Blob, fileName: string, fileExtension: string) => void;\n\n/**\n * Util function to download blob as a file with proper name and extension\n * @param blob file content loaded into a blob\n * @param fileName how would the file be named after downloaded\n * @param fileExtension extension of file: pdf/jpg/etc...\n */\nexport const downloadBlobAsFileWithNameAndExtension: BlobFileDownloadService = (blob, fileName, fileExtension) => {\n\n    /**\n     * Create an invisible HTML link element\n     */\n    let link = document.createElement('a');\n    document.body.appendChild(link);\n    link.style.display = \"none\"\n\n    /**\n     * Set the download name of the link\n     */\n    link.download = `${fileName}.${fileExtension}`;\n\n    /**\n     * Create an intermediate href for the blob in memory and set it as href of the link\n     */\n    link.href = URL.createObjectURL(blob);\n\n    /**\n     * Programmatically trigger click event of the link\n     */\n    link.click();\n\n    /**\n     * Revoke the link to free up memory\n     */\n    URL.revokeObjectURL(link.href);\n};\n","import React from 'react';\nimport { Button, Space, Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { DownloadOutlined, MailOutlined } from '@ant-design/icons';\n\nimport { TABLE_PAGINATION_CONFIG } from '@constant/pagination-config';\nimport { IPurchaseOrder } from '@dto/i-purchase-order.dto';\nimport { IPurchaseApprovalOrder } from '@dto/i-purchase-approval-order.dto';\nimport { downloadPOFromAPI, emailPurchaseOrder } from '@api/purchase-order.api';\nimport { NotificationType } from '@constant/notification.enum';\nimport { popNotification } from '@module/shared/components/notification';\nimport { downloadBlobAsFileWithNameAndExtension } from '@utils/file-download/file-download';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\n\ninterface IPurchaseOrderTableProps {\n  readonly currentPurchaseApprovalOrderRecord?: IPurchaseApprovalOrder;\n  filteredItems?: IPurchaseOrder[];\n}\n\nconst PurchaseOrderTable: React.FC<IPurchaseOrderTableProps> = (props) => {\n  const PURCHASE_ORDER_TABLE_COLUMN: ColumnsType<IPurchaseOrder> = [\n    {\n      title: 'PO Number',\n      dataIndex: 'poNumber',\n      key: 'poNumber',\n      align: 'center',\n      width: '136px',\n      render: (text: string, record: IPurchaseOrder) => <span>{text}</span>,\n    },\n    {\n      title: 'Vendor',\n      dataIndex: 'vendorId',\n      key: 'vendor',\n      align: 'center',\n      width: '276px',\n      render: (text: string, record: IPurchaseOrder) => (\n        <span>\n          {text} {record.vendorName ? '- ' + record.vendorName : ''}\n        </span>\n      ),\n    },\n    {\n      title: 'Generate PDF',\n      dataIndex: 'id',\n      key: 'generatePdf',\n      align: 'center',\n      width: '181px',\n      render: (text: string, record: IPurchaseOrder) => (\n        <Button className=\"d-inline-flex align-items-center po-action-button\" onClick={() => downloadPO(record)}>\n          <DownloadOutlined />\n          &nbsp;Download\n        </Button>\n      ),\n    },\n    {\n      title: 'File Name',\n      dataIndex: 'id',\n      key: 'filename',\n      align: 'center',\n      width: '150px',\n      render: (text: string, record: IPurchaseOrder) => (\n        <span>\n          {record.poNumber} {record.vendorId}.pdf\n        </span>\n      ),\n    },\n    {\n      title: 'Email to Vendor',\n      dataIndex: 'id',\n      key: 'email',\n      align: 'center',\n      width: '166px',\n      render: (text: string, record: IPurchaseOrder) => (\n        <Button disabled={record.emailed} className=\"d-inline-flex align-items-center po-action-button\" onClick={() => emailPO(record)}>\n          <MailOutlined />\n          &nbsp;Email\n        </Button>\n      ),\n    },\n  ];\n\n  const downloadPO = async (purchaseOrder: IPurchaseOrder) => {\n    console.group(PurchaseOrderTable.name);\n    console.log('Download PO');\n    console.log('Purchase Order: ', purchaseOrder);\n    console.groupEnd();\n\n    /** Load from API */\n    const res = await downloadPOFromAPI(purchaseOrder.id);\n\n    if (res) {\n      if (res.status === ApiResponseStatus.SUCCESS) {\n        /** \n         * 1. Load data as blob \n         * 2. Name the file\n         * 3. provide file extension\n         * */\n        const blob: Blob = new Blob([res.data]);\n        const fileName: string = `Purchase Order - ${purchaseOrder.poNumber} - ${new Date(purchaseOrder.revisionDate).toDateString()}`;\n        const fileExtension: string = 'pdf';\n    \n        downloadBlobAsFileWithNameAndExtension(blob, fileName, fileExtension);\n      } else {\n        popNotification(res.statusText, NotificationType.error);  \n      }\n    } else {\n      popNotification(\"Server Download PO PDF API error\", NotificationType.error);  \n    }\n\n  };\n\n  const downloadAllPO = async () => {\n    console.group(PurchaseOrderTable.name);\n    console.log('Download All PO');\n    console.log('Purchase Approval Orders Id: ', currentPurchaseApprovalOrderRecord?.id);\n    console.log('Purchase Orders List: ', currentPurchaseApprovalOrderRecord?.purchaseOrders);\n    if (currentPurchaseApprovalOrderRecord && currentPurchaseApprovalOrderRecord.purchaseOrders) {\n      const downloadRequests: Promise<void>[] = currentPurchaseApprovalOrderRecord.purchaseOrders.map(purchaseOrder => downloadPO(purchaseOrder))\n      try {\n        await Promise.all(downloadRequests);\n      } catch (e: any) {\n        popNotification(e, NotificationType.error);\n      }\n    }\n    console.groupEnd();\n  };\n\n  const emailPO = (purchaseOrder: IPurchaseOrder) => {\n    console.group(PurchaseOrderTable.name);\n    console.log('Email PO');\n    console.log('Purchase Order: ', purchaseOrder);\n    console.groupEnd();\n    emailPurchaseOrder(purchaseOrder.id)\n      .then((res) => {\n        if (res.status === 200) {\n          popNotification('Success Email PO to vendor', NotificationType.success);\n        }\n      })\n      .catch((error) => {\n        const errResponse = error.response;\n        const errorMessage = errResponse.data ? errResponse.data : 'Request Failed';\n        popNotification(errorMessage, NotificationType.error);\n      });\n  };\n\n  const emailAllPO = () => {\n    console.group(PurchaseOrderTable.name);\n    console.log('Email All PO');\n    console.log('Purchase Approval Orders Id: ', currentPurchaseApprovalOrderRecord?.id);\n    console.log('Purchase Orders List: ', currentPurchaseApprovalOrderRecord?.purchaseOrders);\n    if (currentPurchaseApprovalOrderRecord && currentPurchaseApprovalOrderRecord.purchaseOrders) {\n      currentPurchaseApprovalOrderRecord.purchaseOrders.forEach(purchaseOrder => {\n        emailPO(purchaseOrder);\n      })\n    }\n    console.groupEnd();\n  };\n\n  const downloadAndEmailAll = () => {\n    console.group(PurchaseOrderTable.name);\n    console.log('Download & Email PO');\n    console.log('Purchase Approval Orders Id: ', currentPurchaseApprovalOrderRecord?.id);\n    console.log('Purchase Orders List: ', currentPurchaseApprovalOrderRecord?.purchaseOrders);\n    console.groupEnd();\n    downloadAllPO();\n    emailAllPO();\n  };\n\n  const { currentPurchaseApprovalOrderRecord, filteredItems } = props;\n\n  const submissionItems = filteredItems === undefined ? currentPurchaseApprovalOrderRecord?.purchaseOrders ?? [] : filteredItems;\n  return (\n    <>\n      <Table\n        className=\"my-4\"\n        dataSource={submissionItems}\n        columns={PURCHASE_ORDER_TABLE_COLUMN}\n        rowKey=\"id\"\n        scroll={{ y: 'calc(100vh - 400px)' }}\n        pagination={TABLE_PAGINATION_CONFIG}\n        summary={() => (\n          <Table.Summary fixed>\n            <Table.Summary.Row>\n              <Table.Summary.Cell index={0}></Table.Summary.Cell>\n              <Table.Summary.Cell index={1}></Table.Summary.Cell>\n              <Table.Summary.Cell index={2} align=\"center\">\n                <Button className=\"d-inline-flex align-items-center po-action-button\" onClick={() => downloadAllPO()}>\n                  <DownloadOutlined />\n                  &nbsp;Download All\n                </Button>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell index={3}></Table.Summary.Cell>\n              <Table.Summary.Cell index={4} align=\"center\">\n                <Button disabled={currentPurchaseApprovalOrderRecord?.completed} className=\"d-inline-flex align-items-center po-action-button\" onClick={() => emailAllPO()}>\n                  <MailOutlined />\n                  &nbsp;Email All\n                </Button>\n              </Table.Summary.Cell>\n            </Table.Summary.Row>\n          </Table.Summary>\n        )}\n      ></Table>\n      <Space className=\"float-end\">\n        <Button type=\"primary\" className=\"d-inline-flex align-items-center\" onClick={() => downloadAndEmailAll()}>\n          One Click to Download &#38; Email all PO\n        </Button>\n      </Space>\n    </>\n  );\n};\n\nexport default PurchaseOrderTable;\n","import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button, Select, DatePicker } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nimport { getSearchText, SearchEngine } from '@utils/search/native-search';\nimport { IPurchaseApprovalOrder } from '@dto/i-purchase-approval-order.dto';\nimport { IPurchaseOrder } from '@dto/i-purchase-order.dto';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { Sort } from '@constant/sort.enum';\nimport { getPurchaseOrders } from '@api/purchase-order.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { genereateIndex } from '../components/purchase-order-indexer';\nimport PurchaseOrderBrowser from '../components/purchase-order-record-browser';\nimport PurchaseOrderTable from '../components/purchase-order-table';\nimport { popNotification } from '@module/shared/components/notification';\nimport { NotificationType } from '@constant/notification.enum';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { setLoading } from '@module/shared/reducers/app-reducers';\n\ninterface IPurchaseOrderProps extends StateProps, DispatchProps {}\n\nconst PurchaseOrderPage: React.FC<IPurchaseOrderProps> = (props: IPurchaseOrderProps) => {\n  const [purchaseApprovalOrders, setPurchaseApprovalOrders] = useState<IPurchaseApprovalOrder[]>();\n  const [filteredPurchaseApprovalOrders, setFilteredPurchaseApprovalOrders] = useState<IPurchaseApprovalOrder[]>();\n  const [selectedPurchaseApprovalOrder, setSelectedPurchaseApprovalOrder] = useState<IPurchaseApprovalOrder>();\n\n  const [filteredPurchaseOrders, setFilteredPurchaseOrders] = useState<IPurchaseOrder[]>();\n\n  const [searchText, setSearchText] = useState<string>('');\n  const searchEngine: SearchEngine<IPurchaseOrder> = new SearchEngine([], genereateIndex);\n\n  const [startDateFilterCriteria, setStartDateFilterCriteria] = useState<Date>();\n  const [endDateFilterCriteria, setEndDateFilterCriteria] = useState<Date>();\n  const [sortCriteria, setSortCriteria] = useState<Sort>(Sort.DES);\n\n  useEffect(() => {\n    const getPurchaseApprovalOrderList = async () => {\n      const apiResponse = await getPurchaseOrders(new Date(), new Date(), Sort.DES);\n\n      if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n        const deepCopy: IPurchaseApprovalOrder[] = CLONING_LIB.deepClone(getPurchaseApprovalOrdersProgress(apiResponse.data));\n        setPurchaseApprovalOrders(deepCopy);\n        setFilteredPurchaseApprovalOrders(deepCopy);\n      }\n    };\n\n    getPurchaseApprovalOrderList();\n  }, []);\n\n  useEffect(() => {\n    console.group(PurchaseOrderPage.name);\n    console.log('Filtering list after filters are set >>: ', {\n      startDateFilterCriteria,\n      endDateFilterCriteria,\n    });\n    filterPurchaseApprovalOrders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [startDateFilterCriteria, endDateFilterCriteria]);\n\n  useEffect(() => {\n    console.group(PurchaseOrderPage.name);\n    console.log('Sorting list after sort is set >>: ', {\n      sortCriteria,\n    });\n    sortPurchaseApprovalOrderByDate(sortCriteria);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortCriteria]);\n\n  const getPurchaseApprovalOrdersProgress = (purchaseApprovalOrders: IPurchaseApprovalOrder[]) => {\n    const purchaseApprovalOrderProgress = purchaseApprovalOrders.map((purchaseApprovalOrder) => {\n      purchaseApprovalOrder.completed = purchaseApprovalOrder.purchaseOrders.every((purchaseOrder) => purchaseOrder.emailed && purchaseOrder.downloaded);;\n      return purchaseApprovalOrder;\n    });\n    return purchaseApprovalOrderProgress;\n  };\n\n  const search = () => {\n    if (selectedPurchaseApprovalOrder) {\n      props.setLoading(true);\n      const sanitisedSearchText: string = getSearchText(searchText);\n      const filteredData = searchEngine.updateEngine(selectedPurchaseApprovalOrder.purchaseOrders ?? []).search(sanitisedSearchText);\n      setFilteredPurchaseOrders(filteredData);\n      setTimeout(function () {\n        props.setLoading(false);\n      }, 500);\n    }\n  };\n\n  const filterByDateRange = (startDate?: string, endDate?: string) => {\n    const startDateValue = startDate === undefined ? startDate : new Date(new Date(startDate).setHours(0, 0, 0, 0));\n    setStartDateFilterCriteria(startDateValue);\n    const endDateValue = endDate === undefined ? endDate : new Date(new Date(endDate).setHours(23, 59, 59, 59));\n    setEndDateFilterCriteria(endDateValue);\n    filterPurchaseApprovalOrders();\n  };\n\n  const filterPurchaseApprovalOrders = () => {\n    const filteredResult: IPurchaseApprovalOrder[] = [];\n    props.setLoading(true);\n    purchaseApprovalOrders?.forEach((purchaseApprovalOrder) => {\n      const purchaseApprovalOrderCreatedDate = new Date(purchaseApprovalOrder.createdDate);\n      if (startDateFilterCriteria !== undefined && purchaseApprovalOrderCreatedDate < startDateFilterCriteria) {\n      } else if (endDateFilterCriteria !== undefined && purchaseApprovalOrderCreatedDate > endDateFilterCriteria) {\n      } else {\n        filteredResult.push(purchaseApprovalOrder);\n      }\n    });\n    console.log('Filtered result >>:', filteredResult);\n    console.groupEnd();\n    setFilteredPurchaseApprovalOrders(filteredResult);\n    setTimeout(function () {\n      props.setLoading(false);\n    }, 500);\n  };\n\n  const sortPurchaseApprovalOrderByDate = (sort: Sort) => {\n    props.setLoading(true);\n    setSortCriteria(sort);\n    filteredPurchaseApprovalOrders?.sort((purchaseApprovalOrder1, purchaseApprovalOrder2) => {\n      if (sort === Sort.ASC) {\n        return purchaseApprovalOrder1.createdDate < purchaseApprovalOrder2.createdDate ? -1 : 1;\n      } else if (sort === Sort.DES) {\n        return purchaseApprovalOrder1.createdDate > purchaseApprovalOrder2.createdDate ? -1 : 1;\n      }\n      return 0;\n    });\n    setTimeout(function () {\n      props.setLoading(false);\n    }, 500);\n  };\n\n  const resetSortingAndFilter = () => {\n    setFilteredPurchaseApprovalOrders(purchaseApprovalOrders);\n\n    setStartDateFilterCriteria(undefined);\n    setEndDateFilterCriteria(undefined);\n    setSortCriteria(Sort.DES);\n    sortPurchaseApprovalOrderByDate(Sort.DES);\n\n    filterPurchaseApprovalOrders();\n    popNotification('Success Reset Sorting & Filtering', NotificationType.success);\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid h-100\">\n        <div>\n          <div className=\"mb-2 w-100\">\n            <Title className=\"d-inline-block\" level={4}>\n              Purchase Order Download &#38; Email to Vendors\n            </Title>\n          </div>\n          <div className=\"d-inline-flex flex-row align-items-center\" style={{ gap: '15px', width: 'max-content' }}>\n            <label>Advance Sorting / Filtering</label>\n            <DatePicker.RangePicker\n              inputReadOnly\n              format=\"DD/MM/YYYY\"\n              allowEmpty={[true, true]}\n              value={[startDateFilterCriteria === undefined ? null : moment(startDateFilterCriteria), endDateFilterCriteria === undefined ? null : moment(endDateFilterCriteria)]}\n              onChange={(dateValues) => filterByDateRange(dateValues != null ? dateValues[0]?.toString() : undefined, dateValues != null ? dateValues[1]?.toString() : undefined)}\n            />\n            <Select key=\"sort-submission-request-select\" value={sortCriteria} onChange={(value) => sortPurchaseApprovalOrderByDate(value)}>\n              <Select.Option value={Sort.DES}>Created Date Desc</Select.Option>\n              <Select.Option value={Sort.ASC}>Created Date Asc</Select.Option>\n            </Select>\n            <Button className=\"d-inline-flex align-items-center\" onClick={resetSortingAndFilter}>\n              <ReloadOutlined />\n              Reset\n            </Button>\n          </div>\n          {/* Exploring on PDF Download [WIP] */}\n          {/* <PDFDownloadLink document={<PurchaseOrderTemplate \n            purchaseOrderDate=\"11/10/2021\" \n            purchaseOrderNumber=\"PO-27392\" \n            purchaseOrderVendorAddressLine1=\"No 123\" \n            purchaseOrderVendorAddressLine2=\"Taman A\" \n            purchaseOrderVendorName=\"Vendor ABC\"\n            purchaseOrderItems={[{\n              id: 2,\n              componentCode: 2,\n              componentName: \"Component BBB\",\n              packagingSize: 90,\n              noOfPacks: 10,\n              quantity: 900,\n              deliveryDate: new Date(),\n              purchaseOrderId: 2,\n              itemCost: 2.5,\n            }]} />}\n            style={{ height: \"100vh\", width: \"100%\" }}>\n            {({ blob, url, loading, error }) =>\n              loading ? 'Loading document...' : 'Download now!'\n            }\n          </PDFDownloadLink> */}\n          <div className=\"mx-2 d-inline-flex border-top mt-4 w-100\">\n            <div className=\"my-3 mb-2\" style={{ alignContent: 'start', width: \"max-content\" }}>\n              <PurchaseOrderBrowser\n                setSelectedPurchaseApprovalOrder={setSelectedPurchaseApprovalOrder}\n                purchaseApprovalOrders={filteredPurchaseApprovalOrders ?? []}\n                setFilteredPurchaseOrders={setFilteredPurchaseOrders}\n                setLoading={props.setLoading}\n              />\n            </div>\n            <div className=\"my-2 mx-4 position-relative\" style={{ width: \"78%\" }}>\n              <span>\n                Submission Date: <b color=\"primary\">{selectedPurchaseApprovalOrder ? convertToLocalString(selectedPurchaseApprovalOrder.createdDate) : ''}</b>\n              </span>\n              <div className=\"d-flex flex-column justify-content-center\">\n                <Input.Search\n                  allowClear\n                  placeholder=\"Search\"\n                  bordered={false}\n                  value={searchText}\n                  onChange={(e: any) => setSearchText(e.target.value)}\n                  onSearch={search}\n                  style={{\n                    width: '40%',\n                    borderBottom: '1px solid #d9d9d9',\n                    position: 'absolute',\n                    right: '5px',\n                  }}\n                />\n              </div>\n              <PurchaseOrderTable currentPurchaseApprovalOrderRecord={selectedPurchaseApprovalOrder} filteredItems={filteredPurchaseOrders} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  setLoading,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseOrderPage);\n","export function generateErrorMessage(message: number): string {\n  if (message >= 400 && message < 500) {\n    return `Client Error, please check client request compliance with backend server specifications! ⚠️ Status Code: ${message}`;\n  } else if (message >= 500) {\n    return `Server Error, please check server request handling controller! ⚠️ Status Code: ${message}`;\n  } else {\n    return `Unknown Error, please contact IT! ⚠️ Status Code: ${message}`;\n  }\n}\n","import { DownOutlined, SettingOutlined, UndoOutlined, UpOutlined } from '@ant-design/icons';\nimport { NotificationType } from '@constant/notification.enum';\nimport { ITableColumnDisplaySettings } from '@dto/i-table-columns';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { Button, Checkbox, Drawer, List, Table, TableProps } from 'antd';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\nimport { ColumnProps } from 'antd/lib/table';\nimport { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react';\nimport { popNotification } from '../notification';\n\ninterface IDynamicColumnTableProps<RecordType> extends TableProps<RecordType> {\n  tableKey: string /** Please ensure this is unique */;\n  visible?: boolean;\n  setVisible?: Dispatch<SetStateAction<boolean>>;\n  settingClassName?: string;\n  drawerWidth?: number;\n}\ninterface IDynamicColumn extends ColumnProps<any> {\n  columnKey: string;\n  settingDisplayName?: string;\n  visible?: boolean;\n  visibilityEditable?: boolean;\n}\nexport const DynamicColumn: React.FC<IDynamicColumn> = (props) => {\n  return <Table.Column {...props} />;\n};\n\nconst DynamicColumnTable: React.FC<IDynamicColumnTableProps<any>> = (props) => {\n  const { setVisible, visible } = props;\n  const displaySettingKey = `${props.tableKey}ColumnsDisplaySettings`;\n  const childNode = props.children as typeof Table.Column[];\n  const defaultTableColumnDisplaySettings: ITableColumnDisplaySettings[] = childNode.map((column) => {\n    const mapped = {\n      ...(column as unknown as ReactElement).props,\n    } as IDynamicColumn;\n    if (typeof mapped.settingDisplayName === 'undefined') {\n      mapped.settingDisplayName = mapped.title as string;\n    }\n    if (typeof mapped.visible === 'undefined') {\n      mapped.visible = true;\n    }\n    if (typeof mapped.visibilityEditable === 'undefined') {\n      mapped.visibilityEditable = true;\n    }\n    return mapped as unknown as ITableColumnDisplaySettings;\n  });\n\n  const [drawerVisible, setDrawerVisible] = useState<boolean>(false);\n  const [tableColumnDisplaySettings, setTableColumnDisplaySettings] = useState<ITableColumnDisplaySettings[]>();\n\n  const resetTableDisplaySettings = () => {\n    (async () => {\n      await localStorage.removeItem(displaySettingKey);\n      await localStorage.setItem(displaySettingKey, JSON.stringify(defaultTableColumnDisplaySettings));\n      setTableColumnDisplaySettings(defaultTableColumnDisplaySettings);\n    })();\n  };\n\n  /**\n   * Load setting from local storage\n   * - use default if undefined\n   * - use stored if found\n   */\n  useEffect(() => {\n    (async () => {\n      const stored = await localStorage.getItem(displaySettingKey);\n      if (stored) {\n        setTableColumnDisplaySettings(JSON.parse(stored));\n      } else {\n        setTableColumnDisplaySettings(defaultTableColumnDisplaySettings);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (tableColumnDisplaySettings) {\n      localStorage.setItem(displaySettingKey, JSON.stringify(tableColumnDisplaySettings));\n    }\n  }, [displaySettingKey, tableColumnDisplaySettings]);\n\n  const updateVisibility = (e: CheckboxChangeEvent, item: ITableColumnDisplaySettings) => {\n    if (tableColumnDisplaySettings) {\n      const updatedTableColumnDisplaySettings = CLONING_LIB.deepClone(tableColumnDisplaySettings).map((setting) => {\n        if (setting.columnKey === item.columnKey) {\n          setting.visible = e.target.checked;\n        }\n        return setting;\n      });\n      setTableColumnDisplaySettings(updatedTableColumnDisplaySettings);\n    }\n  };\n\n  const moveColumn = (item: ITableColumnDisplaySettings, moveIndex: number) => {\n    if (tableColumnDisplaySettings) {\n      /**\n       * - Find index of item\n       * - Check validity of moving range\n       * - Move\n       */\n      const currentIndex = tableColumnDisplaySettings.findIndex((setting) => setting.columnKey === item.columnKey);\n      const indexInBound = currentIndex + moveIndex >= 0 && currentIndex + moveIndex <= tableColumnDisplaySettings.length - 1;\n\n      if (indexInBound) {\n        let updatedTableColumnDisplaySettings = CLONING_LIB.deepClone(tableColumnDisplaySettings);\n\n        /**\n         * - Backup destination item\n         * - Replace destination item with current item\n         * - Replace current item with backed destination item\n         */\n        const destinationItem = updatedTableColumnDisplaySettings[currentIndex + moveIndex];\n        updatedTableColumnDisplaySettings[currentIndex + moveIndex] = item;\n        updatedTableColumnDisplaySettings[currentIndex] = destinationItem;\n        setTableColumnDisplaySettings([...updatedTableColumnDisplaySettings]);\n      } else {\n        popNotification('Cannot move outside of sequence range', NotificationType.warning);\n      }\n    }\n  };\n\n  const closeDrawer = () => {\n    if (setVisible) {\n      setVisible(false);\n    }\n    setDrawerVisible(false);\n  };\n\n  const openDrawer = () => {\n    if (setVisible) {\n      setVisible(true);\n    }\n    setDrawerVisible(true);\n  };\n\n  return (\n    <>\n      {/** Optionally show setting button if no external props (visible & setVisible) provided */}\n      {typeof visible === 'undefined' && (\n        <div className={props.settingClassName || 'col d-flex flex-column align-items-end'}>\n          <Button onClick={openDrawer} style={{ width: '50px' }} icon={<SettingOutlined />}></Button>\n        </div>\n      )}\n\n      <Table dataSource={props.dataSource} rowKey={(ds) => ds.id} {...props}>\n        {tableColumnDisplaySettings &&\n          tableColumnDisplaySettings\n            .filter((setting) => setting.visible)\n            .map((setting) => {\n              const node = childNode.find((node) => (node as any).props.columnKey === setting.columnKey);\n              return node;\n            })}\n      </Table>\n\n      <Drawer placement=\"right\" visible={visible ?? drawerVisible} title=\"Table Column Settings\" onClose={closeDrawer} width={props.drawerWidth}>\n        <div className=\"d-flex flex-column justify-content-between h-100\">\n          <List\n            dataSource={tableColumnDisplaySettings}\n            itemLayout=\"vertical\"\n            style={{ width: (props.drawerWidth ?? 200) - 24 }}\n            renderItem={(item, index) => {\n              return (\n                <List.Item key={item.columnKey}>\n                  <div className=\"d-flex justify-content-between\">\n                    <Checkbox className=\"align-self-center\" checked={item.visible} onChange={(e) => updateVisibility(e, item)} disabled={!item.visibilityEditable} />\n                    <span className=\"align-self-center\">{item.settingDisplayName}</span>\n                    <div className=\"d-flex flex-column align-self-center mx-3\">\n                      <UpOutlined onClick={() => moveColumn(item, -1)} />\n                      <DownOutlined onClick={() => moveColumn(item, 1)} />\n                    </div>\n                  </div>\n                </List.Item>\n              );\n            }}\n          />\n          <Button onClick={resetTableDisplaySettings} icon={<UndoOutlined style={{ transform: 'translateY(-3px)' }} />}>\n            Reset\n          </Button>\n        </div>\n      </Drawer>\n    </>\n  );\n};\nexport default DynamicColumnTable;\n","import { IPurchaseOrderItem } from '@dto/i-purchase-order-item.dto';\nimport DynamicColumnTable, { DynamicColumn } from '@module/shared/components/dynamic-column-table/dynamic-column-table';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { Dispatch, SetStateAction } from 'react';\n\ninterface IOutstandingPurchaseOrderTableProps {\n  outstandingPurchaseOrderSearchResult?: IPurchaseOrderItem[];\n  outstandingPurchaseOrderTableColumnSettingVisible: boolean;\n  setOutstandingPurchaseOrderTableColumnSettingVisible: Dispatch<SetStateAction<boolean>>;\n}\n\nconst OutstandingPurchaseOrderTable: React.FC<IOutstandingPurchaseOrderTableProps> = (props) => {\n  return (\n    <DynamicColumnTable\n      drawerWidth={400}\n      tableKey=\"OutstandingPurchaseorder\"\n      dataSource={props.outstandingPurchaseOrderSearchResult}\n      visible={props.outstandingPurchaseOrderTableColumnSettingVisible}\n      setVisible={props.setOutstandingPurchaseOrderTableColumnSettingVisible}\n    >\n      <DynamicColumn\n        title=\"Vendor\"\n        key=\"vendorName\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.vendorName}</div>;\n        }}\n        columnKey=\"vendorName\"\n      />\n      <DynamicColumn\n        title=\"PO Number\"\n        key=\"poNumber\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.poNumber}</div>;\n        }}\n        columnKey=\"poNumber\"\n      />\n      <DynamicColumn\n        title=\"Component ID\"\n        key=\"componentCode\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.componentCode}</div>;\n        }}\n        columnKey=\"componentCode\"\n      />\n      <DynamicColumn\n        title=\"Component Name\"\n        key=\"componentName\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.componentName}</div>;\n        }}\n        columnKey=\"componentName\"\n      />\n      <DynamicColumn\n        title=\"Order Qty (kgs)\"\n        key=\"orderQuantity\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.orderQuantity}</div>;\n        }}\n        columnKey=\"orderQuantity\"\n      />\n      <DynamicColumn\n        title=\"Order Qty (packs)\"\n        key=\"orderQuantityPack\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.orderQuantityPack}</div>;\n        }}\n        columnKey=\"orderQuantityPack\"\n      />\n      <DynamicColumn\n        title=\"Received Qty (kgs)\"\n        key=\"receivedQuantity\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.receivedQuantity}</div>;\n        }}\n        columnKey=\"receivedQuantity\"\n      />\n      <DynamicColumn\n        title=\"Received Qty (packs)\"\n        key=\"receivedQuantityPack\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.receivedQuantityPack}</div>;\n        }}\n        columnKey=\"receivedQuantityPac\"\n      />\n      <DynamicColumn\n        title=\"Open Qty (kgs)\"\n        key=\"openQuantity\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.openQuantity}</div>;\n        }}\n        columnKey=\"openQuantity\"\n      />\n      <DynamicColumn\n        title=\"Open Qty (packs)\"\n        key=\"openQuantityPack\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.openQuantityPack}</div>;\n        }}\n        columnKey=\"openQuantityPack\"\n      />\n      <DynamicColumn\n        title=\"Delivery Date\"\n        key=\"deliveryDate\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{convertToLocalString(record.deliveryDate)}</div>;\n        }}\n        columnKey=\"deliveryDate\"\n      />\n      <DynamicColumn\n        title=\"Remarks\"\n        key=\"remarks\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.remarks}</div>;\n        }}\n        columnKey=\"remarks\"\n      />\n    </DynamicColumnTable>\n  );\n};\nexport default OutstandingPurchaseOrderTable;\n","import { SettingOutlined } from '@ant-design/icons';\nimport { getOutstandingPurchaseOrder } from '@api/purchase-order.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { NotificationType } from '@constant/notification.enum';\nimport { IPurchaseOrderItem } from '@dto/i-purchase-order-item.dto';\nimport { popNotification } from '@module/shared/components/notification';\nimport { generateErrorMessage } from '@utils/api/api-error-handler';\nimport { Button, Input } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport { AxiosResponse } from 'axios';\nimport { useEffect, useState } from 'react';\nimport { getSearchText, SearchEngine } from '@utils/search/native-search';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport OutstandingPurchaseOrderTable from '../components/outstanding-purchase-order-table';\n\ninterface IOutstandingPurchaseOrderPageProps {}\n\nconst purchaseOrderItemSearchIndexer = (items: IPurchaseOrderItem) => {\n  const str = JSON.stringify(items);\n  return getSearchText(str).toLowerCase();\n};\n\nconst OutstandingPurchaseOrderPage: React.FC<IOutstandingPurchaseOrderPageProps> = (props) => {\n  const searchEngine = new SearchEngine<IPurchaseOrderItem>([], purchaseOrderItemSearchIndexer);\n  const [searchText, setSearchText] = useState<string>('');\n  const [outstandingPurchaseOrder, setOutstandingPurchaseOrder] = useState<IPurchaseOrderItem[]>();\n  const [outstandingPurchaseOrderSearchResult, setOutstandingPurchaseOrderSearchResult] = useState<IPurchaseOrderItem[]>([]);\n  const [outstandingPurchaseOrderTableColumnSettingVisible, setOutstandingPurchaseOrderTableColumnSettingVisible] = useState<boolean>(false);\n\n  /**\n   * Initialise table data\n   */\n  useEffect(() => {\n    (async () => {\n      try {\n        const outstandingPurchaseOrderResponse: AxiosResponse<IPurchaseOrderItem[]> = await getOutstandingPurchaseOrder();\n        if (outstandingPurchaseOrderResponse) {\n          if (outstandingPurchaseOrderResponse.status === ApiResponseStatus.SUCCESS) {\n            setOutstandingPurchaseOrder(outstandingPurchaseOrderResponse.data);\n          } else {\n            const errorMessage: string = generateErrorMessage(outstandingPurchaseOrderResponse.status);\n            popNotification(errorMessage, NotificationType.error);\n          }\n        } else {\n          popNotification('No response from server!! Please check is server live and running 📡📡📡', NotificationType.error);\n        }\n      } catch (error) {\n        popNotification('No response from server!! Please check is server live and running 📡📡📡', NotificationType.error);\n      }\n    })();\n  }, []);\n\n  /**\n   * Trigger local search whenever api refetch happens\n   */\n  useEffect(() => {\n    if (outstandingPurchaseOrder) {\n      const searchResult = searchEngine.updateEngine(outstandingPurchaseOrder).search(searchText);\n      setOutstandingPurchaseOrderSearchResult(CLONING_LIB.deepClone(searchResult));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [outstandingPurchaseOrder, searchText]);\n\n  const onSearch = (value: string) => {\n    setSearchText(getSearchText(value));\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Title level={4}>Outstanding Purchase Order</Title>\n          </div>\n          <div className=\"col d-flex flex-column align-items-end\">\n            <div className=\"d-flex\">\n              <Input.Search placeholder=\"Search\" onSearch={onSearch} allowClear></Input.Search>\n              <Button\n                onClick={() => {\n                  setOutstandingPurchaseOrderTableColumnSettingVisible(!outstandingPurchaseOrderTableColumnSettingVisible);\n                }}\n                style={{ width: '50px' }}\n                icon={<SettingOutlined />}\n              ></Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <OutstandingPurchaseOrderTable\n              outstandingPurchaseOrderSearchResult={outstandingPurchaseOrderSearchResult}\n              outstandingPurchaseOrderTableColumnSettingVisible={outstandingPurchaseOrderTableColumnSettingVisible}\n              setOutstandingPurchaseOrderTableColumnSettingVisible={setOutstandingPurchaseOrderTableColumnSettingVisible}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OutstandingPurchaseOrderPage;\n","import { FAVOURITE_VENDOR } from '@constant/api-endpoints';\nimport { IFavouriteVendor } from '@dto/i-favourite-vendor.dto';\nimport axios from 'axios';\n\nexport async function getFavouriteVendor() {\n  return await axios.get<IFavouriteVendor[]>(FAVOURITE_VENDOR);\n}\n\nexport async function createFavouriteVendor(vendorId: string) {\n  const data = {\n    id: null,\n    vendorId: vendorId,\n    createdDate: null,\n    createdBy: null,\n  };\n  return await axios.post<IFavouriteVendor>(FAVOURITE_VENDOR, data);\n}\n","import { getFavouriteVendor } from '@api/favourite-vendor.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { NotificationType } from '@constant/notification.enum';\nimport { IFavouriteVendor } from '@dto/i-favourite-vendor.dto';\nimport { popNotification } from '@module/shared/components/notification';\nimport { generateErrorMessage } from '@utils/api/api-error-handler';\nimport { Button, Drawer } from 'antd';\nimport { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\ninterface IFavouriteVendorDrawerProps {\n  visible: boolean;\n  setVisible: Dispatch<SetStateAction<boolean>>;\n  setSelectedFavouriteVendorID: Dispatch<SetStateAction<string | undefined>>;\n}\nconst FavouriteVendorDrawer: React.FC<IFavouriteVendorDrawerProps> = (props) => {\n  const { visible, setVisible, setSelectedFavouriteVendorID } = props;\n  const closeDrawer = () => {\n    setVisible(false);\n  };\n  const onSelectVendor = (favouriteVendor: IFavouriteVendor) => {\n    setSelectedFavouriteVendorID(favouriteVendor.vendorId);\n    setVisible(false); /** Auto close drawer */\n  };\n\n  const [favouriteVendorList, setFavouriteVendorList] = useState<IFavouriteVendor[]>([]);\n\n  useEffect(() => {\n    /**\n     * Only refetch when drawer opens\n     */\n    if (visible) {\n      (async () => {\n        try {\n          const getFavouriteVendorRes = await getFavouriteVendor();\n          if (getFavouriteVendorRes.status === ApiResponseStatus.SUCCESS) {\n            setFavouriteVendorList(getFavouriteVendorRes.data);\n          } else {\n            popNotification(generateErrorMessage(getFavouriteVendorRes.status), NotificationType.error);\n          }\n        } catch (error) {\n          popNotification(`${error}`, NotificationType.error);\n        }\n      })();\n    }\n  }, [visible]);\n\n  return (\n    <>\n      <Drawer placement=\"right\" visible={visible} title=\"Favourite Vendor\" onClose={closeDrawer} width={400}>\n        {favouriteVendorList.map((favouriteVendor) => {\n          return (\n            <Button key={favouriteVendor.id} className=\"w-100 m-1\" onClick={() => onSelectVendor(favouriteVendor)}>\n              {favouriteVendor.vendorId}\n            </Button>\n          );\n        })}\n      </Drawer>\n    </>\n  );\n};\nexport default FavouriteVendorDrawer;\n","import { IPurchaseOrderItem } from '@dto/i-purchase-order-item.dto';\nimport DynamicColumnTable, { DynamicColumn } from '@module/shared/components/dynamic-column-table/dynamic-column-table';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { Dispatch, SetStateAction } from 'react';\n\ninterface IOutstandingPurchaseOrderByVendorTable {\n  outstandingPurchaseOrderSearchResult?: IPurchaseOrderItem[];\n  outstandingPurchaseOrderTableColumnSettingVisible: boolean;\n  setOutstandingPurchaseOrderTableColumnSettingVisible: Dispatch<SetStateAction<boolean>>;\n}\n\nconst OutstandingPurchaseOrderByVendorTable: React.FC<IOutstandingPurchaseOrderByVendorTable> = (props) => {\n  return (\n    <DynamicColumnTable\n      drawerWidth={400}\n      tableKey=\"OutstandingPurchaseOrderByVendor\"\n      dataSource={props.outstandingPurchaseOrderSearchResult}\n      visible={props.outstandingPurchaseOrderTableColumnSettingVisible}\n      setVisible={props.setOutstandingPurchaseOrderTableColumnSettingVisible}\n    >\n      <DynamicColumn\n        title=\"Vendor\"\n        key=\"vendorName\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.vendorName}</div>;\n        }}\n        columnKey=\"vendorName\"\n      />\n      <DynamicColumn\n        title=\"PO Number\"\n        key=\"poNumber\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.poNumber}</div>;\n        }}\n        columnKey=\"poNumber\"\n      />\n      <DynamicColumn\n        title=\"Component ID\"\n        key=\"componentCode\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.componentCode}</div>;\n        }}\n        columnKey=\"componentCode\"\n      />\n      <DynamicColumn\n        title=\"Component Name\"\n        key=\"componentName\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.componentName}</div>;\n        }}\n        columnKey=\"componentName\"\n      />\n      <DynamicColumn\n        title=\"Order Qty (kgs)\"\n        key=\"orderQuantity\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.orderQuantity}</div>;\n        }}\n        columnKey=\"orderQuantity\"\n      />\n      <DynamicColumn\n        title=\"Order Qty (packs)\"\n        key=\"orderQuantityPack\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.orderQuantityPack}</div>;\n        }}\n        columnKey=\"orderQuantityPack\"\n      />\n      <DynamicColumn\n        title=\"Received Qty (kgs)\"\n        key=\"receivedQuantity\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.receivedQuantity}</div>;\n        }}\n        columnKey=\"receivedQuantity\"\n      />\n      <DynamicColumn\n        title=\"Received Qty (packs)\"\n        key=\"receivedQuantityPack\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.receivedQuantityPack}</div>;\n        }}\n        columnKey=\"receivedQuantityPac\"\n      />\n      <DynamicColumn\n        title=\"Open Qty (kgs)\"\n        key=\"openQuantity\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.openQuantity}</div>;\n        }}\n        columnKey=\"openQuantity\"\n      />\n      <DynamicColumn\n        title=\"Open Qty (packs)\"\n        key=\"openQuantityPack\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.openQuantityPack}</div>;\n        }}\n        columnKey=\"openQuantityPack\"\n      />\n      <DynamicColumn\n        title=\"Delivery Date\"\n        key=\"deliveryDate\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{convertToLocalString(record.deliveryDate)}</div>;\n        }}\n        columnKey=\"deliveryDate\"\n      />\n      <DynamicColumn\n        title=\"Remarks\"\n        key=\"remarks\"\n        render={(value, record: IPurchaseOrderItem, index) => {\n          return <div key={index}>{record.remarks}</div>;\n        }}\n        columnKey=\"remarks\"\n      />\n    </DynamicColumnTable>\n  );\n};\nexport default OutstandingPurchaseOrderByVendorTable;\n","import { SettingOutlined, StarOutlined } from '@ant-design/icons';\nimport { createFavouriteVendor } from '@api/favourite-vendor.api';\nimport { getOutstandingPurchaseOrder } from '@api/purchase-order.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { NotificationType } from '@constant/notification.enum';\nimport { IPurchaseOrderItem } from '@dto/i-purchase-order-item.dto';\nimport VendorDebounceSelect from '@module/purchase-requisition-template/components/vendor-debounce-select';\nimport { popNotification } from '@module/shared/components/notification';\nimport { generateErrorMessage } from '@utils/api/api-error-handler';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { getSearchText, SearchEngine } from '@utils/search/native-search';\nimport { Button, DatePicker, Input } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport { AxiosResponse } from 'axios';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport FavouriteVendorDrawer from '../components/favourite-vendor-drawer';\nimport OutstandingPurchaseOrderByVendorTable from '../components/outstanding-purchase-order-by-vendor-table';\n\nconst purchaseOrderItemSearchIndexer = (items: IPurchaseOrderItem) => {\n  const str = JSON.stringify(items);\n  return getSearchText(str).toLowerCase();\n};\n\nconst OutstandingPurchaseOrderByVendorPage: React.FC<{}> = () => {\n  const searchEngine = new SearchEngine<IPurchaseOrderItem>([], purchaseOrderItemSearchIndexer);\n  const routingHistory = useHistory();\n  const [tableSettingVisible, setTableSettingVisible] = useState<boolean>(false);\n  const [favouriteVendortVisible, setFavouriteVendortVisible] = useState<boolean>(false);\n  const [selectedVendorID, setSelectedVendorID] = useState<string>();\n  const [outstandingPurchaseOrder, setOutstandingPurchaseOrder] = useState<IPurchaseOrderItem[]>();\n  const [outstandingPurchaseOrderSearchResult, setOutstandingPurchaseOrderSearchResult] = useState<IPurchaseOrderItem[]>([]);\n  const [poReceiptDate, setPoReceiptDate] = useState<Date>(new Date());\n  const [searchText, setSearchText] = useState<string>('');\n\n  /**\n   * Initialise table data\n   */\n  useEffect(() => {\n    (async () => {\n      try {\n        if (selectedVendorID) {\n          const outstandingPurchaseOrderResponse: AxiosResponse<IPurchaseOrderItem[]> = await getOutstandingPurchaseOrder(selectedVendorID);\n          if (outstandingPurchaseOrderResponse) {\n            if (outstandingPurchaseOrderResponse.status === ApiResponseStatus.SUCCESS) {\n              setOutstandingPurchaseOrder(outstandingPurchaseOrderResponse.data);\n            } else {\n              const errorMessage: string = generateErrorMessage(outstandingPurchaseOrderResponse.status);\n              popNotification(errorMessage, NotificationType.error);\n            }\n          } else {\n            popNotification('No response from server!! Please check is server live and running 📡📡📡', NotificationType.error);\n          }\n        }\n      } catch (error) {\n        popNotification('No response from server!! Please check is server live and running 📡📡📡', NotificationType.error);\n      }\n    })();\n  }, [selectedVendorID]);\n\n  useEffect(() => {\n    if (outstandingPurchaseOrder) {\n      const searchResult = searchEngine.updateEngine(outstandingPurchaseOrder).search(searchText);\n      setOutstandingPurchaseOrderSearchResult(CLONING_LIB.deepClone(searchResult));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [outstandingPurchaseOrder, searchText]);\n\n  const onSearch = (value: string) => {\n    setSearchText(getSearchText(value));\n  };\n\n  const onMarkAsFavouriteVendorClicked = async () => {\n    if (selectedVendorID) {\n      try {\n        const res = await createFavouriteVendor(selectedVendorID);\n        if (res.status === ApiResponseStatus.SUCCESS) {\n          popNotification('Successfully Added as Favourite Vendor', NotificationType.success);\n        } else {\n          popNotification(generateErrorMessage(res.status), NotificationType.error);\n        }\n      } catch (error) {\n        popNotification(`${error}`, NotificationType.error);\n      }\n    }\n  };\n\n  const navigateToCreatePoReceiptPage = () => {\n    if (selectedVendorID) {\n      routingHistory.push(`/purchase-order-receipt-creation/${selectedVendorID}`); //TODO: [LU] add required path variables correctly\n    } else {\n      popNotification('No Vendor Selected!!', NotificationType.warning);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Title level={4}>Outstanding Purchase Order by Vendor</Title>\n          </div>\n          <div className=\"col d-flex flex-column align-items-end\">\n            <div className=\"d-flex w-100\">\n              <VendorDebounceSelect selectedVendor={selectedVendorID} setSelectedVendor={setSelectedVendorID}></VendorDebounceSelect>\n              <div style={{ width: 5 }}></div>\n              <Button onClick={onMarkAsFavouriteVendorClicked} style={{ width: '50px' }} icon={<StarOutlined />}></Button>\n            </div>\n          </div>\n          <div className=\"col d-flex flex-column align-items-end\">\n            <div className=\"d-flex\">\n              <Input.Search placeholder=\"Search\" onSearch={onSearch} allowClear></Input.Search>\n              <Button onClick={() => setTableSettingVisible(true)} style={{ width: '50px' }} icon={<SettingOutlined />}></Button>\n              <Button onClick={() => setFavouriteVendortVisible(true)}>Fav. Vendors</Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <OutstandingPurchaseOrderByVendorTable\n              outstandingPurchaseOrderTableColumnSettingVisible={tableSettingVisible}\n              setOutstandingPurchaseOrderTableColumnSettingVisible={setTableSettingVisible}\n              outstandingPurchaseOrderSearchResult={outstandingPurchaseOrderSearchResult}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col p-2\">\n            <Button onClick={navigateToCreatePoReceiptPage} type=\"primary\">\n              Create PO Receipt\n            </Button>\n          </div>\n          <div className=\"col p-2\">\n            Date: <DatePicker format=\"DD/MM/YYYY\" value={moment(poReceiptDate)} onChange={(date) => setPoReceiptDate(date?.toDate() || new Date())} inputReadOnly></DatePicker>\n          </div>\n        </div>\n      </div>\n      <FavouriteVendorDrawer visible={favouriteVendortVisible} setVisible={setFavouriteVendortVisible} setSelectedFavouriteVendorID={setSelectedVendorID} />\n    </>\n  );\n};\n\nexport default OutstandingPurchaseOrderByVendorPage;\n","import axios from 'axios';\nimport { IPurchaseOrderReceiptHeader } from '@dto/i-purchase-order-receipt-header.dto';\nimport { Sort } from '@constant/sort.enum';\nimport { QueryParamsBuilder } from '@utils/api/query-params-builder';\nimport { IPurchaseOrderReceiptSearchCriteria } from '@dto/i-purchase-order-receipt-search-criteria.dto';\nimport { PURCHASE_ORDER_RECEIPT } from '@constant/api-endpoints';\n\nconst PURCHASE_ORDER_RECEIPT_ITEM_LIST_DEFAULT_SIZE: number = 100;\n\nexport async function getPurchaseOrderReceiptHeaders(startDate: Date, endDate: Date, sortBy: Sort) {\n  // const wrappedParams = { startDate, endDate, sortBy }; // Disabled date sorting from backend temporarily\n  let sort = 'grnDate,desc';\n  let wrappedParams = { sort, size: PURCHASE_ORDER_RECEIPT_ITEM_LIST_DEFAULT_SIZE };\n  const url: string = QueryParamsBuilder.withUrl(PURCHASE_ORDER_RECEIPT).addParams(wrappedParams).build();\n  return await axios.get<IPurchaseOrderReceiptHeader[]>(url);\n}\n\nexport async function searchPurchaseOrderReceiptHeaders(sortBy: Sort, poReceiptHeaderCriteria: IPurchaseOrderReceiptSearchCriteria) {\n  let sort = 'grnDate,desc';\n  let wrappedParams = { sort };\n  const url: string = QueryParamsBuilder.withUrl(`${PURCHASE_ORDER_RECEIPT}/search`).addParams(wrappedParams).build();\n  return await axios.post<IPurchaseOrderReceiptHeader[]>(url, poReceiptHeaderCriteria);\n}\n\nexport async function createPurchaseOrderReceiptHeader(purchaseReceiptHeader: IPurchaseOrderReceiptHeader) {\n  return await axios.post<IPurchaseOrderReceiptHeader>(`${PURCHASE_ORDER_RECEIPT}`, purchaseReceiptHeader);\n}\n\nexport async function getPurchaseOrderReceiptHeaderByGrnNo(grnNo: string) {\n  return await axios.get<IPurchaseOrderReceiptHeader>(`${PURCHASE_ORDER_RECEIPT}/${grnNo}`);\n}\n","export const PURCHASE_ORDER_RECEIPT_TABLE_HEADER_HEIGHT: number = 65;\nexport const PURCHASE_ORDER_RECEIPT_TITLE_HEIGHT: number = 40;\nexport const PURCHASE_ORDER_RECEIPT_TOP_TOOLS_HEIGHT: number = 60;\n","export enum PurchaseOrderReceiptItemStatus {\n  PENDING = 'PENDING',\n  CONFIRMED = 'CONFIRMED',\n  RECEIVED = 'RECEIVED',\n}\n\nconst DISPLAY_TEXT_MAP = new Map<string, string>();\nDISPLAY_TEXT_MAP.set(PurchaseOrderReceiptItemStatus.PENDING, 'Confirm');\nDISPLAY_TEXT_MAP.set(PurchaseOrderReceiptItemStatus.CONFIRMED, 'Confirmed');\nDISPLAY_TEXT_MAP.set(PurchaseOrderReceiptItemStatus.RECEIVED, 'Issued');\n\nexport function PurchaseOrderReceiptItemStatusDisplayText(key: PurchaseOrderReceiptItemStatus): string {\n  const displayText = DISPLAY_TEXT_MAP.get(key.toString());\n\n  if (displayText) {\n    return displayText;\n  } else {\n    throw new Error(\"Status's Display Text not defined. Please define status display text at function: PurchaseOrderReceiptItemStatusDisplayText\");\n  }\n}\n","import { Button, Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { TABLE_PAGINATION_CONFIG } from '@constant/pagination-config';\n\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { TABLE_PAGINATION_TOOLS_HEIGHT } from '@constant/display/table.constant';\nimport { PURCHASE_ORDER_RECEIPT_TABLE_HEADER_HEIGHT, PURCHASE_ORDER_RECEIPT_TITLE_HEIGHT, PURCHASE_ORDER_RECEIPT_TOP_TOOLS_HEIGHT } from '@constant/display/purchase-order-receipt.constant';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\nimport { IPurchaseOrderReceiptHeader } from '@dto/i-purchase-order-receipt-header.dto';\n\ninterface IPurchaseOrderReceiptTableProps {\n  filteredItems?: IPurchaseOrderReceiptHeader[];\n}\n\nconst PurchaseOrderReceiptTable: React.FC<IPurchaseOrderReceiptTableProps> = (props) => {\n  const PURCHASE_ORDER_RECEIPT_TABLE_HEIGHT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT + APP_CONTENT_MARGIN + PURCHASE_ORDER_RECEIPT_TITLE_HEIGHT + PURCHASE_ORDER_RECEIPT_TOP_TOOLS_HEIGHT + PURCHASE_ORDER_RECEIPT_TABLE_HEADER_HEIGHT + TABLE_PAGINATION_TOOLS_HEIGHT;\n  const windowSize: IWindowSize = useWindowResized();\n\n  const poReceiptItems = props.filteredItems === undefined ? [] : props.filteredItems;\n\n  const PURCHASE_ORDER_RECEIPT_TABLE_COLUMN: ColumnsType<IPurchaseOrderReceiptHeader> = [\n    {\n      title: 'GRN No.',\n      dataIndex: 'grnNo',\n      key: 'grnNo',\n      align: 'center',\n      width: '125px',\n    },\n    {\n      title: 'Receipt Date',\n      dataIndex: 'grnDate',\n      key: 'receiptDate',\n      align: 'center',\n      width: '120px',\n      render: (text: string, record: IPurchaseOrderReceiptHeader) => <span>{convertToLocalString(record.grnDate, true)}</span>,\n    },\n    {\n      title: 'Vendor',\n      dataIndex: 'vendorID',\n      key: 'vendor',\n      align: 'center',\n      width: '156px',\n      render: (text: string, record: IPurchaseOrderReceiptHeader) => (\n        <span>\n          {text}\n          {record.vendorName ? ' - ' + record.vendorName : ''}\n        </span>\n      ),\n    },\n    {\n      title: 'DO NO.',\n      dataIndex: 'doNumber',\n      key: 'doNumber',\n      align: 'center',\n      width: '115px',\n    },\n    {\n      title: 'Action',\n      dataIndex: 'id',\n      key: 'openPoReceipt',\n      align: 'center',\n      width: '115px',\n      render: (text: string, record: IPurchaseOrderReceiptHeader) => (\n        <Button className=\"d-inline-flex align-items-center po-action-button\" onClick={() => openPOReceipt(record)}>\n          &nbsp;Open\n        </Button>\n      ),\n    },\n  ];\n\n  const openPOReceipt = async (purchaseOrderReceiptHeader: IPurchaseOrderReceiptHeader) => {\n    console.group(PurchaseOrderReceiptTable.name);\n    console.log('Open PO Receipt');\n    console.log('Purchase Receipt Header: ', purchaseOrderReceiptHeader);\n    console.log('GRN No: ', purchaseOrderReceiptHeader.grnNo);\n    // TODO: navigation for Open PO Receipt to Create PO Receipt with grnNo\n    window.location.href = `/purchase-order-receipt-creation/${purchaseOrderReceiptHeader.vendorID}?grnNo=${purchaseOrderReceiptHeader.grnNo}`;\n    console.groupEnd();\n  };\n\n  return (\n    <>\n      <Table\n        className=\"my-1\"\n        dataSource={poReceiptItems}\n        columns={PURCHASE_ORDER_RECEIPT_TABLE_COLUMN}\n        rowKey=\"id\"\n        scroll={{ y: windowSize.height - PURCHASE_ORDER_RECEIPT_TABLE_HEIGHT_CONSTRAINT }}\n        pagination={TABLE_PAGINATION_CONFIG}\n      ></Table>\n    </>\n  );\n};\n\nexport default PurchaseOrderReceiptTable;\n","import { useState } from 'react';\nimport { Input, Button, DatePicker, Select, Form } from 'antd';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nimport { popNotification } from '@module/shared/components/notification';\nimport { NotificationType } from '@constant/notification.enum';\nimport { IPurchaseOrderReceiptSearchCriteria } from '@dto/i-purchase-order-receipt-search-criteria.dto';\n\ninterface IPurchaseOrderReceiptSearchFormProps {\n  performSearch: (searchCriteria: IPurchaseOrderReceiptSearchCriteria) => void;\n}\n\nconst PurchaseOrderReceiptSearchForm: React.FC<IPurchaseOrderReceiptSearchFormProps> = (props: IPurchaseOrderReceiptSearchFormProps) => {\n  const { performSearch } = props;\n  const [searchByField, setSearchByField] = useState<string>('');\n  const [startGrnDateCriteria, setStartGrnDateCriteria] = useState<Date>();\n  const [endGrnDateCriteria, setEndGrnDateCriteria] = useState<Date>();\n  const [form] = Form.useForm();\n\n  const setGrnDateRange = (startDate?: string, endDate?: string) => {\n    let startDateValue = startDate === undefined ? startDate : new Date(startDate);\n    if (startDateValue) {\n      const startDateUTC = Date.UTC(startDateValue.getFullYear(), startDateValue.getMonth(), startDateValue.getDate(), 0, 0, 0);\n      startDateValue = new Date(startDateUTC);\n    }\n    setStartGrnDateCriteria(startDateValue);\n    let endDateValue = endDate === undefined ? endDate : new Date(endDate);\n    if (endDateValue) {\n      const endDateUTC = Date.UTC(endDateValue.getFullYear(), endDateValue.getMonth(), endDateValue.getDate(), 23, 59, 59);\n      endDateValue = new Date(endDateUTC);\n    }\n    setEndGrnDateCriteria(endDateValue);\n  };\n\n  const onFinish = async (values: any) => {\n    console.log('Success:', values);\n    if (searchByField == null || searchByField === '') {\n      popNotification('Please select search by value', NotificationType.warning);\n      return;\n    }\n    let searchCriteria: IPurchaseOrderReceiptSearchCriteria;\n    if (searchByField === 'grnDate') {\n      if (startGrnDateCriteria == null || endGrnDateCriteria == null) {\n        popNotification('Please select receipt date range for search', NotificationType.warning);\n        return;\n      }\n      searchCriteria = {\n        startGrnDate: startGrnDateCriteria.toISOString(),\n        endGrnDate: endGrnDateCriteria.toISOString(),\n      };\n    } else {\n      const searchValue = values.keyword?.trim();\n      if (searchValue == null || searchValue === '') {\n        popNotification('Please input search keyword', NotificationType.warning);\n        return;\n      }\n      searchCriteria = {\n        [searchByField]: searchValue,\n      };\n    }\n    console.log(searchCriteria);\n    performSearch(searchCriteria);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    setSearchByField('');\n    setStartGrnDateCriteria(undefined);\n    setEndGrnDateCriteria(undefined);\n  };\n\n  return (\n    <>\n      <Form name=\"basic\" layout=\"inline\" form={form} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\">\n        <Form.Item name=\"searchBy\" initialValue={''}>\n          <Select key=\"search-by-select\" value={searchByField} onChange={(value) => setSearchByField(value)} style={{ minWidth: '125px' }}>\n            <Select.Option disabled value={''}>\n              Search By\n            </Select.Option>\n            <Select.Option value={'grnNo'}>GRN No</Select.Option>\n            <Select.Option value={'grnDate'}>Receipt Date</Select.Option>\n            <Select.Option value={'vendorID'}>Vendor</Select.Option>\n            <Select.Option value={'doNumber'}>DO No</Select.Option>\n          </Select>\n        </Form.Item>\n\n        <Form.Item name=\"keyword\">\n          <Input placeholder=\"Enter Keyword\" allowClear={true} />\n        </Form.Item>\n\n        <Form.Item name=\"grnDateRange\">\n          <DatePicker.RangePicker\n            inputReadOnly\n            format=\"DD/MM/YYYY\"\n            allowEmpty={[true, true]}\n            value={[startGrnDateCriteria === undefined ? null : moment(startGrnDateCriteria), endGrnDateCriteria === undefined ? null : moment(endGrnDateCriteria)]}\n            onChange={(dateValues) => setGrnDateRange(dateValues != null ? dateValues[0]?.toString() : undefined, dateValues != null ? dateValues[1]?.toString() : undefined)}\n          />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 2, span: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Search\n          </Button>\n        </Form.Item>\n\n        <Form.Item>\n          <Button htmlType=\"button\" onClick={onReset} className=\"d-inline-flex align-items-center\">\n            <ReloadOutlined />\n            Reset\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default PurchaseOrderReceiptSearchForm;\n","import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Title from 'antd/lib/typography/Title';\n\nimport { IPurchaseOrderReceiptHeader } from '@dto/i-purchase-order-receipt-header.dto';\nimport { IPurchaseOrderReceiptSearchCriteria } from '@dto/i-purchase-order-receipt-search-criteria.dto';\nimport { Sort } from '@constant/sort.enum';\nimport { getPurchaseOrderReceiptHeaders, searchPurchaseOrderReceiptHeaders } from '@api/purchase-order-receipt.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport PurchaseOrderReceiptTable from '../components/purchase-order-receipt-table/purchase-order-receipt-table';\nimport PurchaseOrderReceiptSearchForm from '../components/purchase-order-receipt-search-form/purchase-order-receipt-search-form';\nimport { popNotification } from '@module/shared/components/notification';\nimport { NotificationType } from '@constant/notification.enum';\nimport { setLoading } from '@module/shared/reducers/app-reducers';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\n\ninterface IPurchaseOrderReceiptRecordProps extends StateProps, DispatchProps {}\n\nconst PurchaseOrderReceiptRecordPage: React.FC<IPurchaseOrderReceiptRecordProps> = (props: IPurchaseOrderReceiptRecordProps) => {\n  const [purchaseOrderReceiptHeaders, setPurchaseOrderReceiptHeaders] = useState<IPurchaseOrderReceiptHeader[]>();\n\n  useEffect(() => {\n    const getPurchaseOrderReceiptHeaderList = async () => {\n      const apiResponse = await getPurchaseOrderReceiptHeaders(new Date(), new Date(), Sort.DES);\n\n      if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n        const deepCopy: IPurchaseOrderReceiptHeader[] = CLONING_LIB.deepClone(apiResponse.data);\n        setPurchaseOrderReceiptHeaders(deepCopy);\n      }\n    };\n\n    getPurchaseOrderReceiptHeaderList();\n  }, []);\n\n  const performSearch = async (searchCriteria: IPurchaseOrderReceiptSearchCriteria) => {\n    const apiResponse = await searchPurchaseOrderReceiptHeaders(Sort.DES, searchCriteria);\n    if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n      const deepCopy: IPurchaseOrderReceiptHeader[] = CLONING_LIB.deepClone(apiResponse.data);\n      setPurchaseOrderReceiptHeaders(deepCopy);\n      popNotification('Success Search PO Receipt Records', NotificationType.success);\n    } else {\n      popNotification('Failed to Search PO Receipt Records', NotificationType.error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid h-100\">\n        <div>\n          <div className=\"mb-2 w-100\">\n            <Title className=\"d-inline-block\" level={4}>\n              Purchase Order Receipt Record\n            </Title>\n          </div>\n          <div>\n            <PurchaseOrderReceiptSearchForm performSearch={performSearch} />\n          </div>\n          <div className=\"mx-2 d-inline-flex border-top mt-4 w-100\">\n            <PurchaseOrderReceiptTable filteredItems={purchaseOrderReceiptHeaders} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  setLoading,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseOrderReceiptRecordPage);\n","import { ITableColumnDisplaySettings } from '@dto/i-table-columns';\n\nconst DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS: ITableColumnDisplaySettings[] = [\n  {\n    columnKey: 'poNumber',\n    settingDisplayName: 'PO Number',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'componentCode',\n    settingDisplayName: 'Component Code',\n    visible: false,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'componentName',\n    settingDisplayName: 'Component Name',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'orderQuantity',\n    settingDisplayName: 'Ordered Qty(kgs)',\n    visible: false,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'orderQuantityPack',\n    settingDisplayName: 'Ordered Qty(packs)',\n    visible: false,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'receivedQuantity',\n    settingDisplayName: 'Received Qty(kgs)',\n    visible: false,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'receivedQuantityPack',\n    settingDisplayName: 'Received Qty(packs)',\n    visible: false,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'openQuantity',\n    settingDisplayName: 'Open Qty(kgs)',\n    visible: false,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'openQuantityPack',\n    settingDisplayName: 'Open Qty(packs)',\n    visible: false,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'receivingQuantity',\n    settingDisplayName: 'Receiving Qty(kgs)',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'receivingQuantityPack',\n    settingDisplayName: 'Receiving Qty(packs)',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'uom',\n    settingDisplayName: 'UOM (kgs)',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'uomPack',\n    settingDisplayName: 'UOM (packs)',\n    visible: true,\n    visibilityEditable: true,\n  },\n  {\n    columnKey: 'status',\n    settingDisplayName: 'Issue Receiving',\n    visible: true,\n    visibilityEditable: false,\n  },\n];\n\nexport default DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS;\n","import axios from 'axios';\nimport { IPurchaseOrderReceiptHeader } from '@dto/i-purchase-order-receipt-header.dto';\nimport { PURCHASE_ORDER_RECEIPT_HEADER } from '@constant/api-endpoints';\n\nexport async function createPurchaseOrderReceiptHeaderByVendorId(vendorId: string) {\n  return await axios.post<IPurchaseOrderReceiptHeader>(`${PURCHASE_ORDER_RECEIPT_HEADER}/${vendorId}`);\n}\n","import { createPurchaseOrderReceiptHeaderByVendorId } from '@api/purchase-order-receipt-header.api';\nimport { getPurchaseOrderReceiptHeaderByGrnNo } from '@api/purchase-order-receipt.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { IPurchaseOrderReceiptHeader } from '@dto/i-purchase-order-receipt-header.dto';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { convertToLocalString } from '@utils/date-time/date-time-format';\nimport { Form, Input } from 'antd';\nimport { useEffect, useState } from 'react';\n\ninterface IPurchaseOrderReceiptHeaderInfoProps {\n  doNumber: string;\n  setDONumber: (value: string) => void;\n  grnNo: string | null;\n  setGrnNo: (grnNo: string) => void;\n  grnDate?: Date;\n  vendorId: string;\n  vendorName?: string;\n}\n\nconst PurchaseOrderReceiptHeaderInfo: React.FC<IPurchaseOrderReceiptHeaderInfoProps> = (props) => {\n  const [poReceiptHeader, setPOReceiptHeader] = useState<IPurchaseOrderReceiptHeader>();\n  const { doNumber, setDONumber, grnNo, setGrnNo, vendorId } = props;\n\n  useEffect(() => {\n    const getNewPOReceiptHeader = async (vendorId: string) => {\n      const apiResponse = await createPurchaseOrderReceiptHeaderByVendorId(vendorId);\n\n      if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n        const deepCopy: IPurchaseOrderReceiptHeader = CLONING_LIB.deepClone(apiResponse.data);\n        console.log('createPurchaseOrderReceiptHeaderByVendorId >>: ', deepCopy);\n        setPOReceiptHeader(deepCopy);\n        setGrnNo(deepCopy.grnNo);\n      }\n    };\n\n    const getPOReceiptHeaderByGrnNo = async (grnNo: string) => {\n      const apiResponse = await getPurchaseOrderReceiptHeaderByGrnNo(grnNo);\n\n      if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n        const deepCopy: IPurchaseOrderReceiptHeader = CLONING_LIB.deepClone(apiResponse.data);\n        setPOReceiptHeader(deepCopy);\n      }\n    };\n\n    if (grnNo != null && grnNo.trim() !== '') {\n      getPOReceiptHeaderByGrnNo(grnNo);\n    } else {\n      getNewPOReceiptHeader(vendorId);\n    }\n  }, [grnNo, setGrnNo, vendorId]);\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between align-items-center mx-2 mb-2\">\n        <div>\n          <Form.Item label=\"DO\">\n            <Input value={doNumber} onChange={(e) => setDONumber(e.target.value)} placeholder=\"DO Number\"></Input>\n          </Form.Item>\n        </div>\n        <div>\n          <strong>PO Receipt Created</strong>: {grnNo ?? poReceiptHeader?.grnNo}\n          <br />\n          <strong>Date</strong>: {poReceiptHeader ? convertToLocalString(poReceiptHeader.grnDate) : ''}\n          <br />\n          <strong>Vendor</strong>: {vendorId} {poReceiptHeader?.vendorName}\n          <br />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseOrderReceiptHeaderInfo;\n","import './request-constructor.less';\nimport React from 'react';\nimport Table from 'antd/lib/table';\nimport { Button } from 'antd';\n\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { ChangeEvent } from '@constant/change-event.enum';\nimport { ITableColumn, ITableColumnDisplaySettings } from '@dto/i-table-columns';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { PURCHASE_REQUISITION_BOTTOM_TOOLS_HEIGHT, PURCHASE_REQUISITION_TITLE_HEIGHT, PURCHASE_REQUISITION_TOP_TOOLS_HEIGHT } from '@constant/display/purchase-requisition-request.constant';\nimport { TABLE_PAGINATION_TOOLS_HEIGHT, TABLE_HEADER_HEIGHT } from '@constant/display/table.constant';\nimport { PurchaseOrderReceiptItemStatus, PurchaseOrderReceiptItemStatusDisplayText } from '@constant/purchase-order-receipt-item-status.enum';\nimport StatefulNumberInput from '@module/shared/components/stateful-input/stateful-number-input/stateful-number-input';\nimport { PurchaseRequisitionApprovalStatus } from '@constant/purchase-requisition-approval-status.enum';\nimport { IPurchaseOrderItem } from '@dto/i-purchase-order-item.dto';\n\ninterface IPurchaseOrderReceiptCreationRequestConstructorProps {\n  readonly searchResult?: IPurchaseOrderItem[];\n  updatePurchaseOrderReceiptItem: (purchaseOrderReceiptItemList: IPurchaseOrderItem[]) => void;\n  tableColumnDisplaySettings?: ITableColumnDisplaySettings[];\n  tableColumnDisplaySettingsUpdateTime: Date;\n}\n\n/**\n * Due to the need of dynamic column settings, the implementation details are as follows:\n * - The columns are stored as key value data structure as a local constant (const COLUMNS: ITableColumn)\n * - The sequence and visibility of columns are supplied by parent component, the constructor table generates column structure based on:\n *   - The sequence of column list provided\n *   - The visible as defined\n * @param props IPurchaseOrderReceiptCreationRequestConstructorProps\n * @returns PurchaseOrderReceiptCreationRequestConstructor\n */\nconst PurchaseOrderReceiptCreationRequestConstructor: React.FC<IPurchaseOrderReceiptCreationRequestConstructorProps> = (props) => {\n  const { searchResult, updatePurchaseOrderReceiptItem } = props;\n  const windowSize: IWindowSize = useWindowResized();\n  const TABLE_BODY_MAX_HEIHGT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT +\n    APP_CONTENT_MARGIN +\n    PURCHASE_REQUISITION_TITLE_HEIGHT +\n    PURCHASE_REQUISITION_TOP_TOOLS_HEIGHT +\n    PURCHASE_REQUISITION_BOTTOM_TOOLS_HEIGHT +\n    TABLE_HEADER_HEIGHT +\n    TABLE_PAGINATION_TOOLS_HEIGHT;\n\n  const updatePurchaseOrderReceiptItemStatus: (item: IPurchaseOrderItem) => void = (item) => {\n    let udpatedValue: PurchaseOrderReceiptItemStatus;\n    switch (item.status) {\n      case PurchaseOrderReceiptItemStatus.PENDING:\n        udpatedValue = PurchaseOrderReceiptItemStatus.CONFIRMED;\n        break;\n      case PurchaseOrderReceiptItemStatus.CONFIRMED:\n        udpatedValue = PurchaseOrderReceiptItemStatus.PENDING;\n        break;\n      default:\n        udpatedValue = PurchaseOrderReceiptItemStatus.PENDING;\n        break;\n    }\n    // TODO: Update Item Status\n    const updatedList = updateData(udpatedValue, item, 'status');\n    updatePurchaseOrderReceiptItem(updatedList);\n  };\n\n  const updateData: (value: any, record: IPurchaseOrderItem, key: string) => IPurchaseOrderItem[] = (value, record, key) => {\n    if (searchResult === undefined) {\n      return [];\n    }\n    const idToUpdate = record.id;\n    const updatedPurchaseOrderItemList = searchResult.map((item) => {\n      if (item.id === idToUpdate) {\n        (item as any)[key] = value;\n      }\n      return item;\n    });\n    const updatedPurchaseOrderItemListCopy = CLONING_LIB.deepClone(updatedPurchaseOrderItemList);\n    return updatedPurchaseOrderItemListCopy;\n  };\n\n  /**\n   * Update the SelectedApprovalItem's field based on the provided key\n   * @param changeEvent change event emitted by html element\n   * @param record the data associated with current row\n   * @param key the key of the modified field (to perform modifying logic)\n   * @param index the index of current row (against table)\n   */\n  const dataChanged: (changeEventType: ChangeEvent, changeEvent: any, record: IPurchaseOrderItem, key: string, index: number) => void = (changeEventType, changeEvent, record, key, index) => {\n    console.group('dataChanged');\n    console.log('changeEventType >>: ', changeEventType);\n    console.log('changeEvent >>: ', changeEvent);\n    console.log('record >>: ', record);\n    console.log('key >>: ', key);\n    console.log('index >>: ', index);\n    console.groupEnd();\n\n    let valueToUpdate: any;\n    switch (changeEventType) {\n      case ChangeEvent.NUMBER_INPUT:\n        valueToUpdate = changeEvent;\n        break;\n      case ChangeEvent.TEXT_INPUT:\n        valueToUpdate = changeEvent.target.value;\n        break;\n      default:\n        valueToUpdate = '';\n        break;\n    }\n\n    if (searchResult) {\n      const updatedList = updateData(valueToUpdate, record, key);\n      updatePurchaseOrderReceiptItem(updatedList);\n    }\n  };\n\n  /**\n   * Add column display settings updated time stamp to the tail of column keys to ensure columns are always refreshed after settings updated\n   * - If key remains the same, react does not refresh component, hence adding timestamp in key to force refresh\n   * - However, if refresh on every render, user will be unable to edit the data in table, hence only refresh if the time stamp got updated\n   */\n  const CURRENT_TIME: number = props.tableColumnDisplaySettingsUpdateTime.getTime();\n  const COLUMNS: ITableColumn = {\n    poNumber: <Table.Column title=\"PO Number\" width=\"120px\" dataIndex=\"poNumber\" key={`poNumber-${CURRENT_TIME}`} />,\n    componentCode: <Table.Column title=\"Component Code\" width=\"140px\" dataIndex=\"componentCode\" key={`componentCode-${CURRENT_TIME}`} />,\n    componentName: <Table.Column title=\"Component Name\" width=\"172px\" dataIndex=\"componentName\" key={`componentName-${CURRENT_TIME}`} />,\n    orderQuantityPack: <Table.Column title=\"Ordered Qty(packs)\" width=\"100px\" dataIndex=\"orderQuantityPack\" key={`orderQtyPack-${CURRENT_TIME}`} />,\n    receivedQuantityPack: <Table.Column title=\"Received Qty(packs)\" width=\"100px\" dataIndex=\"receivedQuantityPack\" key={`receivedQtyPack-${CURRENT_TIME}`} />,\n    openQuantityPack: <Table.Column title=\"Open Qty(packs)\" width=\"100px\" dataIndex=\"openQuantityPack\" key={`openQtyPack-${CURRENT_TIME}`} />,\n    receivingQuantityPack: (\n      <Table.Column\n        title=\"Receiving Qty(packs)\"\n        width=\"100px\"\n        dataIndex=\"receivingQuantityPack\"\n        key={`receivingQtyPack-${CURRENT_TIME}`}\n        render={(value, record: IPurchaseOrderItem, index: number) => {\n          return (\n            <StatefulNumberInput\n              state={record.status === PurchaseOrderReceiptItemStatus.PENDING ? PurchaseRequisitionApprovalStatus.TO_CONFIRM : PurchaseRequisitionApprovalStatus.CONFIRMED}\n              value={value}\n              onChange={(e) => dataChanged(ChangeEvent.NUMBER_INPUT, e, record, 'receivingQuantityPack', index)}\n            />\n          );\n        }}\n      />\n    ),\n    uomPack: <Table.Column title=\"UOM (packs)\" width=\"60px\" dataIndex=\"uomPack\" key={`uomPack-${CURRENT_TIME}`} />,\n    orderQuantity: <Table.Column title=\"Ordered Qty(kgs)\" width=\"110px\" dataIndex=\"orderQuantity\" key={`orderQty-${CURRENT_TIME}`} />,\n    receivedQuantity: <Table.Column title=\"Received Qty(kgs)\" width=\"110px\" dataIndex=\"receivedQuantity\" key={`receivedQty-${CURRENT_TIME}`} />,\n    openQuantity: <Table.Column title=\"Open Qty(kgs)\" width=\"110px\" dataIndex=\"openQuantity\" key={`openQty-${CURRENT_TIME}`} />,\n    receivingQuantity: (\n      <Table.Column\n        title=\"Receiving Qty(kgs)\"\n        width=\"110px\"\n        dataIndex=\"receivingQuantity\"\n        key={`receivingQty-${CURRENT_TIME}`}\n        render={(value, record: IPurchaseOrderItem, index: number) => {\n          return (\n            <StatefulNumberInput\n              state={record.status === PurchaseOrderReceiptItemStatus.PENDING ? PurchaseRequisitionApprovalStatus.TO_CONFIRM : PurchaseRequisitionApprovalStatus.CONFIRMED}\n              value={value}\n              onChange={(e) => dataChanged(ChangeEvent.NUMBER_INPUT, e, record, 'receivingQuantity', index)}\n            />\n          );\n        }}\n      />\n    ),\n    uom: <Table.Column title=\"UOM (kgs)\" width=\"60px\" dataIndex=\"uom\" key={`uom-${CURRENT_TIME}`} />,\n    status: (\n      <Table.Column\n        title={<span>Issue Receiving</span>}\n        width=\"114px\"\n        dataIndex=\"status\"\n        render={(value: PurchaseOrderReceiptItemStatus, record: IPurchaseOrderItem, index: number) => (\n          <Button className={`po-receipt-status-${value.toLowerCase()}`} onClick={() => updatePurchaseOrderReceiptItemStatus(record)}>\n            {`${PurchaseOrderReceiptItemStatusDisplayText(value)}`}\n          </Button>\n        )}\n        key={`status-${CURRENT_TIME}`}\n      />\n    ),\n  };\n\n  return (\n    <>\n      <Table dataSource={props.searchResult} rowKey=\"id\" scroll={{ y: windowSize.height - TABLE_BODY_MAX_HEIHGT_CONSTRAINT }} pagination={false}>\n        {props.tableColumnDisplaySettings &&\n          props.tableColumnDisplaySettings.filter((columnDisplaySetting) => columnDisplaySetting.visible).map((columnDisplaySetting) => COLUMNS[columnDisplaySetting.columnKey])}\n      </Table>\n    </>\n  );\n};\n\nexport default PurchaseOrderReceiptCreationRequestConstructor;\n","import { IPurchaseOrderItem } from '@dto/i-purchase-order-item.dto';\n\nexport default function generateIndex(purchaseOrderReceiptItem: IPurchaseOrderItem): string {\n  const searchIndex = JSON.stringify(purchaseOrderReceiptItem);\n  return searchIndex.replace(/\\s+/g, '').toLowerCase();\n}\n","import { Form, Input } from 'antd';\n\ninterface IPurchaseOrderReceiptCreationRequestRemarksProps {\n  remarks: string;\n  setRemarks: (value: string) => void;\n  reference: string;\n  setReference: (value: string) => void;\n}\n\nconst PurchaseOrderReceiptCreationRequestRemarks: React.FC<IPurchaseOrderReceiptCreationRequestRemarksProps> = (props) => {\n  const remarks = props.remarks;\n  const setRemarks = props.setRemarks;\n  const reference = props.reference;\n  const setReference = props.setReference;\n\n  return (\n    <>\n      <div className=\"d-flex flex-column justify-content-between h-100\">\n        <Form name=\"basic\" layout=\"vertical\" autoComplete=\"off\">\n          <Form.Item label=\"Reference\">\n            <Input.TextArea className=\"remarks-textbox\" value={reference} onChange={(e) => setReference(e.target.value)} rows={3} placeholder=\"Reference here\"></Input.TextArea>\n          </Form.Item>\n          {/* Update Button */}\n          <Form.Item label=\"Remarks\">\n            <Input.TextArea className=\"remarks-textbox\" value={remarks} onChange={(e) => setRemarks(e.target.value)} rows={3} placeholder=\"Remarks here\"></Input.TextArea>\n          </Form.Item>\n          {/* Update Button */}\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseOrderReceiptCreationRequestRemarks;\n","import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport {\n  PURCHASE_REQUISITION_REQUEST,\n  PURCHASE_REQUISITION_REQUEST_REGEX,\n  PURCHASE_REQUISITION_TEMPLATE,\n  PURCHASE_ORDER,\n  PURCHASE_REQUISITION_APPROVAL,\n  GET_COMPONENT_BY_SEARCH,\n  PURCHASE_ORDER_OUTSTANDING_ITEM,\n  LOGIN,\n  FAVOURITE_VENDOR,\n} from '@constant/api-endpoints';\nimport { IPurchaseRequisitionRequest } from '@dto/i-purchase-requisition-request.dto';\nimport { IPurchaseRequisitionTemplate } from '@dto/i-purchase-requisition-template.dto';\nimport { IPurchaseRequisitionTemplateItem } from '@dto/i-purchase-requisition-template-item.dto';\nimport { IPurchaseApprovalOrder } from '@dto/i-purchase-approval-order.dto';\nimport { IPurchaseRequisitionApproval } from '@dto/i-purchase-requisition-approval.dto';\nimport { PurchaseRequisitionApprovalStatus } from '@constant/purchase-requisition-approval-status.enum';\nimport { IPurchaseOrderItem } from '@dto/i-purchase-order-item.dto';\nimport { IFavouriteVendor } from '@dto/i-favourite-vendor.dto';\n\nlet mock: MockAdapter;\nif (process.env.REACT_APP_MOCK === 'enabled') {\n  mock = new MockAdapter(axios);\n  mock.onPost(PURCHASE_REQUISITION_REQUEST).reply<IPurchaseRequisitionRequest>(200, {\n    id: 1,\n    createdDate: new Date(),\n    templateId: 1,\n    purchaseRequisitionRequestItems: [\n      {\n        componentCode: 'ABC',\n        componentName: 'abc',\n        vendorName: 'abc',\n        stockBalance: 100,\n        packagingSize: 100,\n        noOfPacks: 100,\n        quantity: 10000,\n        deliveryDate: new Date(),\n      },\n    ],\n    remarks: 'abc',\n  });\n\n  mock.onGet(PURCHASE_REQUISITION_REQUEST_REGEX).reply<IPurchaseRequisitionRequest[]>(200, [\n    {\n      id: 1,\n      createdDate: new Date('2022-01-01'),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 1,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n        {\n          id: 2,\n          componentCode: 'BGY2RS',\n          componentName: 'BEGACRON GOLDEN YELLOW 2RS 200%',\n          vendorId: 'K101',\n          vendorName: 'KONG LONG HUAT CHEMICAL SDN. BHD.',\n          stockBalance: 100,\n          packagingSize: 1000.0,\n          noOfPacks: 1000,\n          quantity: 1000000.0,\n          deliveryDate: new Date(),\n        },\n        {\n          id: 3,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n        {\n          id: 4,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n        {\n          id: 5,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n        {\n          id: 6,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n        {\n          id: 7,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n        {\n          id: 8,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n        {\n          id: 9,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n    {\n      id: 2,\n      createdDate: new Date(),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 2,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n    {\n      id: 3,\n      createdDate: new Date(),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 3,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n    {\n      id: 4,\n      createdDate: new Date(),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 4,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n    {\n      id: 5,\n      createdDate: new Date(),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 5,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n    {\n      id: 6,\n      createdDate: new Date(),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 6,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n    {\n      id: 7,\n      createdDate: new Date(),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 7,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n    {\n      id: 8,\n      createdDate: new Date(),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 8,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n    {\n      id: 9,\n      createdDate: new Date(),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 9,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n    {\n      id: 10,\n      createdDate: new Date('2021-11-01'),\n      templateId: 1,\n      purchaseRequisitionRequestItems: [\n        {\n          id: 10,\n          componentCode: 'ABC',\n          componentName: 'abc',\n          vendorName: 'abc',\n          stockBalance: 100,\n          packagingSize: 100,\n          noOfPacks: 100,\n          quantity: 10000,\n          deliveryDate: new Date(),\n        },\n      ],\n      remarks: 'abc',\n    },\n  ]);\n\n  mock.onGet(GET_COMPONENT_BY_SEARCH).reply<IPurchaseRequisitionTemplateItem[]>(200, [\n    {\n      id: 1,\n      componentCode: 'AAA',\n      componentName: 'Component A',\n      vendorId: 'VEN-A',\n      vendorName: 'Vendor A',\n      packagingSize: 100,\n      sequence: 1,\n    },\n    {\n      id: 2,\n      componentCode: 'BBB',\n      componentName: 'Component B',\n      vendorId: 'VEN-B',\n      vendorName: 'Vendor B',\n      packagingSize: 100,\n      sequence: 2,\n    },\n    {\n      id: 3,\n      componentCode: 'CCC',\n      componentName: 'Component C',\n      vendorId: 'VEN-C',\n      vendorName: 'Vendor C',\n      packagingSize: 100,\n      sequence: 3,\n    },\n    {\n      id: 4,\n      componentCode: 'DDD',\n      componentName: 'Component D',\n      vendorId: 'VEN-D',\n      vendorName: 'Vendor D',\n      packagingSize: 100,\n      sequence: 4,\n    },\n  ]);\n\n  mock.onPost(PURCHASE_REQUISITION_TEMPLATE).reply<IPurchaseRequisitionTemplate>(200, {\n    id: 1,\n    templateName: 'template 1',\n    purchaseRequisitionTemplateItemList: [\n      {\n        id: 1,\n        sequence: 1,\n        componentCode: 'AAA',\n        componentName: 'Component AAA',\n        vendorId: 'VA',\n        vendorName: 'Vendor A',\n        packagingSize: 100,\n      },\n      {\n        id: 2,\n        sequence: 2,\n        componentCode: 'BBB',\n        componentName: 'Component BBB',\n        vendorId: 'VA',\n        vendorName: 'Vendor A',\n        packagingSize: 100,\n      },\n      {\n        id: 3,\n        sequence: 3,\n        componentCode: 'CCC',\n        componentName: 'Component CCC',\n        vendorId: 'VA',\n        vendorName: 'Vendor A',\n        packagingSize: 100,\n      },\n      {\n        id: 4,\n        sequence: 4,\n        componentCode: 'DDD',\n        componentName: 'Component DDD',\n        vendorId: 'VA',\n        vendorName: 'Vendor A',\n        packagingSize: 100,\n      },\n    ],\n    remarks: '',\n  });\n\n  mock.onGet(PURCHASE_REQUISITION_TEMPLATE).reply<IPurchaseRequisitionTemplate[]>(200, [\n    {\n      id: 1,\n      templateName: 'Kong Long HUAT CHEMICAL',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'BEGACRON GOLDEN YELLOW 2RS 200%',\n          vendorId: 'VA',\n          vendorName: 'KONG LONG HUAT CHEMICAL SDN. BHD.',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 5,\n          sequence: 5,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 6,\n          sequence: 6,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 7,\n          sequence: 7,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 8,\n          sequence: 8,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 9,\n          sequence: 9,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 10,\n          sequence: 10,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 1,\n      templateName: 'template 1',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'Component AAA',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 1,\n      templateName: 'template 1',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'Component AAA',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 1,\n      templateName: 'template 1',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'Component AAA',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 1,\n      templateName: 'template 1',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'Component AAA',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 1,\n      templateName: 'template 1',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'Component AAA',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 1,\n      templateName: 'template 1',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'Component AAA',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 1,\n      templateName: 'template 1',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'Component AAA',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 1,\n      templateName: 'template 1',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'Component AAA',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 1,\n      templateName: 'template 1',\n      purchaseRequisitionTemplateItemList: [\n        {\n          id: 1,\n          sequence: 1,\n          componentCode: 'AAA',\n          componentName: 'Component AAA',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 2,\n          sequence: 2,\n          componentCode: 'BBB',\n          componentName: 'Component BBB',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 3,\n          sequence: 3,\n          componentCode: 'CCC',\n          componentName: 'Component CCC',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n        {\n          id: 4,\n          sequence: 4,\n          componentCode: 'DDD',\n          componentName: 'Component DDD',\n          vendorId: 'VA',\n          vendorName: 'Vendor A',\n          packagingSize: 100,\n        },\n      ],\n      remarks: '',\n    },\n  ]);\n\n  mock.onPost(PURCHASE_ORDER).reply<IPurchaseApprovalOrder>(200, {\n    id: 1,\n    createdDate: new Date(),\n    purchaseOrders: [\n      {\n        id: 1,\n        purchaseRequisitionApprovalId: 1,\n        email: 'vendor@email.com',\n        vendorId: 'BLP',\n        revisionDate: new Date(),\n        poNumber: 'PO-3729',\n        purchaseOrderItems: [\n          {\n            id: 1,\n            componentCode: 'COMP-D',\n            componentName: 'Component DDD',\n            packagingSize: 100,\n            noOfPacks: 10,\n            quantity: 1000,\n            deliveryDate: new Date(),\n            purchaseOrderId: 1,\n            itemCost: 250,\n          },\n        ],\n        emailed: true,\n        downloaded: true,\n      },\n    ],\n  });\n\n  mock.onGet(PURCHASE_ORDER).reply<IPurchaseApprovalOrder[]>(200, [\n    {\n      id: 1,\n      createdDate: new Date(),\n      purchaseOrders: [\n        {\n          id: 1,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'K101',\n          vendorName: 'KONG LONG HUAT SDN. BHD.',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n        {\n          id: 2,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'VEN-A',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n        {\n          id: 3,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'VEN-A',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n        {\n          id: 4,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'VEN-A',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n        {\n          id: 5,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'VEN-A',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n        {\n          id: 6,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'VEN-A',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n        {\n          id: 7,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'VEN-A',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n        {\n          id: 8,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'VEN-A',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n        {\n          id: 9,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'VEN-A',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n        {\n          id: 10,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorA@email.com',\n          vendorId: 'VEN-A',\n          revisionDate: new Date(),\n          poNumber: 'PO-0173',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COMA',\n              componentName: 'Component AAA',\n              packagingSize: 100,\n              noOfPacks: 10,\n              quantity: 1000,\n              deliveryDate: new Date(),\n              purchaseOrderId: 1,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n      ],\n    },\n    {\n      id: 2,\n      createdDate: new Date(),\n      purchaseOrders: [\n        {\n          id: 2,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorB@email.com',\n          vendorId: 'VEN-B',\n          revisionDate: new Date(),\n          poNumber: 'PO-3517',\n          purchaseOrderItems: [\n            {\n              id: 2,\n              componentCode: 'COM-B',\n              componentName: 'Component BBB',\n              packagingSize: 90,\n              noOfPacks: 10,\n              quantity: 900,\n              deliveryDate: new Date(),\n              purchaseOrderId: 2,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n      ],\n    },\n    {\n      id: 3,\n      createdDate: new Date(),\n      purchaseOrders: [\n        {\n          id: 3,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorC@email.com',\n          vendorId: 'VEN-C',\n          revisionDate: new Date(),\n          poNumber: 'PO-1523',\n          purchaseOrderItems: [\n            {\n              id: 3,\n              componentCode: 'COM-C',\n              componentName: 'Component CCC',\n              packagingSize: 80,\n              noOfPacks: 10,\n              quantity: 800,\n              deliveryDate: new Date(),\n              purchaseOrderId: 3,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n      ],\n    },\n    {\n      id: 4,\n      createdDate: new Date(),\n      purchaseOrders: [\n        {\n          id: 4,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorD@email.com',\n          vendorId: 'VEN-D',\n          revisionDate: new Date(),\n          poNumber: 'PO-1233',\n          purchaseOrderItems: [\n            {\n              id: 4,\n              componentCode: 'COM-D',\n              componentName: 'Component DDD',\n              packagingSize: 70,\n              noOfPacks: 10,\n              quantity: 700,\n              deliveryDate: new Date(),\n              purchaseOrderId: 4,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n      ],\n    },\n    {\n      id: 5,\n      createdDate: new Date('2021-11-10'),\n      purchaseOrders: [\n        {\n          id: 5,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorE@email.com',\n          vendorId: 'VEN-E',\n          revisionDate: new Date('2021-11-10'),\n          poNumber: 'PO-2101',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COM-E',\n              componentName: 'Component EEE',\n              packagingSize: 60,\n              noOfPacks: 10,\n              quantity: 600,\n              deliveryDate: new Date(),\n              purchaseOrderId: 5,\n              itemCost: 250,\n            },\n          ],\n          emailed: false,\n          downloaded: false,\n        },\n      ],\n    },\n    {\n      id: 6,\n      createdDate: new Date('2021-11-03'),\n      purchaseOrders: [\n        {\n          id: 6,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorF@email.com',\n          vendorId: 'VEN-F',\n          revisionDate: new Date('2021-11-03'),\n          poNumber: 'PO-3734',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COM-F',\n              componentName: 'Component FFF',\n              packagingSize: 50,\n              noOfPacks: 5,\n              quantity: 250,\n              deliveryDate: new Date(),\n              purchaseOrderId: 6,\n              itemCost: 250,\n            },\n          ],\n          emailed: true,\n          downloaded: true,\n        },\n      ],\n    },\n    {\n      id: 7,\n      createdDate: new Date('2021-11-02'),\n      purchaseOrders: [\n        {\n          id: 7,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorG@email.com',\n          vendorId: 'VEN-G',\n          revisionDate: new Date('2021-11-02'),\n          poNumber: 'PO-32649',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COM-G',\n              componentName: 'Component GGG',\n              packagingSize: 40,\n              noOfPacks: 5,\n              quantity: 200,\n              deliveryDate: new Date(),\n              purchaseOrderId: 7,\n              itemCost: 250,\n            },\n          ],\n          emailed: true,\n          downloaded: true,\n        },\n      ],\n    },\n    {\n      id: 8,\n      createdDate: new Date('2021-11-01'),\n      purchaseOrders: [\n        {\n          id: 8,\n          purchaseRequisitionApprovalId: 1,\n          email: 'vendorH@email.com',\n          vendorId: 'VEN-H',\n          revisionDate: new Date('2021-11-01'),\n          poNumber: 'PO-17631',\n          purchaseOrderItems: [\n            {\n              id: 1,\n              componentCode: 'COM-H',\n              componentName: 'Component HHH',\n              packagingSize: 45,\n              noOfPacks: 5,\n              quantity: 225,\n              deliveryDate: new Date(),\n              purchaseOrderId: 8,\n              itemCost: 250,\n            },\n          ],\n          emailed: true,\n          downloaded: true,\n        },\n      ],\n    },\n  ]);\n\n  mock.onGet(PURCHASE_REQUISITION_APPROVAL).reply<IPurchaseRequisitionApproval[]>(200, [\n    {\n      id: 0,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 0)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks:\n        'aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa aaaaa ',\n    },\n    {\n      id: 1,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 1)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 2,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 2)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 3,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 3)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 4,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 4)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 5,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 5)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 6,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 6)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 7,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 7)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 8,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 8)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks: '',\n    },\n    {\n      id: 9,\n      createdDate: new Date(new Date().setDate(new Date().getDate() - 9)),\n      purchaseRequisitionApprovalItems: [\n        {\n          id: 0,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.TO_CONFIRM,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 1,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 2,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.ISSUED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 3,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 4,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 5,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 6,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 7,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 8,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 9,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 10,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 11,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n        {\n          id: 12,\n          itemCost: 100,\n          status: PurchaseRequisitionApprovalStatus.CONFIRMED,\n          componentCode: 'ABC',\n          componentName: 'ABC',\n          vendorName: 'Company AAA',\n          stockBalance: 99,\n          packagingSize: 100,\n          noOfPacks: 1000,\n          quantity: 100000,\n          deliveryDate: new Date(),\n          balance: 999999,\n        },\n      ],\n      remarks: '',\n    },\n  ]);\n\n  mock.onGet(PURCHASE_ORDER_OUTSTANDING_ITEM + '?vendorId=Vendor 1').reply<IPurchaseOrderItem[]>(\n    200,\n    (() => {\n      const elem: IPurchaseOrderItem[] = [];\n      for (let index = 0; index < 100; index++) {\n        const currentIndexPlus_1 = index + 1;\n        elem.push({\n          id: currentIndexPlus_1,\n          purchaseOrderId: currentIndexPlus_1,\n          componentCode: `componentCode ${currentIndexPlus_1}`,\n          componentName: `componentName ${currentIndexPlus_1}`,\n          packagingSize: currentIndexPlus_1,\n          noOfPacks: currentIndexPlus_1,\n          quantity: currentIndexPlus_1,\n          deliveryDate: new Date(),\n          itemCost: currentIndexPlus_1,\n          uom: `uom ${currentIndexPlus_1}`,\n          openQuantity: currentIndexPlus_1,\n          openQuantityPack: currentIndexPlus_1,\n          orderQuantity: currentIndexPlus_1,\n          orderQuantityPack: currentIndexPlus_1,\n          poNumber: `poNumber ${currentIndexPlus_1}`,\n          receivedQuantity: currentIndexPlus_1,\n          receivedQuantityPack: currentIndexPlus_1,\n          receivingQuantity: currentIndexPlus_1,\n          receivingQuantityPack: currentIndexPlus_1,\n          remarks: currentIndexPlus_1,\n          status: `PENDING`,\n          uomPack: currentIndexPlus_1,\n          vendorId: `vendorId ${currentIndexPlus_1}`,\n          vendorName: `vendorName ${currentIndexPlus_1}`,\n        });\n      }\n      return elem;\n    })()\n  );\n\n  mock.onGet(FAVOURITE_VENDOR).reply<IFavouriteVendor[]>(\n    200,\n    (() => {\n      const lst: IFavouriteVendor[] = [];\n      for (let index = 0; index < 10; index++) {\n        lst.push({\n          id: index,\n          vendorId: `Vendor ${index + 1}`,\n          createdBy: '',\n          createdDate: new Date(),\n        });\n      }\n      return lst;\n    })()\n  );\n  mock.onPost(LOGIN).reply<string>(200, 'ADMIN');\n\n  console.log(mock);\n} else {\n  mock = {} as MockAdapter;\n}\n\nconst getMock = () => mock;\n\nexport default getMock;\n","import { useEffect } from 'react';\nimport List from 'antd/lib/list';\nimport { DownOutlined, UndoOutlined, UpOutlined } from '@ant-design/icons';\nimport Checkbox, { CheckboxChangeEvent } from 'antd/lib/checkbox/Checkbox';\n\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { ITableColumnDisplaySettings } from '@dto/i-table-columns';\nimport DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS from '@constant/purchase-order-receipt-creation/purchase-order-receipt-creation-table-display-settings';\nimport { popNotification } from '@module/shared/components/notification';\nimport { NotificationType } from '@constant/notification.enum';\nimport { Button } from 'antd';\n\ninterface IPurchaseOrderReceiptCreationColumnFilterProps {\n  tableColumnDisplaySettings?: ITableColumnDisplaySettings[];\n  setTableColumnDisplaySettings: (columnFilters: ITableColumnDisplaySettings[]) => void;\n}\n\nconst PurchaseOrderReceiptCreationTableDisplaySettings: React.FC<IPurchaseOrderReceiptCreationColumnFilterProps> = (props) => {\n  const setTableColumnDisplaySettings = props.setTableColumnDisplaySettings;\n  const tableColumnDisplaySettings = props.tableColumnDisplaySettings;\n\n  const TABLE_DISPLAY_SETTINGS_NAME: string = 'purchaseOrderReceiptCreationTableDisplaySettings';\n\n  useEffect(() => {\n    const savedPurchaseOrderReceiptCreationTableDisplaySettings = localStorage.getItem(TABLE_DISPLAY_SETTINGS_NAME);\n\n    if (savedPurchaseOrderReceiptCreationTableDisplaySettings) {\n      const parsedSavedPurchaseOrderReceiptCreationTableDisplaySettings: ITableColumnDisplaySettings[] = JSON.parse(savedPurchaseOrderReceiptCreationTableDisplaySettings);\n      setTableColumnDisplaySettings(parsedSavedPurchaseOrderReceiptCreationTableDisplaySettings);\n    } else {\n      setTableColumnDisplaySettings(DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS);\n      saveDisplaySettings(DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (tableColumnDisplaySettings) {\n      saveDisplaySettings(tableColumnDisplaySettings);\n    }\n  }, [tableColumnDisplaySettings]);\n\n  const saveDisplaySettings = (tableColumnDisplaySettings: ITableColumnDisplaySettings[]) => {\n    /**\n     * Only save it in non local environment\n     */\n    if (process.env.NODE_ENV !== 'development') {\n      localStorage.setItem(TABLE_DISPLAY_SETTINGS_NAME, JSON.stringify(tableColumnDisplaySettings));\n    }\n  };\n\n  const updateVisibility = (e: CheckboxChangeEvent, item: ITableColumnDisplaySettings) => {\n    if (tableColumnDisplaySettings) {\n      const updatedTableColumnDisplaySettings = CLONING_LIB.deepClone(tableColumnDisplaySettings).map((setting) => {\n        if (setting.columnKey === item.columnKey) {\n          setting.visible = e.target.checked;\n        }\n        return setting;\n      });\n      setTableColumnDisplaySettings(updatedTableColumnDisplaySettings);\n    }\n  };\n\n  const resetTableDisplaySettings = () => {\n    localStorage.removeItem(TABLE_DISPLAY_SETTINGS_NAME);\n    setTableColumnDisplaySettings(DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS);\n    saveDisplaySettings(DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS);\n  };\n\n  const moveColumn = (item: ITableColumnDisplaySettings, moveIndex: number) => {\n    if (tableColumnDisplaySettings) {\n      /**\n       * - Find index of item\n       * - Check validity of moving range\n       * - Move\n       */\n      const currentIndex = tableColumnDisplaySettings.findIndex((setting) => setting.columnKey === item.columnKey);\n      const indexInBound = currentIndex + moveIndex >= 0 && currentIndex + moveIndex <= tableColumnDisplaySettings.length - 1;\n\n      if (indexInBound) {\n        let updatedTableColumnDisplaySettings = CLONING_LIB.deepClone(tableColumnDisplaySettings);\n\n        /**\n         * - Backup destination item\n         * - Replace destination item with current item\n         * - Replace current item with backed destination item\n         */\n        const destinationItem = updatedTableColumnDisplaySettings[currentIndex + moveIndex];\n        updatedTableColumnDisplaySettings[currentIndex + moveIndex] = item;\n        updatedTableColumnDisplaySettings[currentIndex] = destinationItem;\n        setTableColumnDisplaySettings([...updatedTableColumnDisplaySettings]);\n      } else {\n        popNotification('Cannot move outside of sequence range', NotificationType.warning);\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"d-flex flex-column justify-content-between h-100\">\n        <List\n          dataSource={tableColumnDisplaySettings}\n          itemLayout=\"vertical\"\n          style={{ width: 200 }}\n          renderItem={(item, index) => {\n            return (\n              <List.Item key={item.columnKey}>\n                <div className=\"d-flex justify-content-between\">\n                  <Checkbox className=\"align-self-center\" checked={item.visible} onChange={(e) => updateVisibility(e, item)} disabled={!item.visibilityEditable} />\n                  <span className=\"align-self-center\">{item.settingDisplayName}</span>\n                  <div className=\"d-flex flex-column align-self-center mx-3\">\n                    <UpOutlined onClick={() => moveColumn(item, -1)} />\n                    <DownOutlined onClick={() => moveColumn(item, 1)} />\n                  </div>\n                </div>\n              </List.Item>\n            );\n          }}\n        />\n        <Button onClick={resetTableDisplaySettings} icon={<UndoOutlined style={{ transform: 'translateY(-3px)' }} />}>\n          Reset\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseOrderReceiptCreationTableDisplaySettings;\n","import { FormOutlined, SettingOutlined } from '@ant-design/icons';\nimport { createPurchaseOrderReceiptHeader } from '@api/purchase-order-receipt.api';\nimport { getGrnReceiptWithVendorOutstandingPO, getOutstandingPurchaseOrder } from '@api/purchase-order.api';\nimport { ApiResponseStatus } from '@constant/api-status.enum';\nimport { APP_CONTENT_MARGIN } from '@constant/display/content.constant';\nimport { APP_HEADER_HEIGHT } from '@constant/display/header.constant';\nimport {\n  PURCHASE_ORDER_RECEIPT_CREATION_BOTTOM_TOOLS_HEIGHT,\n  PURCHASE_ORDER_RECEIPT_CREATION_TITLE_HEIGHT,\n  PURCHASE_ORDER_RECEIPT_CREATION_TOP_TOOLS_HEIGHT,\n} from '@constant/display/purchase-order-receipt-creation.constant';\nimport { NotificationType } from '@constant/notification.enum';\nimport DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS from '@constant/purchase-order-receipt-creation/purchase-order-receipt-creation-table-display-settings';\nimport { PurchaseOrderReceiptItemStatus } from '@constant/purchase-order-receipt-item-status.enum';\nimport { IPurchaseOrderItem } from '@dto/i-purchase-order-item.dto';\nimport { IPurchaseOrderReceiptItem } from '@dto/i-purchase-order-receipt-item.dto';\nimport { ITableColumnDisplaySettings } from '@dto/i-table-columns';\nimport { IWindowSize, useWindowResized } from '@hook/window-resized.hook';\nimport { popNotification } from '@module/shared/components/notification';\nimport { setLoading } from '@module/shared/reducers/app-reducers';\nimport { useQuery } from '@utils/api/query-params-hook';\nimport CLONING_LIB from '@utils/cloning/cloning-lib-wrapper';\nimport { getSearchText, SearchEngine } from '@utils/search/native-search';\nimport { Button, Drawer, Input, Popover, Table } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PurchaseOrderReceiptHeaderInfo from '../components/receipt-header-info/receipt-header-info';\nimport PurchaseOrderReceiptCreationRequestConstructor from '../components/request-constructor/request-constructor';\nimport generateIndex from '../components/request-constructor/request-constructor-indexer';\nimport PurchaseOrderReceiptCreationRequestRemarks from '../components/request-remark/request-remark';\nimport PurchaseOrderReceiptCreationTableDisplaySettings from '../components/table-column-display-settings/table-column-display-settings';\n\ninterface IPurchaseOrderReceiptCreationPageProps extends StateProps, DispatchProps, RouteComponentProps<{ vendorId: string }> {}\n\nconst PurchaseOrderReceiptCreationPage: React.FC<IPurchaseOrderReceiptCreationPageProps> = (props: IPurchaseOrderReceiptCreationPageProps) => {\n  const [submissionInProgress, setSubmissionInProgress] = useState<boolean>(false);\n  const [purchaseOrderItem, setPurchaseOrderItem] = useState<IPurchaseOrderItem[]>();\n  const [searchResult, setSearchResult] = useState<IPurchaseOrderItem[]>();\n  const searchEngine: SearchEngine<IPurchaseOrderItem> = new SearchEngine([], generateIndex);\n  const [doNumber, setDONumber] = useState<string>('');\n  const [remarks, setRemarks] = useState<string>('');\n  const [reference, setReference] = useState<string>('');\n  const [showRemarksSider, setShowRemarksSider] = useState<boolean>(false);\n  const [tableColumnDisplaySettings, setTableColumnDisplaySettings] = useState<ITableColumnDisplaySettings[]>();\n  const [tableColumnDisplaySettingsUpdateTime, setTableColumnDisplaySettingsUpdateTime] = useState<Date>(new Date());\n  const [showTableDisplaySettings, setShowTableDisplaySettings] = useState<boolean>(false);\n  const windowSize: IWindowSize = useWindowResized();\n  const queryParams = useQuery();\n  const [grnNo, setGrnNo] = useState(queryParams.get('grnNo'));\n  const PURCHASE_ORDER_RECEIPT_CREATION_CONSTRUCTOR_WRAPPER_HEIGHT_CONSTRAINT: number =\n    APP_HEADER_HEIGHT + APP_CONTENT_MARGIN + PURCHASE_ORDER_RECEIPT_CREATION_TITLE_HEIGHT + PURCHASE_ORDER_RECEIPT_CREATION_TOP_TOOLS_HEIGHT + PURCHASE_ORDER_RECEIPT_CREATION_BOTTOM_TOOLS_HEIGHT;\n\n  const { vendorId } = props.match.params;\n\n  useEffect(() => {\n    (async () => {\n      let apiResponse;\n\n      if (grnNo && grnNo != null && grnNo.trim() !== '') {\n        apiResponse = await getGrnReceiptWithVendorOutstandingPO(vendorId, grnNo);\n      } else {\n        apiResponse = await getOutstandingPurchaseOrder(vendorId);\n      }\n\n      if (apiResponse && apiResponse.status === ApiResponseStatus.SUCCESS) {\n        const purchaseOrderItemDeepCopy: IPurchaseOrderItem[] = CLONING_LIB.deepClone(apiResponse.data);\n        const searchResultDeepCopy: IPurchaseOrderItem[] = CLONING_LIB.deepClone(apiResponse.data);\n        setPurchaseOrderItem(purchaseOrderItemDeepCopy);\n        setSearchResult(searchResultDeepCopy);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [vendorId]);\n\n  useEffect(() => {\n    const savedPurchaseOrderReceiptCreationTableDisplaySettings = localStorage.getItem('purchaseOrderReceiptCreationTableDisplaySettings');\n    if (savedPurchaseOrderReceiptCreationTableDisplaySettings) {\n      const parsedSavedPurchaseOrderReceiptCreationTableDisplaySettings: ITableColumnDisplaySettings[] = JSON.parse(savedPurchaseOrderReceiptCreationTableDisplaySettings);\n      setTableColumnDisplaySettings(parsedSavedPurchaseOrderReceiptCreationTableDisplaySettings);\n    } else {\n      setTableColumnDisplaySettings(DEFAULT_PURCHASE_ORDER_RECEIPT_CREATION_TABLE_DISPLAY_SETTINGS);\n    }\n  }, []);\n\n  /**\n   * Update the tableColumnDisplaySettingsUpdateTime to latest date if it is being modified\n   */\n  useEffect(() => {\n    setTableColumnDisplaySettingsUpdateTime(new Date());\n  }, [tableColumnDisplaySettings]);\n\n  const handleSearch = (value: string, event: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLInputElement> | undefined) => {\n    props.setLoading(true);\n    console.group('Search [PurchaseOrderReceiptCreationTable]');\n    console.log('value >>: ', value);\n    console.log('event >>: ', event);\n    if (purchaseOrderItem) {\n      console.log('purchaseOrderItem >>: ', purchaseOrderItem);\n      const sanitisedSearchText: string = getSearchText(value);\n      const searchOutput = searchEngine.updateEngine(purchaseOrderItem).search(sanitisedSearchText);\n      setSearchResult(searchOutput);\n    }\n    setTimeout(function () {\n      props.setLoading(false);\n    }, 500);\n    console.groupEnd();\n  };\n\n  const openTableDisplaySettings = () => {\n    setShowTableDisplaySettings(!showTableDisplaySettings);\n  };\n\n  const openRemarksSider = () => {\n    setShowRemarksSider(!showRemarksSider);\n  };\n\n  const updatePurchaseOrderReceiptItem = (list: IPurchaseOrderItem[]) => {\n    if (searchResult) {\n      const updatedList = CLONING_LIB.deepClone(list);\n      setSearchResult(updatedList);\n    }\n  };\n\n  const submitPurchaseOrderReceiptCreation = async () => {\n    setSubmissionInProgress(true);\n    if (purchaseOrderItem) {\n      const purchaseOrderReceiptItems: IPurchaseOrderReceiptItem[] = (searchResult || [])\n        .filter((item) => item.status === PurchaseOrderReceiptItemStatus.CONFIRMED)\n        .map((item) => {\n          return {\n            ...item,\n            pid: item.id,\n            unitCost: item.itemCost,\n          } as IPurchaseOrderReceiptItem;\n        })\n        .filter((item) => {\n          return item.receivingQuantity && item.receivingQuantity > 0;\n        });\n      const purchaseOrderReceiptHeader = {\n        id: null,\n        grnNo: grnNo ?? '',\n        doNumber: doNumber ?? '',\n        grnDate: new Date(),\n        vendorID: vendorId,\n        poReceiptDtoList: purchaseOrderReceiptItems,\n      };\n\n      const result = await createPurchaseOrderReceiptHeader(purchaseOrderReceiptHeader);\n      if (result) {\n        setSubmissionInProgress(false);\n        if (result.status === ApiResponseStatus.SUCCESS) {\n          popNotification('Successfully Create PO Receipt', NotificationType.success);\n        }\n      }\n    }\n  };\n\n  // TODO: [LU] Declaring component inside component is causing slow performance\n  // FIXME: [LU] Please do not use search result as filtering, should update the original list and trigger useEffect to search afterwards\n  const checkPurchaseOrderReceiptCreation = () => {\n    console.log('Popup Modal to show receiving items');\n    console.log(PurchaseOrderReceiptItemStatus.CONFIRMED);\n    console.log(searchResult);\n    const confirmedItems = CLONING_LIB.deepClone(searchResult ?? []).filter((item) => item.status === PurchaseOrderReceiptItemStatus.CONFIRMED);\n    console.log(confirmedItems);\n    return (\n      <Table dataSource={confirmedItems}>\n        <Table.Column title=\"Component Code\" align=\"center\" dataIndex=\"componentCode\" key=\"componentCode\" />\n        <Table.Column title=\"Receiving Qty(packs)\" align=\"center\" dataIndex=\"receivingQuantityPack\" key=\"receivingQuantityPack\" />\n        <Table.Column title=\"Receiving Qty(kgs)\" align=\"center\" dataIndex=\"receivingQuantity\" key=\"receivingQuantity\" />\n      </Table>\n    );\n  };\n\n  const completePurchaseOrderReceiptCreation = () => {\n    console.log('Done PO Receipt Creation');\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\" style={{ height: `${PURCHASE_ORDER_RECEIPT_CREATION_TITLE_HEIGHT}px` }}>\n          <div className=\"col d-flex flex-column justify-content-center\">\n            <Title level={4}>Purchase Order Receipt Creation</Title>\n          </div>\n        </div>\n\n        <div style={{ height: `${PURCHASE_ORDER_RECEIPT_CREATION_TOP_TOOLS_HEIGHT}px` }}>\n          <div>\n            <PurchaseOrderReceiptHeaderInfo vendorId={vendorId} doNumber={doNumber} setDONumber={setDONumber} grnNo={grnNo} setGrnNo={setGrnNo} />\n          </div>\n          <div className=\"d-flex float-end\">\n            <Input.Search placeholder=\"Search\" onSearch={handleSearch} allowClear></Input.Search>\n            <Button onClick={openRemarksSider} style={{ width: '50px' }} icon={<FormOutlined />}></Button>\n            <Button onClick={openTableDisplaySettings} style={{ width: '50px' }} icon={<SettingOutlined />}></Button>\n          </div>\n        </div>\n\n        <div\n          className=\"row\"\n          style={{\n            height: `${windowSize.height - PURCHASE_ORDER_RECEIPT_CREATION_CONSTRUCTOR_WRAPPER_HEIGHT_CONSTRAINT}px`,\n          }}\n        >\n          <div className=\"col\">\n            <PurchaseOrderReceiptCreationRequestConstructor\n              searchResult={searchResult ?? []}\n              updatePurchaseOrderReceiptItem={updatePurchaseOrderReceiptItem}\n              tableColumnDisplaySettings={tableColumnDisplaySettings}\n              tableColumnDisplaySettingsUpdateTime={tableColumnDisplaySettingsUpdateTime}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\" style={{ height: `${PURCHASE_ORDER_RECEIPT_CREATION_BOTTOM_TOOLS_HEIGHT}px` }}>\n          <div className=\"col\">\n            <Button type=\"primary\" size=\"large\" onClick={submitPurchaseOrderReceiptCreation} disabled={submissionInProgress}>\n              Submit Receiving\n            </Button>\n            <Popover content={checkPurchaseOrderReceiptCreation} trigger=\"click\">\n              <Button className=\"mx-4 input-group-btn\" type=\"default\" size=\"large\" disabled={submissionInProgress}>\n                Check Receiving\n              </Button>\n            </Popover>\n          </div>\n          <div className=\"col d-flex flex-column align-items-end\">\n            <Button className=\"mx-4 input-group-btn\" type=\"default\" size=\"large\" onClick={completePurchaseOrderReceiptCreation} disabled={submissionInProgress}>\n              Done\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <Drawer title=\"Column Settings\" placement=\"right\" onClose={openTableDisplaySettings} visible={showTableDisplaySettings}>\n        <PurchaseOrderReceiptCreationTableDisplaySettings tableColumnDisplaySettings={tableColumnDisplaySettings} setTableColumnDisplaySettings={setTableColumnDisplaySettings} />\n      </Drawer>\n\n      <Drawer title=\"Remarks & Reference\" placement=\"right\" width=\"max-content\" onClose={openRemarksSider} visible={showRemarksSider}>\n        <PurchaseOrderReceiptCreationRequestRemarks remarks={remarks} setRemarks={setRemarks} reference={reference} setReference={setReference} />\n      </Drawer>\n    </>\n  );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  setLoading,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseOrderReceiptCreationPage);\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport function useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","export const PURCHASE_ORDER_RECEIPT_CREATION_TITLE_HEIGHT: number = 40;\nexport const PURCHASE_ORDER_RECEIPT_CREATION_TOP_TOOLS_HEIGHT: number = 120;\nexport const PURCHASE_ORDER_RECEIPT_CREATION_BOTTOM_TOOLS_HEIGHT: number = 60;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport PageRefresh from './shared/components/refresh-route';\nimport PostLogInRoute from './shared/components/post-login-route';\nimport SwitchWithFallback from './shared/components/switch-with-fallback';\n\nimport LoginPage from './login/pages/login';\nimport PurchaseRequisitionTemplateRoute from './purchase-requisition-template/pages';\nimport PurchaseRequisitionRequestPage from './purchase-requisition-request/pages/purchase-requisition-request-page';\nimport PurchaseRequisitionApprovalPage from './purchase-requisition-approval/pages/purchase-requisition-approval-page';\nimport PurchaseRequisitionSubmissionPage from './purchase-requisition-submissioin-record/pages/purchase-requisition-submission-page';\nimport PurchaseOrderPage from './purchase-order/pages/purchase-order-page';\nimport OutstandingPurchaseOrderPage from './outstading-purchase-order/pages/outstanding-purchase-order-page';\nimport OutstandingPurchaseOrderByVendorPage from './outstanding-purchase-order-by-vendor/page/outstanding-purchase-order-by-vendor-page';\nimport PurchaseOrderReceiptRecordPage from './purchase-order-receipt-record/pages/purchase-order-receipt-record-page';\nimport PurchaseOrderReceiptCreationPage from './purchase-order-receipt-creation/pages/purchase-order-receipt-creation-page';\nimport { UserAuthority } from '@constant/user-authority.enum';\n\nconst Routes: React.FC = () => {\n  return (\n    <SwitchWithFallback>\n      <Route exact path=\"/\" component={LoginPage} />\n      <Route path=\"/page-refresh/:destination\" component={PageRefresh} /> {/* TODO: @LUXIANZE Remove this before production deployment */}\n      <PostLogInRoute authority={UserAuthority.ADMIN} path=\"/purchase-requisition-template\" component={PurchaseRequisitionTemplateRoute} />\n      <PostLogInRoute authority={UserAuthority.NORMAL} path=\"/purchase-requisition-request\" component={PurchaseRequisitionRequestPage} />\n      <PostLogInRoute authority={UserAuthority.ADMIN} path=\"/purchase-requisition-submission-record\" component={PurchaseRequisitionSubmissionPage} />\n      <PostLogInRoute authority={UserAuthority.ADMIN} path=\"/purchase-requisition-approval\" component={PurchaseRequisitionApprovalPage} />\n      <PostLogInRoute authority={UserAuthority.ADMIN} path=\"/purchase-order\" component={PurchaseOrderPage} />\n      <PostLogInRoute authority={UserAuthority.ADMIN} path=\"/outstanding-purchase-order\" component={OutstandingPurchaseOrderPage} />\n      <PostLogInRoute authority={UserAuthority.ADMIN} path=\"/outstanding-purchase-order-by-vendor\" component={OutstandingPurchaseOrderByVendorPage} />\n      <PostLogInRoute authority={UserAuthority.ADMIN} path=\"/purchase-order-receipt-record\" component={PurchaseOrderReceiptRecordPage} />\n      <PostLogInRoute authority={UserAuthority.ADMIN} path=\"/purchase-order-receipt-creation/:vendorId/:grnNo?\" component={PurchaseOrderReceiptCreationPage} />\n    </SwitchWithFallback>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\n\nimport './header.less';\nimport { Button } from 'antd';\nimport { MenuOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\n\nimport { IRootState } from '@module/shared/reducers';\nimport { logout } from '@module/shared/reducers/app-reducers';\nimport { useHistory } from 'react-router-dom';\n\ninterface IHeaderProps extends StateProps, DispatchProps {\n  readonly sideBarOpened: boolean;\n  readonly triggerSideBar: () => void;\n}\n\nconst Header: React.FC<IHeaderProps> = (props) => {\n  const history = useHistory();\n\n  const logInLogOutHandler = () => {\n    if (props.loggedIn) {\n      props.logout();\n    } else {\n      history.push('/');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"d-flex header shadow justify-content-between\">\n        <div className=\"d-flex align-items-center h-100\">\n          {props.loggedIn && <Button icon={<MenuOutlined style={{ color: '#FFFFFF', fontSize: '22px' }} />} block type=\"link\" size=\"large\" className=\"mx-3\" onClick={props.triggerSideBar}></Button>}\n        </div>\n        <div className=\"d-flex align-items-center h-100\">\n          <Button className=\"mx-3\" type=\"default\" onClick={logInLogOutHandler}>\n            {props.loggedIn ? 'Log out' : 'Log in'}\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ appState }: IRootState) => ({\n  loggedIn: appState.loggedIn,\n});\n\nconst mapDispatchToProps = {\n  logout,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import { DownloadOutlined, FileDoneOutlined, FileOutlined, FileTextOutlined, HistoryOutlined, LaptopOutlined, DatabaseOutlined, FileSyncOutlined } from '@ant-design/icons';\nimport { Drawer, Menu } from 'antd';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\n\ninterface IAppSider {\n  sideBarOpened: boolean;\n  toggleSidebar?: () => void;\n}\n\nconst AppSider: React.FC<IAppSider> = (props) => {\n  return (\n    <>\n      {/* <Sider theme=\"light\" trigger={null} collapsible collapsed={props.sideBarOpened} width={300} collapsedWidth={0} className=\"shadow\"> */}\n      <Drawer\n        title={\n          <span className=\"d-inline-flex align-items-center text-white\">\n            <LaptopOutlined />\n            &nbsp;&nbsp;Purchasing System\n          </span>\n        }\n        placement=\"left\"\n        onClose={props.toggleSidebar}\n        closable={false}\n        visible={props.sideBarOpened}\n        key=\"app-sidebar\"\n        headerStyle={{\n          height: '58px',\n          minHeight: '58px',\n          backgroundColor: '#721959',\n        }}\n        bodyStyle={{ padding: 0 }}\n      >\n        <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={['1']}>\n          <Menu.Item key=\"1\" icon={<FileOutlined />}>\n            <Link className=\"router-link\" to=\"/purchase-requisition-template\">\n              Purchase Template\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<FileTextOutlined />}>\n            <Link className=\"router-link\" to=\"/purchase-requisition-request\">\n              Purchase Requisition\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<HistoryOutlined />}>\n            <Link className=\"router-link\" to=\"/purchase-requisition-submission-record\">\n              Submission Record\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\" icon={<FileDoneOutlined />}>\n            <Link className=\"router-link\" to=\"/purchase-requisition-approval\">\n              Purchase Approval\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"5\" icon={<DownloadOutlined />}>\n            <Link className=\"router-link\" to=\"/purchase-order\">\n              Download PO\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"6\" icon={<FileSyncOutlined />}>\n            <Link className=\"router-link\" to=\"/outstanding-purchase-order\">\n              Outstanding PO\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"7\" icon={<FileSyncOutlined />}>\n            <Link className=\"router-link\" to=\"/outstanding-purchase-order-by-vendor\">\n              Outstanding PO By Vendor\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"9\" icon={<DatabaseOutlined />}>\n            <Link className=\"router-link\" to=\"/purchase-order-receipt-record\">\n              PO Receipt Record\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Drawer>\n      {/* </Sider> */}\n    </>\n  );\n};\n\nexport default AppSider;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport 'antd/dist/antd.less';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport Layout, { Content } from 'antd/lib/layout/layout';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.less';\nimport Routes from './modules/Routes';\nimport Header from '@module/layout/component/header/header';\nimport AppSider from '@module/layout/component/sider/sider';\n// import getMock from '@api/api-mocks.api';\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport { IRootState } from '@module/shared/reducers';\nimport getMock from '@api/api-mocks.api';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCA2V4P-KjtLt4QdVK4Cd8VjC0zC6reOBk',\n  authDomain: 'engseen-purchaserequisition.firebaseapp.com',\n  projectId: 'engseen-purchaserequisition',\n  storageBucket: 'engseen-purchaserequisition.appspot.com',\n  messagingSenderId: '936694149752',\n  appId: '1:936694149752:web:7ca5674682789b3e21b38d',\n  measurementId: 'G-2Z0L5N2FQH',\n};\n\nif (process.env.NODE_ENV === 'production') {\n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n  getAnalytics(app);\n  getMock();\n}\n\nexport interface IAppProps extends StateProps, DispatchProps {}\n\nconst App: React.FC<IAppProps> = (props: IAppProps) => {\n  const [sideBarOpened, setSideBarOpened] = useState(false);\n\n  const triggerSideBar: () => void = () => {\n    setSideBarOpened(!sideBarOpened);\n  };\n\n  const { loading } = props;\n\n  return (\n    <>\n      <Router>\n        <Layout className=\"h-100\">\n          <AppSider sideBarOpened={sideBarOpened} toggleSidebar={triggerSideBar} />\n          <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}>\n            <Layout>\n              <Header triggerSideBar={triggerSideBar} sideBarOpened={sideBarOpened} />\n              <Content className=\"px-3 pt-3 page\" style={{ backgroundColor: '#ffffff' }}>\n                <Routes />\n              </Content>\n            </Layout>\n          </Spin>\n        </Layout>\n      </Router>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ appState }: IRootState) => ({\n  loading: appState.loading,\n});\n\nconst mapDispatchToProps = {};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport appReducer, { IAppState } from './app-reducers';\n\nexport interface IRootState {\n  readonly appState: IAppState,\n}\n\nconst rootReducer = combineReducers({\n  appState: appReducer\n});\n\nexport default rootReducer;","import { initialState } from '@module/shared/reducers/app-reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../shared/reducers';\n\nconst store = createStore(reducers, { appState: initialState }, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from '@module/config/store';\nimport axios from 'axios';\nimport 'dotenv/config';\nimport { setLoading } from '@module/shared/reducers/app-reducers';\n\n// TODO: Temporary Axios Setting\n// const TIMEOUT = 1 * 60 * 1000;\n// axios.defaults.timeout = TIMEOUT;\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.validateStatus = (status) => status <= 500; // return all status\naxios.interceptors.request.use((req) => {\n  setLoading(true);\n  return req;\n});\naxios.interceptors.response.use(\n  (res) => {\n    setLoading(false);\n    return res;\n  },\n  (err) => {\n    setLoading(false);\n    return Promise.reject(err);\n  }\n);\n// End Temporary Axios Setting\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}